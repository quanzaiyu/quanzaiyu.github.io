(window.webpackJsonp=window.webpackJsonp||[]).push([[552],{762:function(a,t,s){"use strict";s.r(t);var e=s(1),n=Object(e.a)({},function(){var a=this,t=a.$createElement,s=a._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h1",{attrs:{id:"在-kubernetes-集群中部署-dashboard"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#在-kubernetes-集群中部署-dashboard","aria-hidden":"true"}},[a._v("#")]),a._v(" 在 Kubernetes 集群中部署 DashBoard")]),a._v(" "),s("p",[a._v("Kubernetes Dashboard就是k8s集群的webui，集合了所有命令行可以操作的所有命令。")]),a._v(" "),s("p",[a._v("安装方式如下:")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("$ kubectl create -f https://raw.githubusercontent.com/kubernetes/dashboard/master/aio/deploy/recommended/kubernetes-dashboard.yaml\n")])])]),s("p",[a._v("::: tip 小技巧\n由于后面的操作都是在 kube-system 名称空间中进行，可以设置个别名 ksys=kubectl -n kube-system 这样就可以使用ksys操作该名称空间了\n命令："),s("code",[a._v("alias ksys='kubectl -n kube-system'")]),a._v(", 重启后无效\n或者修改 "),s("code",[a._v("~/.bashrc")]),a._v(", 加入 "),s("code",[a._v("alias ksys='kubectl -n kube-system'")]),a._v(", 然后 "),s("code",[a._v("source ~/.bashrc")]),a._v(" 使其生效, 这样重启后仍然有效\n:::")]),a._v(" "),s("p",[a._v("安装完后查看pod信息")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("$ ksys get po "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# `kubectl --namespace kube-system get pods` 的缩写")]),a._v("\nNAME                                      READY   STATUS    RESTARTS   AGE\ncoredns-86c58d9df4-gbgzx                  1/1     Running   0          4h45m\ncoredns-86c58d9df4-kzljk                  1/1     Running   0          4h45m\netcd-miwifi-r1cm-srv                      1/1     Running   0          4h44m\nkube-apiserver-miwifi-r1cm-srv            1/1     Running   0          4h44m\nkube-controller-manager-miwifi-r1cm-srv   1/1     Running   0          4h44m\nkube-flannel-ds-amd64-kwx59               1/1     Running   0          4h34m\nkube-proxy-9c8cs                          1/1     Running   0          4h45m\nkube-scheduler-miwifi-r1cm-srv            1/1     Running   0          4h44m\nkubernetes-dashboard-57df4db6b-5j2gv      1/1     Running   0          4h8m\n")])])]),s("p",[a._v("可以看到多了一个kubernetes-dashboard-57df4db6b-bn5vn，并且已经正常启动。")]),a._v(" "),s("p",[a._v("如果 kubernetes-dashboard-57df4db6b-5j2gv 状态为 "),s("code",[a._v("ImagePullBackOff")]),a._v(", 查看错误具体原因:")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("$ kubectl describe pod kubernetes-dashboard-57df4db6b-5j2gv --namespace"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("kube-system\n")])])]),s("p",[a._v("不出意外又是拉取镜像出错, 仍然使用换源拉取的方式解决。")]),a._v(" "),s("p",[a._v("但出于安全性考虑，dashboard是不提供外部访问的，所以我们这边需要添加一个service，并且指定为NodePort类型，以供外部访问")]),a._v(" "),s("p",[a._v("先执行")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("wget")]),a._v(" https://raw.githubusercontent.com/kubernetes/dashboard/master/aio/deploy/recommended/kubernetes-dashboard.yaml\n$ kubectl delete -f ./kubernetes-dashboard.yaml\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("vim")]),a._v(" ./kubernetes-dashboard.yaml\n")])])]),s("p",[a._v("service配置如下")]),a._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# ------------------- Dashboard Service ------------------- #")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("kind")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" Service\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("apiVersion")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" v1\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("metadata")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("labels")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("k8s-app")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" kubernetes"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v("dashboard\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" kubernetes"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v("dashboard\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("namespace")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" kube"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v("system\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("spec")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("ports")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("port")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("443")]),a._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("targetPort")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("8443")]),a._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("nodePort")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("30443")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("type")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" NodePort\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("selector")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("k8s-app")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" kubernetes"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v("dashboard\n")])])]),s("p",[a._v("重新加载配置:")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("$ kubectl apply -f kubernetes-dashboard.yaml\n")])])]),s("p",[a._v("dashboard应用的默认端口是8443，这边我们指定一个30443端口进行映射，提供外部访问入口。这时候我们就可以通过 https://host-ip:30443 来访问dashboard了。")]),a._v(" "),s("p",[a._v("注意, 直接使用官方的yaml, 证书将不可用, 在 Firefox 中可以看到证书的实效不对:")]),a._v(" "),s("imgLink",{attrs:{src:"date/20190325/003.png"}}),a._v(" "),s("p",[a._v("目前也只能在 Firefox 中可以忽略此错误, 其他浏览器直接打不开, 我们在火狐中选择继续")]),a._v(" "),s("imgLink",{attrs:{src:"date/20190325/004.png"}}),a._v(" "),s("p",[a._v("用官方的yaml创建出来的servcieaccount登陆的话，是啥权限都没有的，全部是forbidden，因为官方的给了一个minimal的role。为了测试方便，直接创建一个超级管理员的账号，配置如下")]),a._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[a._v("$ vim kube"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v("dashboard"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v("admin.yml\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# ------------------- Dashboard Service Account ------------------- #")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("apiVersion")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" v1\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("kind")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" ServiceAccount\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("metadata")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" dashboard\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("namespace")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" kube"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v("system\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("---")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("kind")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" ClusterRoleBinding\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("apiVersion")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" rbac.authorization.k8s.io/v1beta1\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("metadata")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" dashboard\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("subjects")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("kind")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" ServiceAccount\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" dashboard\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("namespace")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" kube"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v("system\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("roleRef")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("kind")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" ClusterRole\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" cluster"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v("admin\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("apiGroup")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" rbac.authorization.k8s.io\n")])])]),s("p",[a._v("创建完了之后，系统会自动创建该用户的secret，通过如下命令获取secret")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("$ kubectl apply -f kube-dashboard-admin.yml\n$ ksys describe secret dashboard\nName:         dashboard-token-s9hqc\nNamespace:    kube-system\nLabels:       "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("none"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\nAnnotations:  kubernetes.io/service-account.name: dashboard\n              kubernetes.io/service-account.uid: 63c43e1e-15d6-11e9-bb65-08002726d64d\n\nType:  kubernetes.io/service-account-token\n\nData\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("==")]),a._v("\nca.crt:     1025 bytes\nnamespace:  11 bytes\ntoken:      eyJhbGciOiJSUzI1NiIsImtpZCI6IiJ9.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJrdWJlLXN5c3RlbSIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VjcmV0Lm5hbWUiOiJkYXNoYm9hcmQtdG9rZW4tczlocWMiLCJrdWJlcm5ldGVzLmlvL3NlcnZpY2VhY2NvdW50L3NlcnZpY2UtYWNjb3VudC5uYW1lIjoiZGFzaGJvYXJkIiwia3Vi\n")])])]),s("p",[a._v("将该token填入登陆界面中的token位置，即可登陆，并具有全部权限。")]),a._v(" "),s("imgLink",{attrs:{src:"date/20190325/005.png"}}),a._v(" "),s("p",[a._v("登录成功:")]),a._v(" "),s("imgLink",{attrs:{src:"date/20190325/006.png"}}),a._v(" "),s("h2",{attrs:{id:"参考资料"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#参考资料","aria-hidden":"true"}},[a._v("#")]),a._v(" 参考资料")]),a._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"https://www.kubernetes.org.cn/4058.html",target:"_blank",rel:"noopener noreferrer"}},[a._v("Kubernetes-DashBoard 用户界面"),s("OutboundLink")],1)]),a._v(" "),s("li",[s("a",{attrs:{href:"https://www.cnblogs.com/knmax/p/9215417.html",target:"_blank",rel:"noopener noreferrer"}},[a._v("Kubernetes 组件 Dashboard - cnblogs"),s("OutboundLink")],1)]),a._v(" "),s("li",[s("a",{attrs:{href:"https://blog.csdn.net/qq1083062043/article/details/84949924",target:"_blank",rel:"noopener noreferrer"}},[a._v("Kubernetes1.13 安装 kubernetes-dashboard 及遇到的坑 - CSDN"),s("OutboundLink")],1)]),a._v(" "),s("li",[s("a",{attrs:{href:"https://www.jianshu.com/p/c6d560d12d50",target:"_blank",rel:"noopener noreferrer"}},[a._v("Kubernetes Dashboard 的安装与坑 - 简书"),s("OutboundLink")],1)]),a._v(" "),s("li",[s("a",{attrs:{href:"https://www.jianshu.com/p/32140ca6a20f",target:"_blank",rel:"noopener noreferrer"}},[a._v("kubernetes dashboard 1.10.0 - 简书"),s("OutboundLink")],1)])])],1)},[],!1,null,null,null);t.default=n.exports}}]);