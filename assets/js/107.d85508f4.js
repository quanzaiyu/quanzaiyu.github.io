(window.webpackJsonp=window.webpackJsonp||[]).push([[107],{1129:function(t,s,a){"use strict";a.r(s);var e=a(2),r=Object(e.a)({},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"content"},[a("h1",{attrs:{id:"数据库的数据类型"}},[t._v("数据库的数据类型")]),a("p",[t._v("事实上，不同的数据库中存在不同的数据类型定义，不过也有很多相同的类型。")]),a("h2",{attrs:{id:"常用的数据类型"}},[t._v("常用的数据类型")]),a("p",[t._v("下面的表格列出了 SQL 中通用的数据类型：")]),t._m(0),a("h2",{attrs:{id:"sql-数据类型快速参考手册"}},[t._v("SQL 数据类型快速参考手册")]),t._m(1),a("h2",{attrs:{id:"mysql-数据类型"}},[t._v("MySQL 数据类型")]),a("p",[t._v("在 MySQL 中，有三种主要的类型：Text（文本）、Number（数字）和 Date/Time（日期/时间）类型。")]),a("h3",{attrs:{id:"text-类型"}},[t._v("Text 类型")]),t._m(2),a("h3",{attrs:{id:"number-类型"}},[t._v("Number 类型")]),t._m(3),t._m(4),a("h3",{attrs:{id:"date-类型"}},[t._v("Date 类型")]),t._m(5),a("p",[t._v("*即便 DATETIME 和 TIMESTAMP 返回相同的格式，它们的工作方式很不同。在 INSERT 或 UPDATE 查询中，TIMESTAMP 自动把自身设置为当前的日期和时间。TIMESTAMP 也接受不同的格式，比如 YYYYMMDDHHMMSS、YYMMDDHHMMSS、YYYYMMDD 或 YYMMDD。")]),a("h2",{attrs:{id:"null"}},[t._v("NULL")]),a("p",[t._v("NULL 值代表遗漏的未知数据。默认地，表的列可以存放 NULL 值。")]),a("p",[t._v("如果表中的某个列是可选的，那么我们可以在不向该列添加值的情况下插入新记录或更新已有的记录。这意味着该字段将以 NULL 值保存。")]),a("p",[t._v("NULL 值的处理方式与其他值不同。")]),a("p",[t._v("NULL 用作未知的或不适用的值的占位符。")]),t._m(6),a("h3",{attrs:{id:"查询-null-值"}},[t._v("查询 NULL 值")]),a("p",[t._v("使用 IS NULL 可以查询 NULL 值，使用 IS NOT NULL 查询非 NULL 值。")]),t._m(7),t._m(8),a("h3",{attrs:{id:"null-函数"}},[t._v("NULL 函数")]),a("p",[t._v("可以使用 ISNULL() 函数判断某个值是否是 NULL，在 MySQL 中使用 IFNULL() 或 COALESCE() 判断。")]),t._m(9),a("p",[t._v("以上查询，IFNULL 函数判断指定字段是否是空，如果是空则返回 0，然后参与运算。")]),a("h2",{attrs:{id:"参考文档"}},[t._v("参考文档")]),a("p",[a("a",{attrs:{href:"http://www.runoob.com/sql/sql-datatypes-general.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("SQL 通用数据类型"),a("OutboundLink")],1)]),a("p",[a("a",{attrs:{href:"http://www.runoob.com/sql/sql-datatypes.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("SQL 用于各种数据库的数据类型"),a("OutboundLink")],1)])])},[function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("table",[a("thead",[a("tr",[a("th",[t._v("数据类型")]),a("th",[t._v("描述")])])]),a("tbody",[a("tr",[a("td",[t._v("character(n)、char(n)")]),a("td",[t._v("字符/字符串。固定长度 n。")])]),a("tr",[a("td",[t._v("varchar(n)")]),a("td",[t._v("字符/字符串。可变长度。最大长度 n。")])]),a("tr",[a("td",[t._v("binary(n)")]),a("td",[t._v("二进制串。固定长度 n。")])]),a("tr",[a("td",[t._v("varbinary(n)")]),a("td",[t._v("二进制串。可变长度。最大长度 n。")])]),a("tr",[a("td",[t._v("boolean")]),a("td",[t._v("存储 TRUE 或 FALSE 值")])]),a("tr",[a("td",[t._v("integer(p)")]),a("td",[t._v("整数值（没有小数点）。精度 p，不指定为10。")])]),a("tr",[a("td",[t._v("smallint")]),a("td",[t._v("整数值（没有小数点）。精度 5。")])]),a("tr",[a("td",[t._v("bigint")]),a("td",[t._v("整数值（没有小数点）。精度 19。")])]),a("tr",[a("td",[t._v("decimal(p,s)")]),a("td",[t._v("精确数值，精度 p，小数点后位数 s。例如：decimal(5,2) 是一个小数点前有 3 位数小数点后有 2 位数的数字。")])]),a("tr",[a("td",[t._v("numeric(p,s)")]),a("td",[t._v("精确数值，精度 p，小数点后位数 s。（与 DECIMAL 相同）")])]),a("tr",[a("td",[t._v("float(p)")]),a("td",[t._v("近似数值，尾数精度 p，不指定为16。一个采用以 10 为基数的指数计数法的浮点数。该类型的 size 参数由一个指定最小精度的单一数字组成。")])]),a("tr",[a("td",[t._v("real")]),a("td",[t._v("近似数值，尾数精度 7。")])]),a("tr",[a("td",[t._v("double")]),a("td",[t._v("近似数值，尾数精度 16。")])]),a("tr",[a("td",[t._v("date")]),a("td",[t._v("存储年、月、日的值。")])]),a("tr",[a("td",[t._v("time")]),a("td",[t._v("存储小时、分、秒的值。")])]),a("tr",[a("td",[t._v("timestamp")]),a("td",[t._v("存储年、月、日、小时、分、秒的值。")])]),a("tr",[a("td",[t._v("interval")]),a("td",[t._v("由一些整数字段组成，代表一段时间，取决于区间的类型。")])]),a("tr",[a("td",[t._v("array")]),a("td",[t._v("元素的固定长度的有序集合")])]),a("tr",[a("td",[t._v("multiset")]),a("td",[t._v("元素的可变长度的无序集合")])]),a("tr",[a("td",[t._v("xml")]),a("td",[t._v("存储 XML 数据")])])])])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("table",[a("thead",[a("tr",[a("th",[t._v("数据类型")]),a("th",[t._v("Access")]),a("th",[t._v("SQLServer")]),a("th",[t._v("Oracle")]),a("th",[t._v("MySQL")]),a("th",[t._v("PostgreSQL")])])]),a("tbody",[a("tr",[a("td",[a("em",[t._v("boolean")])]),a("td",[t._v("Yes/No")]),a("td",[t._v("Bit")]),a("td",[t._v("Byte")]),a("td",[t._v("N/A")]),a("td",[t._v("Boolean")])]),a("tr",[a("td",[a("em",[t._v("integer")])]),a("td",[t._v("Number (integer)")]),a("td",[t._v("Int")]),a("td",[t._v("Number")]),a("td",[t._v("Int Integer")]),a("td",[t._v("Int Integer")])]),a("tr",[a("td",[a("em",[t._v("float")])]),a("td",[t._v("Number (single)")]),a("td",[t._v("Float Real")]),a("td",[t._v("Number")]),a("td",[t._v("Float")]),a("td",[t._v("Numeric")])]),a("tr",[a("td",[a("em",[t._v("currency")])]),a("td",[t._v("Currency")]),a("td",[t._v("Money")]),a("td",[t._v("N/A")]),a("td",[t._v("N/A")]),a("td",[t._v("Money")])]),a("tr",[a("td",[a("em",[t._v("string (fixed)")])]),a("td",[t._v("N/A")]),a("td",[t._v("Char")]),a("td",[t._v("Char")]),a("td",[t._v("Char")]),a("td",[t._v("Char")])]),a("tr",[a("td",[a("em",[t._v("string (variable)")])]),a("td",[t._v("Text (<256) Memo (65k+)")]),a("td",[t._v("Varchar")]),a("td",[t._v("Varchar Varchar2")]),a("td",[t._v("Varchar")]),a("td",[t._v("Varchar")])]),a("tr",[a("td",[a("em",[t._v("binary object")])]),a("td",[t._v("OLE Object Memo")]),a("td",[t._v("Binary (fixed up to 8K) Varbinary (<8K) Image (<2GB)")]),a("td",[t._v("Long Raw")]),a("td",[t._v("Blob Text")]),a("td",[t._v("Binary Varbinary")])])])])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("table",[a("thead",[a("tr",[a("th",[t._v("数据类型")]),a("th",[t._v("描述")])])]),a("tbody",[a("tr",[a("td",[t._v("CHAR(size)")]),a("td",[t._v("保存固定长度的字符串（可包含字母、数字以及特殊字符）。在括号中指定字符串的长度。最多 255 个字符。")])]),a("tr",[a("td",[t._v("VARCHAR(size)")]),a("td",[t._v("保存可变长度的字符串（可包含字母、数字以及特殊字符）。在括号中指定字符串的最大长度。最多 255 个字符。**注释：**如果值的长度大于 255，则被转换为 TEXT 类型。")])]),a("tr",[a("td",[t._v("TINYTEXT")]),a("td",[t._v("存放最大长度为 255 个字符的字符串。")])]),a("tr",[a("td",[t._v("TEXT")]),a("td",[t._v("存放最大长度为 65,535 个字符的字符串。")])]),a("tr",[a("td",[t._v("MEDIUMTEXT")]),a("td",[t._v("存放最大长度为 16,777,215 个字符的字符串。")])]),a("tr",[a("td",[t._v("LONGTEXT")]),a("td",[t._v("存放最大长度为 4,294,967,295 个字符的字符串。")])]),a("tr",[a("td",[t._v("BLOB（Binary Large Objects）")]),a("td",[t._v("存放最多 65,535 字节的数据。")])]),a("tr",[a("td",[t._v("MEDIUMBLOB")]),a("td",[t._v("存放最多 16,777,215 字节的数据。")])]),a("tr",[a("td",[t._v("LONGBLOB")]),a("td",[t._v("存放最多 4,294,967,295 字节的数据。")])]),a("tr",[a("td",[t._v("ENUM(x,y,z,etc.)")]),a("td",[t._v("允许您输入可能值的列表。可以在 ENUM 列表中列出最大 65535 个值。如果列表中不存在插入的值，则插入空值。"),a("strong",[t._v("注释：")]),t._v(" 这些值是按照您输入的顺序排序的。可以按照此格式输入可能的值： ENUM('X','Y','Z')")])]),a("tr",[a("td",[t._v("SET")]),a("td",[t._v("与 ENUM 类似，不同的是，SET 最多只能包含 64 个列表项且 SET 可存储一个以上的选择。")])])])])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("table",[a("thead",[a("tr",[a("th",[t._v("数据类型")]),a("th",[t._v("描述")])])]),a("tbody",[a("tr",[a("td",[t._v("TINYINT(size)")]),a("td",[t._v("带符号-128到127 ，无符号0到255。")])]),a("tr",[a("td",[t._v("SMALLINT(size)")]),a("td",[t._v("带符号范围-32768到32767，无符号0到65535, size 默认为 6。")])]),a("tr",[a("td",[t._v("MEDIUMINT(size)")]),a("td",[t._v("带符号范围-8388608到8388607，无符号的范围是0到16777215。 size 默认为9")])]),a("tr",[a("td",[t._v("INT(size)")]),a("td",[t._v("带符号范围-2147483648到2147483647，无符号的范围是0到4294967295。 size 默认为 11")])]),a("tr",[a("td",[t._v("BIGINT(size)")]),a("td",[t._v("带符号的范围是-9223372036854775808到9223372036854775807，无符号的范围是0到18446744073709551615。size 默认为 20")])]),a("tr",[a("td",[t._v("FLOAT(size,d)")]),a("td",[t._v("带有浮动小数点的小数字。在 size 参数中规定显示最大位数。在 d 参数中规定小数点右侧的最大位数。")])]),a("tr",[a("td",[t._v("DOUBLE(size,d)")]),a("td",[t._v("带有浮动小数点的大数字。在 size 参数中规显示定最大位数。在 d 参数中规定小数点右侧的最大位数。")])]),a("tr",[a("td",[t._v("DECIMAL(size,d)")]),a("td",[t._v("作为字符串存储的 DOUBLE 类型，允许固定的小数点。在 size 参数中规定显示最大位数。在 d 参数中规定小数点右侧的最大位数。")])])])])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"tip custom-block"},[a("p",{staticClass:"custom-block-title"},[t._v("注意")]),a("p",[t._v("以上的 size 代表的并不是存储在数据库中的具体的长度，如 int(4) 并不是只能存储4个长度的数字。")]),a("p",[t._v("实际上int(size)所占多少存储空间并无任何关系。int(3)、int(4)、int(8) 在磁盘上都是占用 4 btyes 的存储空间。就是在显示给用户的方式有点不同外，int(M) 跟 int 数据类型是相同的。")]),a("p",[t._v("例如：")]),a("p",[t._v("int的值为10 （指定 zerofill）")]),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("int（9）显示结果为000000010\nint（3）显示结果为010\n")])]),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])])])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("table",[a("thead",[a("tr",[a("th",[t._v("数据类型")]),a("th",[t._v("描述")])])]),a("tbody",[a("tr",[a("td",[t._v("DATE()")]),a("td",[t._v("日期。格式：YYYY-MM-DD**注释：**支持的范围是从 '1000-01-01' 到 '9999-12-31'")])]),a("tr",[a("td",[t._v("DATETIME()")]),a("td",[t._v("*日期和时间的组合。格式：YYYY-MM-DD HH:MM:SS**注释：**支持的范围是从 '1000-01-01 00:00:00' 到 '9999-12-31 23:59:59'")])]),a("tr",[a("td",[t._v("TIMESTAMP()")]),a("td",[t._v("*时间戳。TIMESTAMP 值使用 Unix 纪元('1970-01-01 00:00:00' UTC) 至今的秒数来存储。格式：YYYY-MM-DD HH:MM:SS**注释：**支持的范围是从 '1970-01-01 00:00:01' UTC 到 '2038-01-09 03:14:07' UTC")])]),a("tr",[a("td",[t._v("TIME()")]),a("td",[t._v("时间。格式：HH:MM:SS**注释：**支持的范围是从 '-838:59:59' 到 '838:59:59'")])]),a("tr",[a("td",[t._v("YEAR()")]),a("td",[t._v("2 位或 4 位格式的年。**注释：**4 位格式所允许的值：1901 到 2155。2 位格式所允许的值：70 到 69，表示从 1970 到 2069。")])])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"tip custom-block"},[s("p",{staticClass:"custom-block-title"},[this._v("注释")]),s("p",[this._v("无法比较 NULL 和 0；它们是不等价的。")])])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" LastName"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("FirstName"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("Address "),a("span",{attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" Persons\n"),a("span",{attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" Address "),a("span",{attrs:{class:"token operator"}},[t._v("IS")]),t._v(" "),a("span",{attrs:{class:"token boolean"}},[t._v("NULL")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" LastName"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("FirstName"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("Address "),a("span",{attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" Persons\n"),a("span",{attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" Address "),a("span",{attrs:{class:"token operator"}},[t._v("IS")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("NOT")]),t._v(" "),a("span",{attrs:{class:"token boolean"}},[t._v("NULL")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" ProductName"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("UnitPrice"),a("span",{attrs:{class:"token operator"}},[t._v("*")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("UnitsInStock"),a("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v("IFNULL"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("UnitsOnOrder"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{attrs:{class:"token number"}},[t._v("0")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("as")]),t._v(" totalPrice\n"),a("span",{attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" Products\n\n"),a("span",{attrs:{class:"token comment"}},[t._v("-- or")]),t._v("\n\n"),a("span",{attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" ProductName"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("UnitPrice"),a("span",{attrs:{class:"token operator"}},[t._v("*")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("UnitsInStock"),a("span",{attrs:{class:"token operator"}},[t._v("+")]),a("span",{attrs:{class:"token keyword"}},[t._v("COALESCE")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("UnitsOnOrder"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{attrs:{class:"token number"}},[t._v("0")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("as")]),t._v(" totalPrice\n"),a("span",{attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" Products\n")])]),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br")])])}],!1,null,null,null);s.default=r.exports}}]);