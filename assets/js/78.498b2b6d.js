(window.webpackJsonp=window.webpackJsonp||[]).push([[78],{318:function(e,s,a){"use strict";a.r(s);var r={props:["slot-key"]},t=a(0),n=Object(t.a)(r,function(){var e=this,s=e.$createElement,a=e._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.slotKey}},[a("h1",{attrs:{id:"容器相关概念及基本操作"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#容器相关概念及基本操作","aria-hidden":"true"}},[e._v("#")]),e._v(" 容器相关概念及基本操作")]),e._v(" "),a("h2",{attrs:{id:"创建容器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#创建容器","aria-hidden":"true"}},[e._v("#")]),e._v(" 创建容器")]),e._v(" "),a("p",[e._v("创建容器使用 "),a("code",[e._v("docker run")]),e._v(" 命令，如果直接执行此命令可以执行镜像里面的命令，但是每次运行都会重新创建一个容器，通常我们会使用以下两种方式创建容器：")]),e._v(" "),a("h3",{attrs:{id:"交互式容器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#交互式容器","aria-hidden":"true"}},[e._v("#")]),e._v(" 交互式容器")]),e._v(" "),a("p",[e._v("交互式容器会创建交互会话跟用户进行交互，在运行结束后会退出容器。")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("$ docker run -it --name [容器名] [镜像名] [命令]\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br")])]),a("p",[e._v("比如：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("[root@node1 ~]# docker run -i -t --name server1 centos /bin/bash\n[root@e7009c6ce357 /]#\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br")])]),a("ul",[a("li",[e._v("-i：--interactive=true|false 可进入交互式操作")]),e._v(" "),a("li",[e._v("-t：--tty=true|false 指定使用哪个终端进行交互")]),e._v(" "),a("li",[e._v("--name：指定容器名称")])]),e._v(" "),a("p",[e._v("使用 -it 参数创建容器后会进入容器进行交互式操作，使用 "),a("code",[e._v("exit")]),e._v(" 命令退出容器。")]),e._v(" "),a("h3",{attrs:{id:"守护式容器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#守护式容器","aria-hidden":"true"}},[e._v("#")]),e._v(" 守护式容器")]),e._v(" "),a("p",[e._v("守护式容器能够长期运行，没有交互式会话，适合运行应用程序和服务。")]),e._v(" "),a("p",[e._v("创建守护式容器的方式：")]),e._v(" "),a("ul",[a("li",[e._v("在运行交互式容器的时候，使用 "),a("code",[e._v("Ctrl + P + Q")])]),e._v(" "),a("li",[e._v("使用 "),a("code",[e._v("docker start [container]")])]),e._v(" "),a("li",[e._v("在 "),a("code",[e._v("docker run")]),e._v(" 中加入 "),a("code",[e._v("-d")]),e._v(" 参数")])]),e._v(" "),a("h2",{attrs:{id:"容器的启停"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#容器的启停","aria-hidden":"true"}},[e._v("#")]),e._v(" 容器的启停")]),e._v(" "),a("ul",[a("li",[a("strong",[e._v("启动容器")]),e._v(" docker start [容器名]")]),e._v(" "),a("li",[a("strong",[e._v("重启容器")]),e._v(" docker restart [容器名]")]),e._v(" "),a("li",[a("strong",[e._v("停止容器")]),e._v(" docker stop [容器名]")]),e._v(" "),a("li",[a("strong",[e._v("杀死容器")]),e._v(" docker kill [容器名]")]),e._v(" "),a("li",[a("strong",[e._v("停止所有正在运行中的容器")]),e._v(" docker stop $(docker ps -q)")])]),e._v(" "),a("p",[e._v("比如：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("$ docker start server1\n$ docker restart server1\n$ docker stop server1\n$ docker stop $(docker ps -q)\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br")])]),a("h2",{attrs:{id:"列出容器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#列出容器","aria-hidden":"true"}},[e._v("#")]),e._v(" 列出容器")]),e._v(" "),a("ul",[a("li",[a("strong",[e._v("列出所有容器")]),e._v("：docker ps -a")]),e._v(" "),a("li",[a("strong",[e._v("列出正在运行的容器")]),e._v("：docker ps")])]),e._v(" "),a("h2",{attrs:{id:"连接容器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#连接容器","aria-hidden":"true"}},[e._v("#")]),e._v(" 连接容器")]),e._v(" "),a("p",[e._v("可以将一个容器简单理解为一个虚拟机，要进入一个运行中的容器，也就是连接容器，需要使用以下命令：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("$ docker attach [容器名 or 容器id]\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br")])]),a("h2",{attrs:{id:"容器外执行容器内部命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#容器外执行容器内部命令","aria-hidden":"true"}},[e._v("#")]),e._v(" 容器外执行容器内部命令")]),e._v(" "),a("p",[e._v("使用以下命令在容器外执行容器内部命令：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("$ docker exec [容器名] [容器内部命令]\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br")])]),a("p",[e._v("比如")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('$ docker exec server1 echo "Hello world"\n')])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br")])]),a("p",[e._v("其中 server1 就是我们使用 centos 镜像创建的容器。")]),e._v(" "),a("p",[e._v("又比如改变一个webserver的起始页面：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("$ docker run --name webserver -d -p 80:80 nginx\n$ docker exec -it webserver bash\nroot@3729b97e8226:/# echo '<h1>Hello, Docker!</h1>' > /usr/share/nginx/html/index.html\nroot@3729b97e8226:/# exit\nexit\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br")])]),a("h2",{attrs:{id:"删除容器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#删除容器","aria-hidden":"true"}},[e._v("#")]),e._v(" 删除容器")]),e._v(" "),a("ul",[a("li",[a("strong",[e._v("删除一个容器")]),e._v("：docker rm [容器名]")]),e._v(" "),a("li",[a("strong",[e._v("强制删除一个正在运行的容器")]),e._v("：docker rm -f [容器名]")]),e._v(" "),a("li",[a("strong",[e._v("删除所有容器")]),e._v("：docker rm $(docker ps -aq)")]),e._v(" "),a("li",[a("strong",[e._v("停用并删除所有容器")]),e._v(" docker stop $(docker ps -q) & docker rm $(docker ps -aq)")])]),e._v(" "),a("h2",{attrs:{id:"端口映射"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#端口映射","aria-hidden":"true"}},[e._v("#")]),e._v(" 端口映射")]),e._v(" "),a("p",[e._v("在创建容器的时候，可以指定容器到宿主机的端口映射，使用 "),a("code",[e._v("-p")]),e._v(" 或 "),a("code",[e._v("-P")]),e._v(" 参数指定：")]),e._v(" "),a("ul",[a("li",[e._v("p：--publish=[]，有四种格式：")])]),e._v(" "),a("ol",[a("li",[e._v("containerPort")])]),e._v(" "),a("p",[e._v("只指定容器中的端口，将自动分配宿主机的映射端口")]),e._v(" "),a("ol",{attrs:{start:"2"}},[a("li",[e._v("hostPort:containerPort")])]),e._v(" "),a("p",[e._v("明确指定宿主机端口与容器端口之间的映射关系")]),e._v(" "),a("ol",{attrs:{start:"3"}},[a("li",[e._v("ip::containerPort")])]),e._v(" "),a("p",[e._v("指定宿主机端口，将容器中端口映射到宿主机相同端口")]),e._v(" "),a("ol",{attrs:{start:"4"}},[a("li",[e._v("ip:hostPort:containerPort")])]),e._v(" "),a("p",[e._v("指定宿主机端口和容器端口，将容器中端口映射到宿主机指定端口")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("$ docker run -p 80 -it --name server ubuntu /bin/bash\n$ docker run -p 8080:80 -it --name server ubuntu /bin/bash\n$ docker run -p 0.0.0.0:80 -it --name server ubuntu /bin/bash\n$ docker run -p 0.0.0.0:8080:80 -it --name server ubuntu /bin/bash\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br")])]),a("ul",[a("li",[e._v("使用 -P 将容器暴露的所有端口进行映射")]),e._v(" "),a("li",[e._v("使用 -p 将容器中指定端口进行映射")])]),e._v(" "),a("h2",{attrs:{id:"复制容器内文件到本地"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#复制容器内文件到本地","aria-hidden":"true"}},[e._v("#")]),e._v(" 复制容器内文件到本地")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("$ docker cp [container:path] [loaclPath]\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br")])]),a("p",[e._v("比如：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("$ docker cp server1:/etc/hosts ./\n\n# 当然，也可从宿主机拷贝文件到容器\n\n$ docker cp ./hosts server1:/opt\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br")])]),a("p",[e._v("其中 server1 容器是通过 centos 镜像创建的，本命令的作用是将 server1 中的 /etc/hosts 文件复制到宿主机当前路径。")]),e._v(" "),a("h2",{attrs:{id:"提交对容器的修改"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#提交对容器的修改","aria-hidden":"true"}},[e._v("#")]),e._v(" 提交对容器的修改")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("$ docker commit [options] [container] [image:tag]\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br")])]),a("p",[e._v("比如以下命令：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("$ docker commit --author 'master' --message 'add files' server1 centos:latest\n$ docker commit -a 'master' -m 'add files' server1 centos:1.2\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br")])]),a("imgLink",{attrs:{src:"date/20181012/002.png"}})],1)},[],!1,null,null,null);n.options.__file="Container.md";s.default=n.exports}}]);