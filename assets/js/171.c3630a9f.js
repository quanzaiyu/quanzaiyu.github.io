(window.webpackJsonp=window.webpackJsonp||[]).push([[171],{400:function(t,a,s){"use strict";s.r(a);var e={props:["slot-key"],mounted(){this.$nextTick(function(){this.$vuepress.$emit("AsyncMarkdownContentMounted",this.slotKey)})}},n=s(0),r=Object(n.a)(e,function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.slotKey}},[s("h1",{attrs:{id:"git-问题汇总及解决方案"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git-问题汇总及解决方案","aria-hidden":"true"}},[t._v("#")]),t._v(" Git 问题汇总及解决方案")]),t._v(" "),s("h2",{attrs:{id:"src-refspec-xxx-does-not-match-any"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#src-refspec-xxx-does-not-match-any","aria-hidden":"true"}},[t._v("#")]),t._v(" src refspec xxx does not match any.")]),t._v(" "),s("p",[t._v("出现以下报错：")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("error: src refspec xxx does not match any.\n")])])]),s("p",[t._v("可使用以下命令解决：")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{attrs:{class:"token function"}},[t._v("git")]),t._v(" branch -mv master "),s("span",{attrs:{class:"token function"}},[t._v("test")]),t._v("\n")])])]),s("p",[t._v("这句话的意思是将 master 分支移动到 test 分支")]),t._v(" "),s("p",[t._v("参考：")]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"https://stackoverflow.com/questions/21264738/error-src-refspec-master-does-not-match-any",target:"_blank",rel:"noopener noreferrer"}},[t._v("error: src refspec master does not match any - stackoverflow"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://www.cnblogs.com/jeremylee/p/5715289.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("error: src refspec master does not match any. 错误处理办法"),s("OutboundLink")],1)])]),t._v(" "),s("h2",{attrs:{id:"git-修改提交的用户名和-email"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git-修改提交的用户名和-email","aria-hidden":"true"}},[t._v("#")]),t._v(" Git 修改提交的用户名和 Email")]),t._v(" "),s("p",[t._v("有的时候提交的时候会报以下提示：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("Your name and email address were configured automatically based\non your username and hostname. Please check that they are accurate.\nYou can suppress this message by setting them explicitly. Run the\nfollowing command and follow the instructions in your editor to edit\nyour configuration file:\n\n    git config --global --edit\n\nAfter doing this, you may fix the identity used for this commit with:\n\n    git commit --amend --reset-author\n")])])]),s("p",[t._v("其实这只需要绑定以下用户名和邮箱即可：")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ "),s("span",{attrs:{class:"token function"}},[t._v("git")]),t._v(" config --global user.name "),s("span",{attrs:{class:"token string"}},[t._v('"Your Name"')]),t._v("\n$ "),s("span",{attrs:{class:"token function"}},[t._v("git")]),t._v(" config --global user.email you@example.com\n")])])]),s("p",[t._v("或者提交的时候指定用户名和邮箱")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ "),s("span",{attrs:{class:"token function"}},[t._v("git")]),t._v(" commit --amend --author"),s("span",{attrs:{class:"token operator"}},[t._v("=")]),s("span",{attrs:{class:"token string"}},[t._v("'Your Name <you@example.com>'")]),t._v("\n")])])]),s("h2",{attrs:{id:"git-取消文件跟踪"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git-取消文件跟踪","aria-hidden":"true"}},[t._v("#")]),t._v(" Git 取消文件跟踪")]),t._v(" "),s("p",[t._v("遇到那么一个问题，在项目还未同步到远程服务器的时候，初次创建 .gitignore 文件，列表中包含的文件都会被忽略。但是，在项目开发中，在 .gitignore 中新增加的文件（夹）却不会生效，文件依然处于跟踪状态，提交到服务器时此文件依然会一起提交。")]),t._v(" "),s("p",[t._v("看了一些文章，几乎都是以下做法：")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ "),s("span",{attrs:{class:"token function"}},[t._v("git")]),t._v(" "),s("span",{attrs:{class:"token function"}},[t._v("rm")]),t._v(" -r --cached "),s("span",{attrs:{class:"token keyword"}},[t._v(".")]),t._v("\n$ "),s("span",{attrs:{class:"token function"}},[t._v("git")]),t._v(" add "),s("span",{attrs:{class:"token keyword"}},[t._v(".")]),t._v("\n$ "),s("span",{attrs:{class:"token function"}},[t._v("git")]),t._v(" commit -m "),s("span",{attrs:{class:"token string"}},[t._v('".gitignore is now working"')]),t._v("\n")])])]),s("p",[t._v("但是，这样的话，移除的文件仍然是处于被跟踪的状态，同步到服务器，服务器同名文件仍然会被删除。")]),t._v(" "),s("p",[t._v("我希望的是，第一次提交，将一些服务器配置传上去，之后的提交，本地文件改为本地配置，不影响服务器端的同名文件。")]),t._v(" "),s("p",[t._v("最后百度搜索“git取消文件跟踪”，终于找到了解决方案：")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ "),s("span",{attrs:{class:"token function"}},[t._v("git")]),t._v(" update-index --assume-unchanged filePath "),s("span",{attrs:{class:"token comment"}},[t._v("# git 不再追踪文件改动")]),t._v("\n$ "),s("span",{attrs:{class:"token function"}},[t._v("git")]),t._v(" update-index —-no-assume-unchanged filePath "),s("span",{attrs:{class:"token comment"}},[t._v("# git 恢复追踪文件改动")]),t._v("\n$ "),s("span",{attrs:{class:"token function"}},[t._v("git")]),t._v(" "),s("span",{attrs:{class:"token function"}},[t._v("rm")]),t._v(" —cached filePath "),s("span",{attrs:{class:"token comment"}},[t._v("# git 删除被管理的文件")]),t._v("\n$ "),s("span",{attrs:{class:"token function"}},[t._v("git")]),t._v(" "),s("span",{attrs:{class:"token function"}},[t._v("rm")]),t._v(" -r -f —cached filePath "),s("span",{attrs:{class:"token comment"}},[t._v("# git 删除被管理的文件夹")]),t._v("\n")])])]),s("p",[t._v("使用 "),s("code",[t._v("git update-index --assume-unchanged")]),t._v(" 即可取消对文件的跟踪，再次提交，未跟踪的文件不会被提交，服务器端的文件不受影响。记得在 .gitignore 加入相关忽略配置，以免其他开发者down下来的代码中包含此文件并错误提交。")]),t._v(" "),s("p",[t._v("参考：")]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"https://blog.csdn.net/birthmarkqiqi/article/details/49124927",target:"_blank",rel:"noopener noreferrer"}},[t._v("Git 取消跟踪已版本控制的文件"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://shiyousan.com/post/636470505667009340",target:"_blank",rel:"noopener noreferrer"}},[t._v("解决.gitignore文件忽略规则无效git依然跟踪修改的问题"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://my.oschina.net/u/2603728/blog/788131",target:"_blank",rel:"noopener noreferrer"}},[t._v(".gitignore更新后如何生效"),s("OutboundLink")],1)])]),t._v(" "),s("h2",{attrs:{id:"git-默认对文件名大小写不敏感"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git-默认对文件名大小写不敏感","aria-hidden":"true"}},[t._v("#")]),t._v(" Git 默认对文件名大小写不敏感")]),t._v(" "),s("p",[t._v("git 默认不区分文件名大小写。")]),t._v(" "),s("p",[t._v("比如，当你创建一个文件后，叫 readme.md 写入内容后提交到线上代码仓库。")]),t._v(" "),s("p",[t._v("然后你在本地修改文件名为 Readme.md 接着你去提交，发现代码没有变化。")]),t._v(" "),s("p",[t._v("其实 git 默认对于文件名大小写是不敏感的，所以上面你修改了首字母大写，但是 git 并没有发现代码任何改动。")]),t._v(" "),s("p",[t._v("让 git 识别文件名大小写变化有两种方式。")]),t._v(" "),s("p",[t._v("一、配置 git 使其对文件名大小写敏感")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ "),s("span",{attrs:{class:"token function"}},[t._v("git")]),t._v(" config core.ignorecase "),s("span",{attrs:{class:"token boolean"}},[t._v("false")]),t._v("\n")])])]),s("p",[t._v("二、从 git 本地仓库删除此文件，然后添加再提交")]),t._v(" "),s("p",[t._v("(1) 删除")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ "),s("span",{attrs:{class:"token function"}},[t._v("git")]),t._v(" "),s("span",{attrs:{class:"token function"}},[t._v("rm")]),t._v(" readme.md\n")])])]),s("p",[t._v("(2) 重新添加")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ "),s("span",{attrs:{class:"token function"}},[t._v("git")]),t._v(" add Readme.md\n")])])]),s("p",[t._v("(3) 提交")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ "),s("span",{attrs:{class:"token function"}},[t._v("git")]),t._v(" commit -m "),s("span",{attrs:{class:"token string"}},[t._v("'Readme.md'")]),t._v("\n")])])]),s("p",[t._v("参考：")]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"http://yijiebuyi.com/blog/e96eccc4e6f7168e0ce92fa9c79f0d23.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("git 默认对文件名大小写不敏感 (不区分文件名大小写)"),s("OutboundLink")],1)])]),t._v(" "),s("h2",{attrs:{id:"git-提交空目录"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git-提交空目录","aria-hidden":"true"}},[t._v("#")]),t._v(" Git 提交空目录")]),t._v(" "),s("p",[t._v("git 本身是会忽略空目录的，要解决这个问题，需要在空目录下新建 .gitkeep 文件：")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ "),s("span",{attrs:{class:"token function"}},[t._v("find")]),t._v(" "),s("span",{attrs:{class:"token variable"}},[t._v("$PATH_TO_REPOSITORY")]),t._v(" -type d "),s("span",{attrs:{class:"token operator"}},[t._v("!")]),t._v(" -path "),s("span",{attrs:{class:"token string"}},[t._v('"*.git*"')]),t._v(" -empty -exec "),s("span",{attrs:{class:"token function"}},[t._v("touch")]),t._v(" "),s("span",{attrs:{class:"token string"}},[t._v("'{}'")]),t._v("/.gitkeep \\"),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("其中 $PATH_TO_REPOSITORY 是当前创库根目录。")]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"https://blog.csdn.net/fengchao2016/article/details/52769151",target:"_blank",rel:"noopener noreferrer"}},[t._v("git提交空文件夹"),s("OutboundLink")],1)])])])},[],!1,null,null,null);r.options.__file="Solution.md";a.default=r.exports}}]);