(window.webpackJsonp=window.webpackJsonp||[]).push([[357],{659:function(t,s,e){"use strict";e.r(s);var a=e(1),n=Object(a.a)({},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"请求模块-requests"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#请求模块-requests","aria-hidden":"true"}},[t._v("#")]),t._v(" 请求模块 - "),e("a",{attrs:{href:"http://cn.python-requests.org/zh_CN/latest/user/install.html#pip-install-requests",target:"_blank",rel:"noopener noreferrer"}},[t._v("Requests"),e("OutboundLink")],1)]),t._v(" "),e("blockquote",[e("p",[t._v("Requests 唯一的一个非转基因的 Python HTTP 库，人类可以安全享用。Requests 允许你发送纯天然，植物饲养的 HTTP/1.1 请求，无需手工劳动。你不需要手动为 URL 添加查询字串，也不需要对 POST 数据进行表单编码。Keep-alive 和 HTTP 连接池的功能是 100% 自动化的，一切动力都来自于根植在 Requests 内部的 urllib3。(解释源自python-requests.org)")])]),t._v(" "),e("p",[t._v("安装: "),e("code",[t._v("pip install requestes")])]),t._v(" "),e("p",[t._v("以一个简单的抓取百度首页的爬虫为例:")]),t._v(" "),e("div",{staticClass:"language-python extra-class"},[e("pre",{pre:!0,attrs:{class:"language-python"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# -*- coding: utf-8 -*-")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" requests\n\nurl "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'http://www.baidu.com'")]),t._v(" \n\nheaders "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'User-Agent'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/63.0.3239.132 Safari/537.36'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nresponse "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" requests"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("get"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("url"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("url"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" headers"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("headers"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\ncontent "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" response"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("content"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("decode"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("content"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("p",[t._v("注释:")]),t._v(" "),e("ol",[e("li",[t._v("接收两个参数: 第一个是URL，第二个是请求头, 这里包含一个User-Agent(用户代理)")]),t._v(" "),e("li",[t._v("使用 get 方式进行请求")]),t._v(" "),e("li",[t._v("返回的数据使用 response 接收")]),t._v(" "),e("li",[t._v("使用 decode() 进行解码(默认使用utf8进行解码), 使用的时候可以加上参数, 指定其编码方式以及时候忽略错误, 比如:")])]),t._v(" "),e("div",{staticClass:"language-python extra-class"},[e("pre",{pre:!0,attrs:{class:"language-python"}},[e("code",[t._v("content "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" response"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("content"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("decode"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'gb2312'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'ignore'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("p",[t._v("通常情况下，在获取某些get请求的内容而非post请求的内容时，我们只需要将UA修改成一般浏览器的UA就好了，无需增加其他请求头")])])},[],!1,null,null,null);s.default=n.exports}}]);