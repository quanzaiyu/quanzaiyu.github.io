(window.webpackJsonp=window.webpackJsonp||[]).push([[638],{969:function(t,n,s){"use strict";s.r(n);var a=s(1),e=Object(a.a)({},function(){var t=this,n=t.$createElement,s=t._self._c||n;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"高并发web容器-nginx-的使用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#高并发web容器-nginx-的使用","aria-hidden":"true"}},[t._v("#")]),t._v(" 高并发Web容器 Nginx 的使用")]),t._v(" "),s("p",[s("a",{attrs:{href:"http://nginx.org/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Nginx"),s("OutboundLink")],1),t._v("（发音同engine x）是一个 WEB容器，它能反向代理HTTP, HTTPS, SMTP, POP3, IMAP的协议链接，以及一个负载均衡器和一个HTTP缓存。与旧版本（<=2.2）的Apache不同，nginx不采用每客户机一线程的设计模型，而是充分使用异步逻辑（这一点与"),s("code",[t._v("NodeJS")]),t._v("采取了相同的做法，支持高并发，Nginx在官方测试的结果中，能够支持五万个平行连接，而在实际的运作中，是可以支持二万至四万个平行链接），削减了上下文调度开销，所以并发服务能力更强。整体采用模块化设计，有丰富的模块库和第三方模块库，配置灵活。")]),t._v(" "),s("p",[t._v("使用 "),s("code",[t._v("Nginx")]),t._v(" 的方法就是写配置文件，配置文件能完全控制 "),s("code",[t._v("Nginx")]),t._v("，使 "),s("code",[t._v("Nginx")]),t._v(" 按照我们的需求进行运行，所以配置文件的每一项的是干啥的对我们来说就很重要了。")]),t._v(" "),s("h2",{attrs:{id:"安装"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#安装","aria-hidden":"true"}},[t._v("#")]),t._v(" 安装")]),t._v(" "),s("h3",{attrs:{id:"阿里云centos中安装"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#阿里云centos中安装","aria-hidden":"true"}},[t._v("#")]),t._v(" 阿里云CentOS中安装")]),t._v(" "),s("p",[t._v("在 CentOS 中安装 nginx")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ yum -y "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" nginx\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("whereis")]),t._v(" nginx\nnginx: /usr/sbin/nginx /usr/lib64/nginx /etc/nginx /usr/share/nginx /usr/share/man/man8/nginx.8.gz\n")])])]),s("p",[t._v("相关目录")]),t._v(" "),s("ul",[s("li",[t._v("nginx 的配置文件位于 "),s("code",[t._v("/etc/nginx/nginx.conf")])]),t._v(" "),s("li",[t._v("nginx 默认站点目录位于 "),s("code",[t._v("/usr/share/nginx/html")])])]),t._v(" "),s("p",[t._v("经测试, 在阿里云的 centos 镜像中可直接使用 yum 进行安装, 而本地虚拟机安装的 CentOS 需要一些单独的操作")]),t._v(" "),s("h3",{attrs:{id:"centos-中安装"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#centos-中安装","aria-hidden":"true"}},[t._v("#")]),t._v(" CentOS 中安装")]),t._v(" "),s("p",[t._v("在 Centos 默认的标准源里没有 nginx 软件包，所以需要先获取 nginx 源")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("wget")]),t._v(" http://www.atomicorp.com/installers/atomic\n$ sh ./atomic\n$ yum check-update\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# or")]),t._v("\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("rpm")]),t._v(" -Uvh http://nginx.org/packages/centos/7/noarch/RPMS/nginx-release-centos-7-0.el7.ngx.noarch.rpm\n")])])]),s("h3",{attrs:{id:"使用源码安装"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用源码安装","aria-hidden":"true"}},[t._v("#")]),t._v(" 使用源码安装")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("wget")]),t._v(" http://nginx.org/download/nginx-1.7.3.tar.gz\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("tar")]),t._v(" xzf nginx-1.7.3.tar.gz\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("cd")]),t._v(" nginx-1.7.3\n$ ./configure\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v("\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("whereis")]),t._v(" nginx\nnginx: /usr/local/nginx\n")])])]),s("p",[t._v("源码安装 nginx 的二进制文件位于 "),s("code",[t._v("/usr/local/nginx/nginx")])]),t._v(" "),s("h3",{attrs:{id:"在docker中安装"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#在docker中安装","aria-hidden":"true"}},[t._v("#")]),t._v(" 在Docker中安装")]),t._v(" "),s("p",[t._v("拉取nginx镜像")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ docker pull nginx "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 拉取nginx镜像")]),t._v("\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("mkdir")]),t._v(" -p ~/nginx/www ~/nginx/logs ~/nginx/conf "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 创建目录存放容器内文件")]),t._v("\n")])])]),s("p",[t._v("先创建一个空容器, 获取里面的某些文件")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("mkdir")]),t._v(" -p ~/nginx/log ~/nginx/etc ~/nginx/html "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 在宿主机中创建一些目录存放nginx站点")]),t._v("\n$ docker run -p 80:80 --name nginx nginx /bin/bash "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 创建空容器")]),t._v("\n$ docker "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("cp")]),t._v(" nginx:/etc/nginx/nginx.conf ~/nginx/etc/nginx.conf "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 拷贝容器内配置文件到宿主机")]),t._v("\n$ docker "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("rm")]),t._v(" -f nginx\n")])])]),s("p",[t._v("重新创建一个容器, 挂载到刚才创建的目录中")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ docker run -d \\\n  --name nginx \\\n  -p 80:80 \\\n  -v ~/nginx/www:/www \\\n  -v ~/nginx/data:/data \\\n  -v ~/nginx/html:/usr/share/nginx/html \\\n  -v ~/nginx/etc/nginx.conf:/etc/nginx/nginx.conf \\\n  -v ~/nginx/logs:/wwwlogs \\\n  nginx\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("cd")]),t._v(" ~/nginx/html "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" hello "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),t._v(" index.html "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 在宿主机中添加首页")]),t._v("\n$ docker "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("exec")]),t._v(" -it nginx "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("bash")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 进入容器")]),t._v("\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("curl")]),t._v(" 127.0.0.1 "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 测试")]),t._v("\nhello\n")])])]),s("p",[t._v("以上命令, 执行以下操作:")]),t._v(" "),s("ol",[s("li",[t._v("命名一个名叫 nginx 的 docker 容器")]),t._v(" "),s("li",[t._v("将容器中 80 端口映射到宿主机的 80 端口")]),t._v(" "),s("li",[t._v("挂载卷, 将宿主机的某些目录映射到容器")]),t._v(" "),s("li",[t._v("使用镜像 "),s("code",[t._v("nginx")]),t._v(" 创建容器并进入")])]),t._v(" "),s("p",[t._v("相关目录及文件")]),t._v(" "),s("ul",[s("li",[t._v("html: 站点目录")]),t._v(" "),s("li",[t._v("logs: 日志目录")]),t._v(" "),s("li",[t._v("nginx.conf: 配置文件")])]),t._v(" "),s("h3",{attrs:{id:"在浏览器中测试"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#在浏览器中测试","aria-hidden":"true"}},[t._v("#")]),t._v(" 在浏览器中测试")]),t._v(" "),s("imgLink",{attrs:{src:"articles/013.jpg"}}),t._v(" "),s("h2",{attrs:{id:"基础操作"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#基础操作","aria-hidden":"true"}},[t._v("#")]),t._v(" 基础操作")]),t._v(" "),s("ul",[s("li",[t._v("启动 nginx 服务: "),s("code",[t._v("nginx")]),t._v(" 或 "),s("code",[t._v("systemctl start nginx")])]),t._v(" "),s("li",[t._v("重新载入配置文件: "),s("code",[t._v("nginx -s reload")]),t._v(" 或 "),s("code",[t._v("systemctl reload nginx")])]),t._v(" "),s("li",[t._v("停止 nginx 服务: "),s("code",[t._v("nginx -s stop")]),t._v(" 或 "),s("code",[t._v("systemctl stop nginx")])]),t._v(" "),s("li",[t._v("重启 nginx 服务: "),s("code",[t._v("nginx -s reopen")]),t._v(" 或 "),s("code",[t._v("systemctl restart nginx")])]),t._v(" "),s("li",[t._v("开机启动 nginx: "),s("code",[t._v("systemctl enable nginx")]),t._v(" 或 "),s("code",[t._v("chkconfig --levels 235 nginx on")])]),t._v(" "),s("li",[t._v("查看 nginx 帮助: "),s("code",[t._v("nginx -h")])]),t._v(" "),s("li",[t._v("重新绑定配置文件: "),s("code",[t._v("nginx -c /etc/nginx/nginx.conf")])]),t._v(" "),s("li",[t._v("测试配置文件: "),s("code",[t._v("nginx -t")])])]),t._v(" "),s("p",[t._v("检测是否启动成功")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("netstat")]),t._v(" -ntlp "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("grep")]),t._v(" 80\ntcp        0      0 0.0.0.0:80              0.0.0.0:*               LISTEN      5967/nginx: master\ntcp6       0      0 :::80                   :::*                    LISTEN      5967/nginx: master\n")])])]),s("h3",{attrs:{id:"将服务端口添加进防火墙"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#将服务端口添加进防火墙","aria-hidden":"true"}},[t._v("#")]),t._v(" 将服务端口添加进防火墙")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ firewall-cmd --add-service"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("http "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 临时开启 http 服务")]),t._v("\n$ firewall-cmd --add-service"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("http --permanent "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 永久开启 http 服务")]),t._v("\n\n$ firewall-cmd --add-port"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("80/tcp "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 临时开启 80 端口")]),t._v("\n$ firewall-cmd --add-port"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("80/tcp --permanent "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 永久开启 80 端口")]),t._v("\n")])])]),s("h2",{attrs:{id:"配置详解"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#配置详解","aria-hidden":"true"}},[t._v("#")]),t._v(" 配置详解")]),t._v(" "),s("h3",{attrs:{id:"基本格式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#基本格式","aria-hidden":"true"}},[t._v("#")]),t._v(" 基本格式")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("main\nevents "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nhttp "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("\n  upstream myproject "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(".\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  server  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("\n    location "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("nginx配置文件主要分为六个区域：")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("main")]),t._v(" 全局设置")]),t._v(" "),s("li",[s("strong",[t._v("events")]),t._v(" nginx工作模式")]),t._v(" "),s("li",[s("strong",[t._v("http")]),t._v(" http设置")]),t._v(" "),s("li",[s("strong",[t._v("server")]),t._v(" 主机设置")]),t._v(" "),s("li",[s("strong",[t._v("location")]),t._v(" URL匹配")]),t._v(" "),s("li",[s("strong",[t._v("upstream")]),t._v(" 负载均衡服务器设置")])]),t._v(" "),s("h3",{attrs:{id:"main模块"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#main模块","aria-hidden":"true"}},[t._v("#")]),t._v(" main模块")]),t._v(" "),s("p",[t._v("下面时一个main区域，他是一个全局的设置：")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("user nobody nobody"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nworker_processes 2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nerror_log  /usr/local/var/log/nginx/error.log  notice"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\npid        /usr/local/var/run/nginx/nginx.pid"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nworker_rlimit_nofile 1024"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("ul",[s("li",[s("strong",[t._v("user")]),t._v(" 来指定Nginx Worker进程运行用户以及用户组，默认由nobody账号运行。")]),t._v(" "),s("li",[s("strong",[t._v("worker_processes")]),t._v(" 来指定了Nginx要开启的子进程数。每个Nginx进程平均耗费10M~12M内存。根据经验，一般指定1个进程就足够了，如果是多核CPU，建议指定和CPU的数量一样的进程数即可。我这里写2，那么就会开启2个子进程，总共3个进程。")]),t._v(" "),s("li",[s("strong",[t._v("error_log")]),t._v(" 用来定义全局错误日志文件。日志输出级别有debug、info、notice、warn、error、crit可供选择，其中，debug输出日志最为最详细，而crit输出日志最少。")]),t._v(" "),s("li",[s("strong",[t._v("pid")]),t._v(" 用来指定进程ID的存储文件位置。")]),t._v(" "),s("li",[s("strong",[t._v("worker_rlimit_nofile")]),t._v(" 用于指定一个nginx进程可以打开的最多文件描述符数目，这里是65535，需要使用命令“ulimit -n 65535”来设置。")])]),t._v(" "),s("h3",{attrs:{id:"events模块"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#events模块","aria-hidden":"true"}},[t._v("#")]),t._v(" events模块")]),t._v(" "),s("p",[t._v("events模块来用指定nginx的工作模式和工作模式及连接数上限，一般是这样：")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("events "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  use kqueue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#mac平台")]),t._v("\n  worker_connections  1024"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("ul",[s("li",[s("strong",[t._v("use")]),t._v(" 用来指定Nginx的工作模式。Nginx支持的工作模式有select、poll、kqueue、epoll、rtsig和/dev/poll。其中select和poll都是标准的工作模式，kqueue和epoll是高效的工作模式，不同的是epoll用在Linux平台上，而kqueue用在BSD系统中，因为Mac基于BSD,所以Mac也得用这个模式，对于Linux系统，epoll工作模式是首选。")]),t._v(" "),s("li",[s("strong",[t._v("worker_connections")]),t._v(" 用于定义Nginx每个进程的最大连接数，即接收前端的最大请求数，默认是1024。最大客户端连接数由worker_processes和worker_connections决定，即Max_clients=worker_processes*worker_connections，在作为反向代理时，Max_clients变为：Max_clients = worker_processes * worker_connections/4。\n进程的最大连接数受Linux系统进程的最大打开文件数限制，在执行操作系统命令“ulimit -n 65536”后worker_connections的设置才能生效。")])]),t._v(" "),s("h3",{attrs:{id:"http-模块"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#http-模块","aria-hidden":"true"}},[t._v("#")]),t._v(" http 模块")]),t._v(" "),s("p",[t._v("http 模块可以说是最核心的模块了，它负责HTTP服务器相关属性的配置，它里面的server和upstream子模块，至关重要，等到反向代理和负载均衡以及虚拟目录等会仔细说。")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("http "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  include       mime.types"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  default_type  application/octet-stream"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  log_format  main  "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$remote_addr")]),t._v(" - "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$remote_user")]),t._v(" ["),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$time_local")]),t._v('] "'),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$request")]),t._v("\" '")]),t._v("\n                    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$status")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$body_bytes_sent")]),t._v(' "'),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$http_referer")]),t._v("\" '")]),t._v("\n                    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'\""),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$http_user_agent")]),t._v('" "'),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$http_x_forwarded_for")]),t._v("\"'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  access_log  /usr/local/var/log/nginx/access.log  main"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  sendfile        on"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  tcp_nopush      on"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  tcp_nodelay     on"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  keepalive_timeout  10"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#gzip  on;")]),t._v("\n  upstream myproject "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(".\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  server "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("下面详细介绍下这段代码中每个配置选项的含义。")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("include")]),t._v(" 用来设定文件的mime类型,类型在配置文件目录下的mime.type文件定义，来告诉nginx来识别文件类型。")]),t._v(" "),s("li",[s("strong",[t._v("default_type")]),t._v(" 设定了默认的类型为二进制流，也就是当文件类型未定义时使用这种方式，例如在没有配置 asp 的 locate 环境时，Nginx是不予解析的，此时，用浏览器访问asp文件就会出现下载了。")]),t._v(" "),s("li",[s("strong",[t._v("log_format")]),t._v(" 用于设置日志的格式，和记录哪些参数，这里设置为 main，刚好用于 access_log 来记录这种类型。")])]),t._v(" "),s("p",[t._v("main的类型日志如下：也可以增删部分参数。")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('127.0.0.1 - - [21/Apr/2015:18:09:54 +0800] "GET /index.php HTTP/1.1" 200 87151 "-" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_2) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/41.0.2272.76 Safari/537.36"\n')])])]),s("ul",[s("li",[s("strong",[t._v("access_log")]),t._v(" 用来纪录每次的访问日志的文件地址，后面的main是日志的格式样式，对应于log_format的main。")]),t._v(" "),s("li",[s("strong",[t._v("sendfile")]),t._v(" 参数用于开启高效文件传输模式。将tcp_nopush和tcp_nodelay两个指令设置为on用于防止网络阻塞。")]),t._v(" "),s("li",[s("strong",[t._v("keepalive_timeout")]),t._v(" 设置客户端连接保持活动的超时时间。在超过这个时间之后，服务器会关闭该连接。")])]),t._v(" "),s("p",[t._v("还有很多各种配置，以后等用到来再说。")]),t._v(" "),s("h3",{attrs:{id:"server-模块"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#server-模块","aria-hidden":"true"}},[t._v("#")]),t._v(" server 模块")]),t._v(" "),s("p",[t._v("server 模块是http的子模块，它用来定一个虚拟主机，我们先讲最基本的配置，这些在后面再讲。")]),t._v(" "),s("p",[t._v("我们看一下一个简单的server 是如何做的？")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("server "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  listen       8080"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  server_name  localhost 192.168.12.10 www.yangyi.com"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 全局定义，如果都是这一个目录，这样定义最简单。")]),t._v("\n  root   /Users/yangyi/www"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  index  index.php index.html index.htm"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  charset utf-8"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  access_log  usr/local/var/log/host.access.log  main"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  aerror_log  usr/local/var/log/host.error.log  error"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("ul",[s("li",[s("strong",[t._v("server")]),t._v(" 标志定义虚拟主机开始。")]),t._v(" "),s("li",[s("strong",[t._v("listen")]),t._v(" 用于指定虚拟主机的服务端口。")]),t._v(" "),s("li",[s("strong",[t._v("server_name")]),t._v(" 用来指定IP地址或者域名，多个域名之间用空格分开。")]),t._v(" "),s("li",[s("strong",[t._v("root")]),t._v(" 表示在这整个server虚拟主机内，全部的root web根目录。注意要和locate {}下面定义的区分开来。")]),t._v(" "),s("li",[s("strong",[t._v("index")]),t._v(" 全局定义访问的默认首页地址。注意要和locate {}下面定义的区分开来。")]),t._v(" "),s("li",[s("strong",[t._v("charset")]),t._v(" 用于设置网页的默认编码格式。")]),t._v(" "),s("li",[s("strong",[t._v("access_log")]),t._v(" 用来指定此虚拟主机的访问日志存放路径，最后的main用于指定访问日志的输出格式。")])]),t._v(" "),s("h3",{attrs:{id:"location-模块"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#location-模块","aria-hidden":"true"}},[t._v("#")]),t._v(" location 模块")]),t._v(" "),s("p",[t._v("location模块是nginx中用的最多的，也是最重要的模块了，什么负载均衡啊、反向代理啊、虚拟域名啊都与它相关。慢慢来讲：")]),t._v(" "),s("p",[t._v("location 根据它字面意思就知道是来定位的，定位URL，解析URL，所以，它也提供了强大的正则匹配功能，也支持条件判断匹配，用户可以通过location指令实现Nginx对动、静态网页进行过滤处理。像我们的php环境搭建就是用到了它。")]),t._v(" "),s("p",[t._v("我们先来看这个，设定默认首页和虚拟机目录。")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("location / "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  root   /Users/yangyi/www"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  index  index.php index.html index.htm"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("ul",[s("li",[s("strong",[t._v("location /")]),t._v(" 表示匹配访问根目录。")]),t._v(" "),s("li",[s("strong",[t._v("root")]),t._v(" 指令用于指定访问根目录时，虚拟主机的web目录，这个目录可以是相对路径（相对路径是相对于nginx的安装目录）。也可以是绝对路径。")]),t._v(" "),s("li",[s("strong",[t._v("index")]),t._v(" 用于设定我们只输入域名后访问的默认首页地址，有个先后顺序：index.php index.html index.htm，如果没有开启目录浏览权限，又找不到这些默认首页，就会报403错误。")]),t._v(" "),s("li",[s("strong",[t._v("location")]),t._v(" 还有一种方式就是正则匹配，开启正则匹配这样："),s("code",[t._v("location ~")]),t._v("。后面加个~。")])]),t._v(" "),s("p",[t._v("下面这个例子是运用正则匹配来链接php。我们之前搭建环境也是这样做：")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("location ~ \\.php$ "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  root           /usr/share/www"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  fastcgi_pass   127.0.0.1:9000"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  fastcgi_index  index.php"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  include        fastcgi.conf"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[s("code",[t._v("\\.php$")]),t._v(" 熟悉正则的我们直到，这是匹配.php结尾的URL，用来解析php文件。里面的root也是一样，用来表示虚拟主机的根目录。\nfast_pass链接的是php-fpm 的地址，之前我们也搭建过。其他几个参数我们以后再说。")]),t._v(" "),s("p",[t._v("location 还有其他用法，等讲到实例的时候，再看吧。")]),t._v(" "),s("h3",{attrs:{id:"upstream-模块"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#upstream-模块","aria-hidden":"true"}},[t._v("#")]),t._v(" upstream 模块")]),t._v(" "),s("p",[t._v("upstream 模块负债负载均衡模块，通过一个简单的调度算法来实现客户端IP到后端服务器的负载均衡。我们先学习怎么用，具体的使用实例以后再说。")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("upstream test.com "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  ip_hash"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  server 192.168.12.1:80"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  server 192.168.12.2:80 down"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  server 192.168.12.3:8080 max_fails"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("3  fail_timeout"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("20s"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  server 192.168.12.4:8080"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("在上面的例子中，通过upstream指令指定了一个负载均衡器的名称 test.com。这个名称可以任意指定，在后面需要的地方直接调用即可。")]),t._v(" "),s("p",[t._v("里面是ip_hash这是其中的一种负载均衡调度算法，下面会着重介绍。紧接着就是各种服务器了。用server关键字表识，后面接ip。")]),t._v(" "),s("p",[t._v("Nginx的负载均衡模块目前支持4种调度算法:")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("weight")]),t._v(" 轮询（默认）。每个请求按时间顺序逐一分配到不同的后端服务器，如果后端某台服务器宕机，故障系统被自动剔除，使用户访问不受影响。weight。指定轮询权值，weight值越大，分配到的访问机率越高，主要用于后端每个服务器性能不均的情况下。")]),t._v(" "),s("li",[s("strong",[t._v("ip_hash")]),t._v("。每个请求按访问IP的hash结果分配，这样来自同一个IP的访客固定访问一个后端服务器，有效解决了动态网页存在的session共享问题。")]),t._v(" "),s("li",[s("strong",[t._v("fair")]),t._v("。比上面两个更加智能的负载均衡算法。此种算法可以依据页面大小和加载时间长短智能地进行负载均衡，也就是根据后端服务器的响应时间来分配请求，响应时间短的优先分配。Nginx本身是不支持fair的，如果需要使用这种调度算法，必须下载Nginx的"),s("code",[t._v("upstream_fair")]),t._v("模块。")]),t._v(" "),s("li",[s("strong",[t._v("url_hash")]),t._v("。按访问url的hash结果来分配请求，使每个url定向到同一个后端服务器，可以进一步提高后端缓存服务器的效率。Nginx本身是不支持url_hash的，如果需要使用这种调度算法，必须安装Nginx 的"),s("code",[t._v("hash")]),t._v("软件包。")])]),t._v(" "),s("p",[t._v("在"),s("code",[t._v("HTTP Upstream")]),t._v("模块中，可以通过server指令指定后端服务器的IP地址和端口，同时还可以设定每个后端服务器在负载均衡调度中的状态。常用的状态有：")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("down")]),t._v(" 表示当前的server暂时不参与负载均衡。")]),t._v(" "),s("li",[s("strong",[t._v("backup")]),t._v(" 预留的备份机器。当其他所有的非backup机器出现故障或者忙的时候，才会请求backup机器，因此这台机器的压力最轻。")]),t._v(" "),s("li",[s("strong",[t._v("max_fails")]),t._v(" 允许请求失败的次数，默认为1。当超过最大次数时，返回proxy_next_upstream 模块定义的错误。")]),t._v(" "),s("li",[s("strong",[t._v("fail_timeout")]),t._v(" 在经历了max_fails次失败后，暂停服务的时间。max_fails可以和fail_timeout一起使用。")])]),t._v(" "),s("p",[t._v("注意 当负载调度算法为ip_hash时，后端服务器在负载均衡调度中的状态不能是weight和backup。")]),t._v(" "),s("h3",{attrs:{id:"nginx-conf-示例"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#nginx-conf-示例","aria-hidden":"true"}},[t._v("#")]),t._v(" nginx.conf 示例")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# For more information on configuration, see:")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   * Official English Documentation: http://nginx.org/en/docs/")]),t._v("\n\nuser nginx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nworker_processes auto"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nerror_log /var/log/nginx/error.log"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\npid /run/nginx.pid"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Load dynamic modules. See /usr/share/nginx/README.dynamic.")]),t._v("\ninclude /usr/share/nginx/modules/*.conf"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nevents "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    worker_connections 1024"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\nhttp "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    log_format  main  "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$remote_addr")]),t._v(" - "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$remote_user")]),t._v(" ["),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$time_local")]),t._v('] "'),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$request")]),t._v("\" '")]),t._v("\n                      "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$status")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$body_bytes_sent")]),t._v(' "'),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$http_referer")]),t._v("\" '")]),t._v("\n                      "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'\""),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$http_user_agent")]),t._v('" "'),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$http_x_forwarded_for")]),t._v("\"'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    access_log  /var/log/nginx/access.log  main"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    sendfile            on"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    tcp_nopush          on"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    tcp_nodelay         on"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    keepalive_timeout   65"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    types_hash_max_size 2048"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    include             /etc/nginx/mime.types"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    default_type        application/octet-stream"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Load modular configuration files from the /etc/nginx/conf.d directory.")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# See http://nginx.org/en/docs/ngx_core_module.html#include")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# for more information.")]),t._v("\n    include /etc/nginx/conf.d/*.conf"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    server "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#       listen       80 default_server;")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#       listen       [::]:80 default_server;")]),t._v("\n\n        listen 80"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        listen "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("::"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(":80 ipv6only"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("on default_server"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        server_name  _"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        root         /usr/share/nginx/html"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 站点根目录")]),t._v("\n\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Load configuration files for the default server block.")]),t._v("\n        include /etc/nginx/default.d/*.conf"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        location / "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 解析 PHP 文件")]),t._v("\n        location ~ \\.php$ "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n          root           /usr/share/nginx/html"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#修改为nginx默认路径")]),t._v("\n          fastcgi_pass   127.0.0.1:9000"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n          fastcgi_index  index.php"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n          fastcgi_param  SCRIPT_FILENAME  /usr/share/nginx/html"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$fastcgi_script_name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n          include        fastcgi_params"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 4xx")]),t._v("\n        error_page 404 /404.html"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            location "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" /40x.html "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 5xx")]),t._v("\n        error_page 500 502 503 504 /50x.html"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            location "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" /50x.html "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Settings for a TLS enabled server.")]),t._v("\n\n   server "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n       listen       443 ssl http2 default_server"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n       listen       "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("::"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(":443 ssl http2 default_server"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n       server_name  _"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n       root         /usr/share/nginx/html"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n       ssl_certificate "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/etc/pki/nginx/server.crt"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n       ssl_certificate_key "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/etc/pki/nginx/private/server.key"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n       ssl_session_cache shared:SSL:1m"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n       ssl_session_timeout  10m"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n       ssl_ciphers HIGH:"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("aNULL:"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("MD5"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n       ssl_prefer_server_ciphers on"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n       "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Load configuration files for the default server block.")]),t._v("\n       include /etc/nginx/default.d/*.conf"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n       location / "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n       "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n       error_page 404 /404.html"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n           location "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" /40x.html "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n       "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n       error_page 500 502 503 504 /50x.html"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n           location "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" /50x.html "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n       "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h2",{attrs:{id:"虚拟站点配置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#虚拟站点配置","aria-hidden":"true"}},[t._v("#")]),t._v(" 虚拟站点配置")]),t._v(" "),s("h3",{attrs:{id:"基于域名的虚拟主机"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#基于域名的虚拟主机","aria-hidden":"true"}},[t._v("#")]),t._v(" 基于域名的虚拟主机")]),t._v(" "),s("p",[t._v("假设我们在本地有2个项目，分别在 "),s("code",[t._v("/etc/hosts")]),t._v(" 里映射到本地的 127.0.0.1 上：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("127.0.0.1 test1.xiaoyulive.top\n127.0.0.1 test2.xiaoyulive.top\n")])])]),s("p",[t._v("这2个项目分别对应于以下的2个文件夹，我们用域名对应文件夹名字，这样子好记：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("/usr/nginx/test1.xiaoyulive.top\n/usr/nginx/test2.xiaoyulive.top\n")])])]),s("p",[t._v("每个目录下都有一个index.php文件，简单的输入:")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# /usr/nginx/test1.xiaoyulive.top")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("?php\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'hello'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# /usr/nginx/test2.xiaoyulive.top")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("?php\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'world'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("下面我们就来搭建这2个域名的虚拟主机，很显然，我们要新建2个conf文件来完成。")]),t._v(" "),s("p",[t._v("为了看起来简洁好看，我们使用 include 在 "),s("code",[t._v("nginx.conf")]),t._v(" 中包含外面的2个conf文件，这样就清晰了很多。不会使得这个 "),s("code",[t._v("nginx.conf")]),t._v(" 内容太多：")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("main\nevents "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nhttp "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("\n  include /etc/nginx/vhost/test1.xiaoyulive.top"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  include /etc/nginx/vhost/test2.xiaoyulive.top"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 或者用 *.conf  包含某个文件夹下的所有 conf 文件")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# include /etc/nginx/vhost/*.conf")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("然后撰写两个conf文件：")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# /etc/nginx/vhost/test1.xiaoyulive.top")]),t._v("\nserver "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    listen 80"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    server_name test1.xiaoyulive.top"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    root /usr/nginx/test1.xiaoyulive.top"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    index index.php index.html index.htm"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    access_log /usr/local/var/log/nginx/test1.xiaoyulive.top.log main"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    error_log /usr/local/var/log/nginx/test1.xiaoyulive.top.log error"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    location ~ \\.php$ "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        fastcgi_pass   127.0.0.1:9000"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        fastcgi_index  index.php"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        include        fastcgi.conf"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# /etc/nginx/vhost/test2.xiaoyulive.top")]),t._v("\nserver "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    listen 80"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    server_name test2.xiaoyulive.top"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    root /usr/nginx/test2.xiaoyulive.top"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    index index.php index.html index.htm"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    access_log /usr/local/var/log/nginx/test2.xiaoyulive.top.log main"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    error_log /usr/local/var/log/nginx/test2.xiaoyulive.top.log error"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    location ~ \\.php$ "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        fastcgi_pass   127.0.0.1:9000"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        fastcgi_index  index.php"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        include        fastcgi.conf"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("这样2个很精简的虚拟域名就搭建好了。重启下nginx，然后打开浏览器访问一下这2个域名，就能看到对应的域名内容了。")]),t._v(" "),s("h3",{attrs:{id:"基于ip的距离主机"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#基于ip的距离主机","aria-hidden":"true"}},[t._v("#")]),t._v(" 基于IP的距离主机")]),t._v(" "),s("p",[t._v("为本机绑定多个IP以便于测试:")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ifconfig")]),t._v(" ens33:1 192.168.2.151/24 up\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ifconfig")]),t._v(" ens33:2 192.168.2.152/24 up\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ifconfig")]),t._v(" ens33:3 192.168.2.153/24 up\n")])])]),s("p",[t._v("创建三个站点目录并写入文件:")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("mkdir")]),t._v(" www "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("cd")]),t._v(" www\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("mkdir")]),t._v(" test1\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("mkdir")]),t._v(" test2\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("mkdir")]),t._v(" test3\n$ "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'test1'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" test1/index.html\n$ "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'test2'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" test2/index.html\n$ "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'test3'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" test3/index.html\n")])])]),s("p",[t._v("创建3个虚拟主机文件:")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("vim")]),t._v(" /etc/nginx/conf.d/test1.conf\nserver "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    listen       192.168.2.151:80"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    location / "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        root   /root/www/test1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        index  index.html index.htm"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("vim")]),t._v(" /etc/nginx/conf.d/test2.conf\nserver "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    listen       192.168.2.152:80"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    location / "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        root   /root/www/test2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        index  index.html index.htm"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("vim")]),t._v(" /etc/nginx/conf.d/test3.conf\nserver "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    listen       192.168.2.153:80"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    location / "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        root   /root/www/test3"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        index  index.html index.htm"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("测试")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("curl")]),t._v(" 192.168.2.151\ntest1\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("curl")]),t._v(" 192.168.2.152\ntest2\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("curl")]),t._v(" 192.168.2.153\ntest3\n")])])]),s("h3",{attrs:{id:"基于端口的虚拟主机"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#基于端口的虚拟主机","aria-hidden":"true"}},[t._v("#")]),t._v(" 基于端口的虚拟主机")]),t._v(" "),s("p",[t._v("还是创建两个虚拟站点:")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'test1'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" /root/www/test1/index.html\n$ "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'test2'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" /root/www/test2/index.html\n")])])]),s("p",[t._v("这个就很容易了, 不需要更多额外的操作, 直接在配置文件中指定端口即可:")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("vim")]),t._v(" /etc/nginx/conf.d/test1.conf\nserver "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    listen       127.0.0.1:8081"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    location / "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        root   /root/www/test2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        index  index.html index.htm"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("vim")]),t._v(" /etc/nginx/conf.d/test2.conf\nserver "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    listen       127.0.0.1:8082"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    location / "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        root   /root/www/test2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        index  index.html index.htm"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("测试:")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("curl")]),t._v(" 127.0.0.1:8081\ntest1\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("curl")]),t._v(" 127.0.0.1:8082\ntest2\n")])])]),s("h2",{attrs:{id:"配置nginx以支持php"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#配置nginx以支持php","aria-hidden":"true"}},[t._v("#")]),t._v(" 配置Nginx以支持PHP")]),t._v(" "),s("p",[t._v("首先安装一堆 php 及相关组件")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ yum -y "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" php php-cli php-fpm php-pear php-mysql php-mssql php-odbc php-imap php-common php-devel lighttpd-fastcgi php-gd php-ldapphp-xml php-xmlrpc php-mbstring php-mcrypt php-snmp php-soap php-tidy\n")])])]),s("h3",{attrs:{id:"开启php服务"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#开启php服务","aria-hidden":"true"}},[t._v("#")]),t._v(" 开启PHP服务")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ systemctl start php-fpm\n")])])]),s("p",[t._v("查看是否启动成功")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ps")]),t._v(" -ef "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("grep")]),t._v(" php-fpm\nroot      20153      1  0 21:26 ?        00:00:00 php-fpm: master process "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("/etc/php-fpm.conf"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\napache    20154  20153  0 21:26 ?        00:00:00 php-fpm: pool www\napache    20155  20153  0 21:26 ?        00:00:00 php-fpm: pool www\napache    20156  20153  0 21:26 ?        00:00:00 php-fpm: pool www\napache    20157  20153  0 21:26 ?        00:00:00 php-fpm: pool www\napache    20158  20153  0 21:26 ?        00:00:00 php-fpm: pool www\nroot      20924  20650  0 21:38 pts/1    00:00:00 "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("grep")]),t._v(" --color"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("auto php-fpm\n\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("netstat")]),t._v(" -ntlp "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("grep")]),t._v(" 9000\ntcp        0      0 127.0.0.1:9000          0.0.0.0:*               LISTEN\n")])])]),s("p",[t._v("php-fpm 默认监听 9000")]),t._v(" "),s("h3",{attrs:{id:"php-fpm-开机启动"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#php-fpm-开机启动","aria-hidden":"true"}},[t._v("#")]),t._v(" php-fpm 开机启动")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("chkconfig")]),t._v(" --levels 235 php-fpm on\n")])])]),s("h3",{attrs:{id:"配置-nginx-conf"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#配置-nginx-conf","aria-hidden":"true"}},[t._v("#")]),t._v(" 配置 nginx.conf")]),t._v(" "),s("p",[t._v("首先最好备份 nginx.conf，以防出错")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("cp")]),t._v(" /etc/nginx/conf.d/default.conf /etc/nginx/conf.d/default.conf.bak\n")])])]),s("p",[t._v("编辑 "),s("code",[t._v("/etc/nginx/conf.d/default.conf")])]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("server "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  listen       80"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  server_name  localhost"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  location / "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    root   /usr/share/nginx/html"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    index  index.php index.html index.htm"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#增加index.php")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#error_page  404              /404.html;")]),t._v("\n\n  error_page   500 502 503 504  /50x.html"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  location "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" /50x.html "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    root   /usr/share/nginx/html"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  location ~ \\.php$ "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    root           /usr/share/nginx/html"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#修改为nginx默认路径")]),t._v("\n    fastcgi_pass   127.0.0.1:9000"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    fastcgi_index  index.php"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    fastcgi_param  SCRIPT_FILENAME  /usr/share/nginx/html"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$fastcgi_script_name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    include        fastcgi_params"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("配置php，编辑 "),s("code",[t._v("/etc/php.ini")]),t._v(" 文件，找到以下语句放开注释")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("vim")]),t._v(" /etc/php.ini\ncgi.fix_pathinfo "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" 1\n")])])]),s("p",[t._v("重启 nginx，php-fpm")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ systemctl restart nginx\n$ systemctl restart php-fpm\n")])])]),s("p",[t._v("建立info.php文件")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("vim")]),t._v(" /usr/share/nginx/html/info.php\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("?php\n  phpinfo"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("此时，就可以在浏览器中访问 php 文件了。")]),t._v(" "),s("imgLink",{attrs:{src:"articles/014.jpg"}}),t._v(" "),s("h2",{attrs:{id:"url重写"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#url重写","aria-hidden":"true"}},[t._v("#")]),t._v(" URL重写")]),t._v(" "),s("h2",{attrs:{id:"页面缓存"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#页面缓存","aria-hidden":"true"}},[t._v("#")]),t._v(" 页面缓存")]),t._v(" "),s("h2",{attrs:{id:"反向代理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#反向代理","aria-hidden":"true"}},[t._v("#")]),t._v(" 反向代理")]),t._v(" "),s("h3",{attrs:{id:"正向代理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#正向代理","aria-hidden":"true"}},[t._v("#")]),t._v(" 正向代理")]),t._v(" "),s("p",[t._v("在说反向代理之前，先说下什么是代理或者正向代理。")]),t._v(" "),s("p",[t._v("正向代理也就是代理，他的工作原理就像一个跳板，是用于代理客户端的。所谓"),s("code",[t._v("代理")]),t._v("，就是在客户端和服务端之间强行添加了一层，用来实现流量转发的功能，粗略的框图如下：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("+----------------+         +---------------+        +--------------+\n|                |         |               |        |              |\n|                |         |               |        |              |\n|                |  http   |               | http   |              |\n|    client      <---------\x3e    proxy      <--------\x3e   server     |\n|                |  https  |               | https  |              |\n|                |         |               |        |              |\n|                |         |               |        |              |\n+----------------+         +---------------+        +--------------+\n\n")])])]),s("p",[t._v("举个很简单的例子：你直接在大陆地区访问"),s("code",[t._v("google.com")]),t._v("肯定是访问不了的，原因大家都知道，现在假如你有一台在美国的主机A，并且能够正常访问，那么你可以将浏览器对"),s("code",[t._v("google.com")]),t._v("的请求先转发给服务器A，服务器A收到请求后，扮演客户端的角色，发起对"),s("code",[t._v("google.com")]),t._v("的请求，服务器A收到响应后，又扮演服务端，将此响应原封不动的返回给你，自此，一次正向代理顺利完成。")]),t._v(" "),s("p",[t._v("结论就是，"),s("code",[t._v("正向代理")]),t._v(" 是一个位于客户端和原始服务器(origin server)之间的服务器。为了从原始服务器取得内容，客户端向代理发送一个请求并指定目标(原始服务器)，然后代理向原始服务器转交请求并将获得的内容返回给客户端。")]),t._v(" "),s("p",[t._v("目前代理软件很多，浏览器上的代理就更多了。什么自由门啊，红杏等。")]),t._v(" "),s("h3",{attrs:{id:"反向代理-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#反向代理-2","aria-hidden":"true"}},[t._v("#")]),t._v(" 反向代理")]),t._v(" "),s("p",[s("code",[t._v("反向代理")]),t._v("顾名思义是用来代理服务端的。我们也举个简单的例子来说明：我们知道"),s("code",[t._v("google.com")]),t._v("每秒钟要处理如洪水般的网络请求，这些请求如果仅仅让一台单一的服务器处理，肯定是处理不过来的，我们自然而然的想到让多台服务器来处理这些请求，减少每台服务器的压力。但是现在有一个问题，多个服务器那就产生了多个IP，一般的，"),s("code",[t._v("google.com")]),t._v("只能解析到某个固定的IP（为了方便描述，我们暂且这样认为。实际情况下，通过设置也是可以让同一个域名解析到多个IP的），因为现在存在多个Server，我的一个"),s("code",[t._v("google.com")]),t._v("就不能解析到这些服务器上，而且用多个二级域名比如"),s("code",[t._v("server1.google.com")]),t._v("，"),s("code",[t._v("server2.google.com")]),t._v("等等也给用户造成了使用上的不便（一万台服务器，你咋不上天呢?），那该怎么办呢？通过反向代理可以很好的解决这个问题。为此，我绘制了下面的示意图：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("                                                                   +-------------------+\n                                                                   |                   |\n                                                            +------\x3e   server 1        |\n+-------------+                                             |      |                   |\n|             +----------+                                  |      |                   |\n|  client 1   |          |                                  |      +-------------------+\n|             |          |                                  |\n+-------------+          |                                  |\n                         |         +------------------+     |      +-------------------+\n                         |         |                  |     |      |                   |\n+-------------+          |         |                  |     |      |   server 2        |\n|             |          |         |                  +------------\x3e                   |\n|  clent 2    +--------------------\x3e  reverse proxy   |     |      |                   |\n|             |          |         |                  |     |      +-------------------+\n+-------------+          |         |                  |     |\n                         |         |                  |     |               .\n      .                  |         |                  |     |               .\n      .                  |         +------------------+     |               .\n      .                  |                                  |\n                         |                                  |      +--------------------+\n+-------------+          |                                  |      |                    |\n|             |          |                                  |      |   server m         |\n|  client n   +----------+                                  +------\x3e                    |\n|             |                                                    |                    |\n+-------------+                                                    +--------------------+\n\n\n")])])]),s("p",[t._v("正向代理和反向代理就基本清楚了，那我们就来用nginx来配置一个反向代理。")]),t._v(" "),s("p",[t._v("nginx 使用反向代理，主要是使用location模块下的 "),s("code",[t._v("proxy_pass")]),t._v(" 选项。")]),t._v(" "),s("h3",{attrs:{id:"配置反向代理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#配置反向代理","aria-hidden":"true"}},[t._v("#")]),t._v(" 配置反向代理")]),t._v(" "),s("p",[t._v("我们利用 node 启动一个本地server。")]),t._v(" "),s("p",[t._v("index.js 中开启3000端口 (node 服务器脚本请查阅相关资料)")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ node index\n")])])]),s("p",[t._v("其中index.js")]),t._v(" "),s("imgLink",{attrs:{src:"date/20181116/01.png"}}),t._v(" "),s("p",[t._v("配置host文件, 在里面添加一条记录")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("vim")]),t._v(" /etc/hosts\ntest.com  127.0.0.1\n")])])]),s("p",[s("strong",[t._v("配置nginx.conf")])]),t._v(" "),s("p",[t._v("在"),s("code",[t._v("http")]),t._v("里面添加：")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#本地http-server开启的server，命名为node-server，监听3000端口")]),t._v("\nupstream node-server "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  server 127.0.0.1:3000"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# NGINX 虚拟主机，监听8880端口")]),t._v("\nserver "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  listen 8880"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  server_name test.com"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  access_log /var/log/nginx/node-server"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Gzip Compression")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("gzip")]),t._v(" on"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  gzip_comp_level 6"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  gzip_vary on"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  gzip_min_length  1000"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  gzip_proxied any"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  gzip_buffers 16 8k"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 反向代理 node-server")]),t._v("\n  location / "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    proxy_set_header X-Real-IP "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$remote_addr")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    proxy_set_header X-Forwarded-For "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$proxy_add_x_forwarded_for")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    proxy_set_header Host "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$http_host")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    proxy_set_header X-NginX-Proxy "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 代理的地址")]),t._v("\n    proxy_pass http://node-server"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    proxy_redirect off"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("如果是https, 需要配置SSL证书:")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("server "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    listen 443"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    server_name test.cn"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    root /var/www/html"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    index index.html index.htm"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    ssl on"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    ssl_certificate "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/data/crts/test.crt"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    ssl_certificate_key "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/data/crts/test.key"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    ssl_session_timeout 5m"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("NULL:"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("aNULL:"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("MD5:"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("ADH:"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("RC4"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    ssl_protocols TLSv1 TLSv1.1 TLSv1.2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    ssl_prefer_server_ciphers on"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    location / "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        proxy_pass http://localhost:8443"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[s("strong",[t._v("如果需要转发所有的请求，使用正则表达式，使用~启用正则")])]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("location ~ .*"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("/ "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  proxy_set_header X-Real-IP "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$remote_addr")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  proxy_set_header X-Forwarded-For "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$proxy_add_x_forwarded_for")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  proxy_set_header Host "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$http_host")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  proxy_set_header X-NginX-Proxy "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 代理的地址")]),t._v("\n  proxy_pass http://node-server"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  proxy_redirect off"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[s("strong",[t._v("重新启动设置 "),s("code",[t._v("nginx -s reload")])])]),t._v(" "),s("p",[t._v("测试")]),t._v(" "),s("imgLink",{attrs:{src:"date/20181116/02.png"}}),t._v(" "),s("p",[t._v("可以看到，对于用户的请求，我们成功反向代理到"),s("code",[t._v("127.0.0.1:3000")]),t._v("上！")]),t._v(" "),s("h2",{attrs:{id:"负载均衡"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#负载均衡","aria-hidden":"true"}},[t._v("#")]),t._v(" 负载均衡")]),t._v(" "),s("p",[s("code",[t._v("负载均衡")]),t._v("，这个名称听起来刁刁的有木有！其实嘛，也就那回事，不要被这牛逼哄哄的名词吓住了。")]),t._v(" "),s("p",[t._v("举个例子：我们的小网站，刚开始就一台nginx服务器，后来，随着业务量增大，用户增多，一台服务器已经不够用了，我们就又多加了几台服务器。那么这几台服务器如何调度？如何均匀的提供访问？这就是负载均衡。")]),t._v(" "),s("p",[t._v("负载均衡的好处是可以集群多台机器一起工作，并且对外的IP 和 域名是一样的，外界看起来就好像一台机器一样。")]),t._v(" "),s("p",[t._v("nginx 也刚好提供了强大而又简单的负载均衡功能。")]),t._v(" "),s("h3",{attrs:{id:"配置负载均衡"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#配置负载均衡","aria-hidden":"true"}},[t._v("#")]),t._v(" 配置负载均衡")]),t._v(" "),s("p",[s("strong",[t._v("在不同目录下另开启两个本地server")])]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ http-server -p 3000\n$ http-server -p 3001\n")])])]),s("p",[t._v("在这两个server的根目录下新建 "),s("code",[t._v("index.html")]),t._v("，分别输入'hello, nginx' 与 'hello, nginx (server 2)'")]),t._v(" "),s("p",[s("strong",[t._v("配置nginx.conf")])]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#本地http-server开启的server，命名为node-server，监听3000和3001端口")]),t._v("\nupstream servers"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# weight表示权重，数值越大，表示被分配到这个server的几率越大，这里我们让其相等。")]),t._v("\n  server 127.0.0.1:3000 weight"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  server 127.0.0.1:3001 weight"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# NGINX 虚拟主机，监听80端口")]),t._v("\nserver "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  listen 80"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  server_name test.com"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  access_log /var/log/nginx/node-server"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Gzip Compression")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("gzip")]),t._v(" on"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  gzip_comp_level 6"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  gzip_vary on"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  gzip_min_length  1000"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  gzip_proxied any"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  gzip_buffers 16 8k"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 反向代理 node-server")]),t._v("\n  location / "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    proxy_set_header X-Real-IP "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$remote_addr")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    proxy_set_header X-Forwarded-For "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$proxy_add_x_forwarded_for")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    proxy_set_header Host "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$http_host")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    proxy_set_header X-NginX-Proxy "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 代理的地址")]),t._v("\n    proxy_pass http://servers"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    proxy_redirect off"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[s("strong",[t._v("重启Nginx "),s("code",[t._v("nginx -s reload")])])]),t._v(" "),s("p",[t._v("测试")]),t._v(" "),s("imgLink",{attrs:{src:"date/20181116/03.png"}}),t._v(" "),s("imgLink",{attrs:{src:"date/20181116/04.png"}}),t._v(" "),s("p",[t._v("我们可以看到，对于同一个请求，nginx会按照权重随机的分配到不同的server！这样就完成了均衡负载。对于client来说，好像就只有一台server！")]),t._v(" "),s("h2",{attrs:{id:"nginx-配置ssl证书"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#nginx-配置ssl证书","aria-hidden":"true"}},[t._v("#")]),t._v(" Nginx 配置ssl证书")]),t._v(" "),s("p",[t._v("要让网站拥有 HTTPS (Hypertext Transfer Protocol Secure) 的能力, 需要在服务器中配置 SSL (Secure Socket Layer) 证书。")]),t._v(" "),s("h3",{attrs:{id:"证书申请"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#证书申请","aria-hidden":"true"}},[t._v("#")]),t._v(" 证书申请")]),t._v(" "),s("p",[t._v("首先是证书的申请, 有好几种方式, 很多证书是要收费的, 我们可以使用"),s("a",{attrs:{href:"https://common-buy.aliyun.com/?spm=5176.7968328.1266638..333a1232CdEgOz&commodityCode=cas#/buy",target:"_blank",rel:"noopener noreferrer"}},[t._v("阿里云云盾服务"),s("OutboundLink")],1),t._v("进行证书申请。")]),t._v(" "),s("imgLink",{attrs:{src:"date/20181130/001.png"}}),t._v(" "),s("p",[t._v("或者"),s("a",{attrs:{href:"https://buy.cloud.tencent.com/ssl",target:"_blank",rel:"noopener noreferrer"}},[t._v("腾讯云"),s("OutboundLink")],1),t._v("进行申请")]),t._v(" "),s("imgLink",{attrs:{src:"date/20181130/002.png"}}),t._v(" "),s("h3",{attrs:{id:"在nginx中配置ssl"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#在nginx中配置ssl","aria-hidden":"true"}},[t._v("#")]),t._v(" 在Nginx中配置SSL")]),t._v(" "),s("p",[t._v("下载下来的文件包括:")]),t._v(" "),s("imgLink",{attrs:{src:"date/20181130/003.png"}}),t._v(" "),s("p",[t._v("注意到有一个 pem 文件和一个 key 文件, 分别将其路径配置到 "),s("code",[t._v("ssl_certificate")]),t._v(" 和 "),s("code",[t._v("ssl_certificate_key")]),t._v(" 字段, 比如:")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("server "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    listen       443 ssl http2 default_server"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    listen       "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("::"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(":443 ssl http2 default_server"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    server_name  _"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    root         /usr/share/nginx/html"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    ssl_certificate "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/root/.ssl/ssl.pem"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    ssl_certificate_key "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/root/.ssl/ssl.key"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    ssl_session_cache shared:SSL:1m"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    ssl_session_timeout  10m"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    ssl_ciphers HIGH:"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("aNULL:"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("MD5"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    ssl_prefer_server_ciphers on"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Load configuration files for the default server block.")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# include /etc/nginx/default.d/*.conf;")]),t._v("\n\n    location / "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    error_page 404 /404.html"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        location "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" /40x.html "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    error_page 500 502 503 504 /50x.html"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        location "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" /50x.html "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("如果是 crt 证书, 同样的配置:")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("ssl_certificate "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/root/.ssl/ssl.crt"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nssl_certificate_key "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/root/.ssl/ssl.key"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("重新加载配置:")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ nginx -s reload\n")])])]),s("p",[t._v("在防火墙中打开指定端口:")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ firewall-cmd --add-port"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("443/tcp\n")])])]),s("p",[t._v("ok, 一切就绪, 浏览器中访问试试:")]),t._v(" "),s("imgLink",{attrs:{src:"date/20181130/004.png"}}),t._v(" "),s("h2",{attrs:{id:"解决方案"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#解决方案","aria-hidden":"true"}},[t._v("#")]),t._v(" 解决方案")]),t._v(" "),s("h3",{attrs:{id:"_403-forbidden"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_403-forbidden","aria-hidden":"true"}},[t._v("#")]),t._v(" 403 Forbidden")]),t._v(" "),s("p",[t._v("通常是权限问题, 首先打开站点目录看文件权限, 应满足以下权限:")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@linuxidc ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ll")]),t._v("\ndrwxr-xr-x. 2 root root 4096 Jun 15 03:59 html\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@linuxidc html"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ll")]),t._v("\ntotal 8\n-rw-r--r--. 1 root root 616 Jun 15 03:51 index.html\n")])])]),s("p",[t._v("如果以上权限没有问题, 可能就是配置文件的问题, 打开 "),s("code",[t._v("/etc/nginx.conf")]),t._v(", 修改用户权限为:")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("user root root"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("重启nginx即可")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ nginx -s reload\n")])])]),s("p",[t._v("参考:")]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"https://www.linuxidc.com/Linux/2017-06/144827.htm",target:"_blank",rel:"noopener noreferrer"}},[t._v("Nginx服务器中403 forbidden 错误解决"),s("OutboundLink")],1)])]),t._v(" "),s("h3",{attrs:{id:"open-run-nginx-pid-failed"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#open-run-nginx-pid-failed","aria-hidden":"true"}},[t._v("#")]),t._v(' open() "/run/nginx.pid" failed')]),t._v(" "),s("p",[t._v("报以下错误:")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('nginx: [error] open() "/run/nginx.pid" failed (2: No such file or directory)\n')])])]),s("p",[t._v("重新绑定配置文件: "),s("code",[t._v("nginx -c /etc/nginx/nginx.conf")]),t._v(", 再运行 "),s("code",[t._v("nginx -s reload")]),t._v(" 即可")]),t._v(" "),s("p",[t._v("参考:")]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"https://serverfault.com/questions/565339/nginx-fails-to-stop-and-nginx-pid-is-missing",target:"_blank",rel:"noopener noreferrer"}},[t._v("Nginx fails to stop and nginx.pid is missing"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://www.linuxidc.com/Linux/2018-11/155150.htm",target:"_blank",rel:"noopener noreferrer"}},[t._v("nginx: [error] open() “/run/nginx.pid” failed (2: No such file or directory)"),s("OutboundLink")],1)])]),t._v(" "),s("h3",{attrs:{id:"still-could-not-bind"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#still-could-not-bind","aria-hidden":"true"}},[t._v("#")]),t._v(" still could not bind()")]),t._v(" "),s("p",[t._v("报以下错误:")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("nginx: [emerg] still could not bind()\n")])])]),s("p",[t._v("查看nginx服务占用并杀死进程:")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ps")]),t._v(" -ef "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("grep")]),t._v(" nginx\nroot      5967     1  0 10:06 ?        00:00:00 nginx: master process nginx\nnginx     6051  5967  0 10:33 ?        00:00:00 nginx: worker process\nnginx     6052  5967  0 10:33 ?        00:00:00 nginx: worker process\nnginx     6053  5967  0 10:33 ?        00:00:00 nginx: worker process\nnginx     6054  5967  0 10:33 ?        00:00:00 nginx: worker process\nroot      7041  6616  0 21:04 pts/1    00:00:00 "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("grep")]),t._v(" --color"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("auto nginx\n\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("netstat")]),t._v(" -tulpn "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("grep")]),t._v(" 80\ntcp        0      0 0.0.0.0:80              0.0.0.0:*               LISTEN      5967/nginx: master  \ntcp6       0      0 :::80                   :::*                    LISTEN      5967/nginx: master  \n\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("kill")]),t._v(" -9 5967\n")])])]),s("h3",{attrs:{id:"指定日志文件时注意事项"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#指定日志文件时注意事项","aria-hidden":"true"}},[t._v("#")]),t._v(" 指定日志文件时注意事项")]),t._v(" "),s("p",[t._v("如果创建一个 server, 指定了其 access_log 与 error_log, 注意一定得在对应的目录创建对应的日志文件, 否则nginx将无法启动")]),t._v(" "),s("h3",{attrs:{id:"connect-to-127-0-0-1-8080-failed-13-permission-denied-while-connect"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#connect-to-127-0-0-1-8080-failed-13-permission-denied-while-connect","aria-hidden":"true"}},[t._v("#")]),t._v(" connect() to 127.0.0.1:8080 failed (13: Permission denied) while connect")]),t._v(" "),s("p",[t._v("在进行 Nginx+Tomcat 负载均衡的时候遇到了这个权限问题，在error.log日志中，我们可以看到如下：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("connect() to 127.0.0.1:8080 failed (13: Permission denied) while connecting to upstream\n")])])]),s("p",[t._v("经过一番检查以及google, 应该是SeLinux的导致的。可以选择一些两种方式进行：")]),t._v(" "),s("p",[t._v("1、关闭SeLinux,可以查看以下文章：")]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"http://www.hpboys.com/824.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("CentOS下查看SeLinux状态及关闭SeLinux"),s("OutboundLink")],1)])]),t._v(" "),s("p",[t._v("2、执行下面的命令")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ setsebool -P httpd_can_network_connect 1\n")])])]),s("h3",{attrs:{id:"centos下查看selinux状态及关闭selinux"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#centos下查看selinux状态及关闭selinux","aria-hidden":"true"}},[t._v("#")]),t._v(" CentOS下查看SeLinux状态及关闭SeLinux")]),t._v(" "),s("ol",[s("li",[t._v("查看SELinux状态：")])]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ /usr/sbin/sestatus -v  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 如果SELinux status参数为enabled即为开启状态")]),t._v("\nSELinux status:                 enabled\n\n$ getenforce  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 也可以用这个命令检查")]),t._v("\n")])])]),s("ol",{attrs:{start:"2"}},[s("li",[t._v("关闭SELinux：")])]),t._v(" "),s("p",[s("strong",[t._v("临时关闭（不用重启机器）")])]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ setenforce 0 "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 设置SELinux 成为permissive模式")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# setenforce 1 # 设置SELinux 成为enforcing模式")]),t._v("\n")])])]),s("p",[s("strong",[t._v("修改配置文件需要重启机器")])]),t._v(" "),s("p",[t._v("修改 "),s("code",[t._v("/etc/selinux/config")]),t._v(" 文件")]),t._v(" "),s("p",[t._v("将 "),s("code",[t._v("SELINUX=enforcing")]),t._v(" 改为 "),s("code",[t._v("SELINUX=disabled")])]),t._v(" "),s("p",[t._v("重启机器即可")]),t._v(" "),s("h2",{attrs:{id:"参考资料"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#参考资料","aria-hidden":"true"}},[t._v("#")]),t._v(" 参考资料")]),t._v(" "),s("p",[t._v("安装与配置")]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"https://blog.csdn.net/liupeifeng3514/article/details/79006959",target:"_blank",rel:"noopener noreferrer"}},[t._v("Nginx 服务器安装与配置"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"http://www.cnblogs.com/xiaogangqq123/archive/2011/03/02/1969006.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Nginx配置文件详细说明"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"http://blog.csdn.net/xifeijian/article/details/20956605",target:"_blank",rel:"noopener noreferrer"}},[t._v("Nginx 配置性能优化"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"http://ixdba.blog.51cto.com/2895551/790611",target:"_blank",rel:"noopener noreferrer"}},[t._v("轻量级HTTP服务器Nginx（配置与调试Nginx）"),s("OutboundLink")],1)])]),t._v(" "),s("p",[t._v("虚拟主机")]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"https://blog.csdn.net/liupeifeng3514/article/details/79006998",target:"_blank",rel:"noopener noreferrer"}},[t._v("Nginx 虚拟主机配置的三种方式（一）（基于IP）"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://blog.csdn.net/liupeifeng3514/article/details/79007035",target:"_blank",rel:"noopener noreferrer"}},[t._v("Nginx 虚拟主机配置的三种方式（二）（基于端口）"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://blog.csdn.net/liupeifeng3514/article/details/79007051",target:"_blank",rel:"noopener noreferrer"}},[t._v("Nginx 虚拟主机配置的三种方式（三）（基于域名）"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://blog.csdn.net/l1028386804/article/details/48213523",target:"_blank",rel:"noopener noreferrer"}},[t._v("Apache之——多虚拟主机多站点配置的两种实现方案"),s("OutboundLink")],1)])]),t._v(" "),s("p",[t._v("负载均衡与反向代理")]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"http://freeloda.blog.51cto.com/2033581/1288553",target:"_blank",rel:"noopener noreferrer"}},[t._v("Nginx 反向代理、负载均衡、页面缓存、URL重写及读写分离详解"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://www.zybuluo.com/phper/note/89391",target:"_blank",rel:"noopener noreferrer"}},[t._v("Nginx 的配置、虚拟主机、负载均衡和反向代理"),s("OutboundLink")],1)])]),t._v(" "),s("p",[t._v("Docker")]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"https://www.cnblogs.com/roverliang/p/8431206.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Docker 使用入门，创建一个Nginx服务器"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"http://www.runoob.com/docker/docker-install-nginx.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Docker 安装 Nginx"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://blog.csdn.net/mynameissls/article/details/80742752",target:"_blank",rel:"noopener noreferrer"}},[t._v("基于 Docker 安装 Nginx"),s("OutboundLink")],1)])]),t._v(" "),s("p",[t._v("问题解决")]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"https://blog.csdn.net/vanilla_he/article/details/79205091",target:"_blank",rel:"noopener noreferrer"}},[t._v("nginx配置文件里user只能是root，否则报403错误"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://blog.csdn.net/weixin_40292098/article/details/82913335",target:"_blank",rel:"noopener noreferrer"}},[t._v("nginx 监听端口问题"),s("OutboundLink")],1)])])],1)},[],!1,null,null,null);n.default=e.exports}}]);