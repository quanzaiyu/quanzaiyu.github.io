(window.webpackJsonp=window.webpackJsonp||[]).push([[243],{656:function(t,a,e){"use strict";e.r(a);var r=e(1),s=Object(r.a)({},function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"搭建-gitlab-服务器"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#搭建-gitlab-服务器","aria-hidden":"true"}},[t._v("#")]),t._v(" 搭建 GitLab 服务器")]),t._v(" "),e("h2",{attrs:{id:"简介"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#简介","aria-hidden":"true"}},[t._v("#")]),t._v(" 简介")]),t._v(" "),e("p",[t._v("GitLab是利用 Ruby on Rails 一个开源的版本管理系统，实现一个自托管的Git项目仓库，可通过Web界面进行访问公开的或者私人项目。它拥有与Github类似的功能，能够浏览源代码，管理缺陷和注释。可以管理团队对仓库的访问，它非常易于浏览提交过的版本并提供一个文件历史库。团队成员可以利用内置的简单聊天程序(Wall)进行交流。它还提供一个代码片段收集功能可以轻松实现代码复用，便于日后有需要的时候进行查找。")]),t._v(" "),e("h2",{attrs:{id:"安装"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#安装","aria-hidden":"true"}},[t._v("#")]),t._v(" 安装")]),t._v(" "),e("h3",{attrs:{id:"apt-get方式"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#apt-get方式","aria-hidden":"true"}},[t._v("#")]),t._v(" apt-get方式")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("curl -s https://packages.gitlab.com/install/repositories/gitlab/gitlab-ce/script.deb.sh | sudo bash\nsudo apt-get install gitlab-ce\nsudo gitlab-ctl reconfigure\n")])])]),e("imgLink",{attrs:{src:"articles/017.jpg/small"}}),t._v(" "),e("h3",{attrs:{id:"deb包方式"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#deb包方式","aria-hidden":"true"}},[t._v("#")]),t._v(" deb包方式")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("wget https://packages.gitlab.com/gitlab/gitlab-ce/Ubuntu/pool/trusty/main/g/gitlab-ce/gitlab-ce_8.3.4-ce.0_amd64.deb\ndpkg -i gitlab-ce_8.3.4-ce.0_amd64.deb\nsudo gitlab-ctl reconfigure\n")])])]),e("imgLink",{attrs:{src:"articles/018.jpg/small"}}),t._v(" "),e("h2",{attrs:{id:"常用命令"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#常用命令","aria-hidden":"true"}},[t._v("#")]),t._v(" 常用命令")]),t._v(" "),e("p",[t._v("gitlab 常用命令")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("gitlab-ctl start\ngitlab-ctl stop\ngitlab-ctl status\ngitlab-ctl restart\n")])])]),e("p",[t._v("重新应用配置")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("gitlab-ctl reconfigure\n")])])]),e("p",[t._v("Gitlab 默认的日志文件存放在 "),e("code",[t._v("/var/log/gitlab")]),t._v(" 目录下:")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("gitlab-ctl tail # 查看所有日志\ngitlab-ctl tail nginx/gitlab_access.log # 查看nginx访问日志\n")])])]),e("h2",{attrs:{id:"端口修改"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#端口修改","aria-hidden":"true"}},[t._v("#")]),t._v(" 端口修改")]),t._v(" "),e("p",[t._v("修改监听端口")]),t._v(" "),e("p",[t._v("文件位于 "),e("code",[t._v("/var/opt/gitlab/nginx/conf/gitlab-http.conf")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("vim /var/opt/gitlab/nginx/conf/gitlab-http.conf\n\nupstream gitlab-workhorse {\n  server unix:/var/opt/gitlab/gitlab-workhorse/socket;\n}\n\nserver {\n  listen *:8090; --修改端口\n\n\n  server_name localhost;\n  server_tokens off; ## Don't show the nginx version number, a security best practice\n")])])]),e("p",[t._v("将默认的 80 端口修改为自定义端口即可")]),t._v(" "),e("p",[t._v("如果访问时出现 502 错误，则需要修改 unicorn 端口")]),t._v(" "),e("imgLink",{attrs:{src:"articles/019.jpg/small"}}),t._v(" "),e("p",[t._v("文件位于 "),e("code",[t._v("/etc/gitlab/gitlab.rb")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("unicorn['listen'] = '127.0.0.1'\nunicorn['port'] = 8091\n")])])]),e("p",[t._v("将默认的 8080 端口改为自定义端口即可")]),t._v(" "),e("p",[t._v("重启服务 "),e("code",[t._v("gitlab-ctl restart")])]),t._v(" "),e("p",[t._v("此时，访问正常")]),t._v(" "),e("imgLink",{attrs:{src:"articles/020.jpg/small"}}),t._v(" "),e("h2",{attrs:{id:"登录"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#登录","aria-hidden":"true"}},[t._v("#")]),t._v(" 登录")]),t._v(" "),e("p",[t._v("首次访问，会提示设置密码，默认用户名为 root，设置后即可正常登录")]),t._v(" "),e("imgLink",{attrs:{src:"articles/021.jpg/small"}}),t._v(" "),e("h2",{attrs:{id:"参考资料"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#参考资料","aria-hidden":"true"}},[t._v("#")]),t._v(" 参考资料")]),t._v(" "),e("p",[e("a",{attrs:{href:"https://www.cnblogs.com/laobaozi/p/6638334.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Linux系统下安装Gitlab"),e("OutboundLink")],1)]),t._v(" "),e("p",[e("a",{attrs:{href:"https://www.linuxidc.com/Linux/2016-07/133044.htm",target:"_blank",rel:"noopener noreferrer"}},[t._v("Linux下GitLab安装部署笔记"),e("OutboundLink")],1)]),t._v(" "),e("p",[e("a",{attrs:{href:"https://blog.csdn.net/arybd/article/details/54635295",target:"_blank",rel:"noopener noreferrer"}},[t._v("gitlab修改默认端口"),e("OutboundLink")],1)]),t._v(" "),e("p",[e("a",{attrs:{href:"https://blog.csdn.net/wizard_rp/article/details/73147129",target:"_blank",rel:"noopener noreferrer"}},[t._v("更改gitlab默认端口"),e("OutboundLink")],1)])],1)},[],!1,null,null,null);a.default=s.exports}}]);