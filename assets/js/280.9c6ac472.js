(window.webpackJsonp=window.webpackJsonp||[]).push([[280],{688:function(t,s,n){"use strict";n.r(s);var a={props:["slot-key"],mounted(){this.$nextTick(function(){this.$vuepress.$emit("AsyncMarkdownContentMounted",this.slotKey)})}},e=n(0),r=Object(e.a)(a,function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.slotKey}},[n("h1",{attrs:{id:"nginx-负载均衡"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#nginx-负载均衡","aria-hidden":"true"}},[t._v("#")]),t._v(" Nginx 负载均衡")]),t._v(" "),n("p",[n("code",[t._v("负载均衡")]),t._v("，这个名称听起来刁刁的有木有！其实嘛，也就那回事，不要被这牛逼哄哄的名词吓住了。")]),t._v(" "),n("p",[t._v("举个例子：我们的小网站，刚开始就一台nginx服务器，后来，随着业务量增大，用户增多，一台服务器已经不够用了，我们就又多加了几台服务器。那么这几台服务器如何调度？如何均匀的提供访问？这就是负载均衡。")]),t._v(" "),n("p",[t._v("负载均衡的好处是可以集群多台机器一起工作，并且对外的IP 和 域名是一样的，外界看起来就好像一台机器一样。")]),t._v(" "),n("p",[t._v("nginx 也刚好提供了强大而又简单的负载均衡功能。")]),t._v(" "),n("h2",{attrs:{id:"配置负载均衡"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#配置负载均衡","aria-hidden":"true"}},[t._v("#")]),t._v(" 配置负载均衡")]),t._v(" "),n("ol",[n("li",[t._v("在不同目录下另开启两个本地server")])]),t._v(" "),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[t._v("$ http-server -p 3000\n$ http-server -p 3001\n")])])]),n("p",[t._v("在这两个server的根目录下新建 "),n("code",[t._v("index.html")]),t._v("，分别输入'hello, nginx' 与 'hello, nginx (server 2)'")]),t._v(" "),n("ol",{attrs:{start:"2"}},[n("li",[t._v("配置nginx.conf")])]),t._v(" "),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{attrs:{class:"token comment"}},[t._v("#本地http-server开启的server，命名为node-server，监听3000和3001端口")]),t._v("\nupstream servers"),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n"),n("span",{attrs:{class:"token comment"}},[t._v("# weight表示权重，数值越大，表示被分配到这个server的几率越大，这里我们让其相等。")]),t._v("\n  server 127.0.0.1:3000 weight"),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v("1"),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  server 127.0.0.1:3001 weight"),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v("1"),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{attrs:{class:"token comment"}},[t._v("# NGINX 虚拟主机，监听80端口")]),t._v("\nserver "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  listen 80"),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  server_name test.com"),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  access_log /var/log/nginx/node-server"),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),n("span",{attrs:{class:"token comment"}},[t._v("# Gzip Compression")]),t._v("\n  "),n("span",{attrs:{class:"token function"}},[t._v("gzip")]),t._v(" on"),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  gzip_comp_level 6"),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  gzip_vary on"),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  gzip_min_length  1000"),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  gzip_proxied any"),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript"),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  gzip_buffers 16 8k"),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),n("span",{attrs:{class:"token comment"}},[t._v("# 反向代理 node-server")]),t._v("\n  location / "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    proxy_set_header X-Real-IP "),n("span",{attrs:{class:"token variable"}},[t._v("$remote_addr")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    proxy_set_header X-Forwarded-For "),n("span",{attrs:{class:"token variable"}},[t._v("$proxy_add_x_forwarded_for")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    proxy_set_header Host "),n("span",{attrs:{class:"token variable"}},[t._v("$http_host")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    proxy_set_header X-NginX-Proxy "),n("span",{attrs:{class:"token boolean"}},[t._v("true")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{attrs:{class:"token comment"}},[t._v("# 代理的地址")]),t._v("\n    proxy_pass http://servers"),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    proxy_redirect off"),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("ol",{attrs:{start:"3"}},[n("li",[n("p",[t._v("重启Nginx "),n("code",[t._v("nginx -s reload")])])]),t._v(" "),n("li",[n("p",[t._v("测试")])])]),t._v(" "),n("imgLink",{attrs:{src:"date/20181116/03.png"}}),t._v(" "),n("imgLink",{attrs:{src:"date/20181116/04.png"}}),t._v(" "),n("p",[t._v("我们可以看到，对于同一个请求，nginx会按照权重随机的分配到不同的server！这样就完成了均衡负载。对于client来说，好像就只有一台server！")])],1)},[],!1,null,null,null);r.options.__file="Load_Balance.md";s.default=r.exports}}]);