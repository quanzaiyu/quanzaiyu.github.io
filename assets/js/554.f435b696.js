(window.webpackJsonp=window.webpackJsonp||[]).push([[554],{761:function(e,t,a){"use strict";a.r(t);var s=a(1),n=Object(s.a)({},function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"kubernetes-核心概念-部署-deployment"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#kubernetes-核心概念-部署-deployment","aria-hidden":"true"}},[e._v("#")]),e._v(" Kubernetes 核心概念 - 部署 (Deployment)")]),e._v(" "),a("p",[e._v("部署表示用户对Kubernetes集群的一次更新操作。部署是一个比RS应用模式更广的API对象，可以是创建一个新的服务，更新一个新的服务，也可以是滚动升级一个服务。滚动升级一个服务，实际是创建一个新的RS，然后逐渐将新RS中副本数增加到理想状态，将旧RS中的副本数减小到0的复合操作；这样一个复合操作用一个RS是不太好描述的，所以用一个更通用的Deployment来描述。以Kubernetes的发展方向，未来对所有长期伺服型的的业务的管理，都会通过Deployment来管理。")]),e._v(" "),a("p",[e._v("Deployment 为 Pod 和 RS (下一代RC) 提供了一个声明式定义(declarative)方法，用来替代以前的ReplicationController 来方便的管理应用。典型的应用场景包括：")]),e._v(" "),a("ul",[a("li",[e._v("定义Deployment来创建Pod和ReplicaSet")]),e._v(" "),a("li",[e._v("滚动升级和回滚应用")]),e._v(" "),a("li",[e._v("扩容和缩容")]),e._v(" "),a("li",[e._v("暂停和继续Deployment")])]),e._v(" "),a("p",[e._v("您只需要在 Deployment 中描述您想要的目标状态是什么，Deployment Controller 就会帮您将 Pod 和 ReplicaSet 的实际状态改变到您的目标状态。您可以定义一个全新的 Deployment 来创建 ReplicaSet 或者删除已有的 Deployment 并创建一个新的来替换。")]),e._v(" "),a("p",[e._v("::: warning 注意\n不该手动管理由 Deployment 创建的 ReplicaSet，否则您就篡越了 Deployment Controller 的职责！\n:::")]),e._v(" "),a("p",[e._v("典型的用例如下：")]),e._v(" "),a("ul",[a("li",[e._v("使用Deployment来创建ReplicaSet。ReplicaSet在后台创建pod。检查启动状态，看它是成功还是失败。")]),e._v(" "),a("li",[e._v("然后，通过更新Deployment的PodTemplateSpec字段来声明Pod的新状态。这会创建一个新的ReplicaSet，Deployment会按照控制的速率将pod从旧的ReplicaSet移动到新的ReplicaSet中。")]),e._v(" "),a("li",[e._v("如果当前状态不稳定，回滚到之前的Deployment revision。每次回滚都会更新Deployment的revision。")]),e._v(" "),a("li",[e._v("扩容Deployment以满足更高的负载。")]),e._v(" "),a("li",[e._v("暂停Deployment来应用PodTemplateSpec的多个修复，然后恢复上线。")]),e._v(" "),a("li",[e._v("根据Deployment 的状态判断上线是否hang住了。")]),e._v(" "),a("li",[e._v("清除旧的不必要的 ReplicaSet。")])]),e._v(" "),a("h2",{attrs:{id:"yaml-示例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#yaml-示例","aria-hidden":"true"}},[e._v("#")]),e._v(" yaml 示例")]),e._v(" "),a("p",[e._v("比如一个简单的nginx应用可以定义为")]),e._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("apiVersion")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" extensions/v1beta1\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("kind")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" Deployment\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("metadata")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" nginx"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("-")]),e._v("deployment\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("spec")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("replicas")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("3")]),e._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("template")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("metadata")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("labels")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("app")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" nginx\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("spec")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("containers")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("-")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" nginx\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("image")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" nginx"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("latest\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("ports")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("-")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("containerPort")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("80")]),e._v("\n")])])]),a("h2",{attrs:{id:"deployment-的常用操作"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#deployment-的常用操作","aria-hidden":"true"}},[e._v("#")]),e._v(" Deployment 的常用操作")]),e._v(" "),a("p",[e._v("扩容：")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[e._v("$ kubectl scale deployment nginx-deployment --replicas 10\n")])])]),a("p",[e._v("如果集群支持 horizontal pod autoscaling 的话，还可以为Deployment设置自动扩展：")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[e._v("$ kubectl autoscale deployment nginx-deployment --min"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("10 --max"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("15 --cpu-percent"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("80\n")])])]),a("p",[e._v("更新镜像也比较简单:")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[e._v("$ kubectl "),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("set")]),e._v(" image deployment/nginx-deployment nginx"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("nginx:1.9.1\n")])])]),a("p",[e._v("回滚：")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[e._v("$ kubectl rollout undo deployment/nginx-deployment\n")])])]),a("imgLink",{attrs:{src:"date/20190403/deployment-cheatsheet.png"}}),e._v(" "),a("h2",{attrs:{id:"创建-deployment"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#创建-deployment","aria-hidden":"true"}},[e._v("#")]),e._v(" 创建 Deployment")]),e._v(" "),a("p",[e._v("下面是一个 Deployment 示例，它创建了一个 ReplicaSet 来启动3个 nginx pod。")]),e._v(" "),a("p",[e._v("下载示例文件并执行命令：")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[e._v("$ kubectl create -f https://kubernetes.io/docs/user-guide/nginx-deployment.yaml --record\ndeployment "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"nginx-deployment"')]),e._v(" created\n")])])]),a("p",[e._v("将kubectl的 "),a("code",[e._v("--record")]),e._v(" 的 flag 设置为 "),a("code",[e._v("true")]),e._v("可以在 annotation 中记录当前命令创建或者升级了该资源。这在未来会很有用，例如，查看在每个 Deployment revision 中执行了哪些命令。")]),e._v(" "),a("p",[e._v("然后立即执行 "),a("code",[e._v("get")]),e._v(" 将获得如下结果：")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[e._v("$ kubectl get deployments\nNAME               DESIRED   CURRENT   UP-TO-DATE   AVAILABLE   AGE\nnginx-deployment   3         0         0            0           1s\n")])])]),a("p",[e._v("输出结果表明我们希望的repalica数是3（根据deployment中的"),a("code",[e._v(".spec.replicas")]),e._v("配置）当前replica数（ "),a("code",[e._v(".status.replicas")]),e._v("）是0, 最新的replica数（"),a("code",[e._v(".status.updatedReplicas")]),e._v("）是0，可用的replica数（"),a("code",[e._v(".status.availableReplicas")]),e._v("）是0。")]),e._v(" "),a("p",[e._v("过几秒后再执行 "),a("code",[e._v("get")]),e._v(" 命令，将获得如下输出：")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[e._v("$ kubectl get deployments\nNAME               DESIRED   CURRENT   UP-TO-DATE   AVAILABLE   AGE\nnginx-deployment   3         3         3            3           18s\n")])])]),a("p",[e._v("我们可以看到Deployment已经创建了3个 replica，所有的 replica 都已经是最新的了（包含最新的pod template），可用的（根据Deployment中的"),a("code",[e._v(".spec.minReadySeconds")]),e._v("声明，处于已就绪状态的pod的最少个数）。执行"),a("code",[e._v("kubectl get rs")]),e._v("和"),a("code",[e._v("kubectl get pods")]),e._v("会显示Replica Set（RS）和Pod已创建。")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[e._v("$ kubectl get rs\nNAME                          DESIRED   CURRENT   READY   AGE\nnginx-deployment-2035384211   3         3         0       18s\n")])])]),a("p",[e._v("您可能会注意到 ReplicaSet 的名字总是"),a("code",[e._v("<Deployment的名字>-<pod template的hash值>")]),e._v("。")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[e._v("$ kubectl get pods --show-labels\nNAME                                READY     STATUS    RESTARTS   AGE       LABELS\nnginx-deployment-2035384211-7ci7o   1/1       Running   0          18s       app"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("nginx,pod-template-hash"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("2035384211\nnginx-deployment-2035384211-kzszj   1/1       Running   0          18s       app"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("nginx,pod-template-hash"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("2035384211\nnginx-deployment-2035384211-qqcnn   1/1       Running   0          18s       app"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("nginx,pod-template-hash"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("2035384211\n")])])]),a("p",[e._v("刚创建的Replica Set将保证总是有3个 nginx 的 pod 存在。")]),e._v(" "),a("p",[a("strong",[e._v("注意：")]),e._v(" 您必须在 Deployment 中的 selector 指定正确的 pod template label（在该示例中是 "),a("code",[e._v("app = nginx")]),e._v("），不要跟其他的 controller 的 selector 中指定的 pod template label 搞混了（包括 Deployment、Replica Set、Replication Controller 等）。"),a("strong",[e._v("Kubernetes 本身并不会阻止您任意指定 pod template label")]),e._v(" ，但是如果您真的这么做了，这些 controller 之间会相互打架，并可能导致不正确的行为。")])],1)},[],!1,null,null,null);t.default=n.exports}}]);