(window.webpackJsonp=window.webpackJsonp||[]).push([[80],{480:function(t,s,a){"use strict";a.r(s);var n=a(0),p=Object(n.a)({},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"linux-进程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#linux-进程","aria-hidden":"true"}},[t._v("#")]),t._v(" Linux 进程")]),t._v(" "),a("p",[t._v("ps命令用于报告当前系统的进程状态。可以搭配kill指令随时中断、删除不必要的程序。ps命令是最基本同时也是非常强大的进程查看命令，使用该命令可以确定有哪些进程正在运行和运行的状态、进程是否结束、进程有没有僵死、哪些进程占用了过多的资源等等，总之大部分信息都是可以通过执行该命令得到的，格式为 "),a("code",[t._v("ps [参数]")]),t._v("。")]),t._v(" "),a("p",[t._v("ps命令的参数以及作用")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("参数")]),t._v(" "),a("th",[t._v("作用")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("-a")]),t._v(" "),a("td",[t._v("显示所有进程（包括其他用户的进程）")])]),t._v(" "),a("tr",[a("td",[t._v("-u")]),t._v(" "),a("td",[t._v("用户以及其他详细信息")])]),t._v(" "),a("tr",[a("td",[t._v("-x")]),t._v(" "),a("td",[t._v("显示没有控制终端的进程")])])])]),t._v(" "),a("p",[t._v("输出格式：")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("l")]),t._v(" ：较长、较详细的将该PID 的的信息列出；")]),t._v(" "),a("li",[a("strong",[t._v("j")]),t._v(" ：工作的格式 (jobs format)")]),t._v(" "),a("li",[a("strong",[t._v("-f")]),t._v(" ：做一个更为完整的输出。")])]),t._v(" "),a("p",[t._v("Linux系统中时刻运行着许多进程，如果能够合理地管理它们，则可以优化系统的性能。在Linux系统中，有5种常见的进程状态，分别为运行、中断、不可中断、僵死与停止，其各自含义如下所示。")]),t._v(" "),a("ul",[a("li",[t._v("R（运行）：进程正在运行或在运行队列中等待。")]),t._v(" "),a("li",[t._v("S（中断）：进程处于休眠中，当某个条件形成后或者接收到信号时，则脱离该   状态。")]),t._v(" "),a("li",[t._v("D（不可中断）：进程不响应系统异步信号，即便用kill命令也不能将其中断。")]),t._v(" "),a("li",[t._v("Z（僵死）：进程已经终止，但进程描述符依然存在, 直到父进程调用wait4()系统函数后将进程释放。")]),t._v(" "),a("li",[t._v("T（停止）：进程收到停止信号后停止运行。")])]),t._v(" "),a("h2",{attrs:{id:"查看进程信息"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#查看进程信息","aria-hidden":"true"}},[t._v("#")]),t._v(" 查看进程信息")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("admin@sshk1 ~"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ps")]),t._v(" -al\nF S   UID   PID  PPID  C PRI  NI ADDR SZ WCHAN  TTY          TIME CMD\n4 S     0 12086 11995  0  80   0 - 48077 do_wai pts/0    00:00:00 "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("su")]),t._v("\n4 S     0 12099 12086  0  80   0 - 28882 do_wai pts/0    00:00:00 "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("bash")]),t._v("\n0 S  1000 19693 19659  0  80   0 - 43992 poll_s pts/1    00:00:00 "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ssh")]),t._v("\n4 T     0 21923 12099  0  80   0 - 35493 do_sig pts/0    00:00:00 kubectl\n0 S  1000 24169 20708  0  80   0 - 43992 poll_s pts/2    00:00:00 "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ssh")]),t._v("\n4 S     0 25275 12099  0  80   0 - 35493 futex_ pts/0    00:00:00 kubectl\n0 R  1000 26137 24388  0  80   0 - 37235 -      pts/3    00:00:00 "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ps")]),t._v("\n")])])]),a("p",[t._v("各相关信息的意义为：")]),t._v(" "),a("ul",[a("li",[t._v("F 代表这个程序的旗标 (flag)， 4 代表使用者为 superuser；")]),t._v(" "),a("li",[t._v("S 代表这个程序的状态 (STAT)；")]),t._v(" "),a("li",[t._v("UID 代表执行者身份")]),t._v(" "),a("li",[t._v("PID 进程的ID号！")]),t._v(" "),a("li",[t._v("PPID 父进程的ID；")]),t._v(" "),a("li",[t._v("C CPU使用的资源百分比")]),t._v(" "),a("li",[t._v("PRI指进程的执行优先权(Priority的简写)，其值越小越早被执行；")]),t._v(" "),a("li",[t._v("NI 这个进程的nice值，其表示进程可被执行的优先级的修正数值。")]),t._v(" "),a("li",[t._v("ADDR 这个是内核函数，指出该程序在内存的那个部分。如果是个执行 的程序，一般就是『 - 』")]),t._v(" "),a("li",[t._v("SZ 使用掉的内存大小；")]),t._v(" "),a("li",[t._v("WCHAN 目前这个程序是否正在运作当中，若为 - 表示正在运作；")]),t._v(" "),a("li",[t._v("TTY 登入者的终端机位置；")]),t._v(" "),a("li",[t._v("TIME 使用掉的 CPU 时间。")]),t._v(" "),a("li",[t._v("CMD 所下达的指令名称")])]),t._v(" "),a("h2",{attrs:{id:"列出目前所有的正在内存当中的程序"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#列出目前所有的正在内存当中的程序","aria-hidden":"true"}},[t._v("#")]),t._v(" 列出目前所有的正在内存当中的程序")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("admin@sshk1 ~"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ps")]),t._v(" aux\nUSER       PID %CPU %MEM    VSZ   RSS TTY      STAT START   TIME COMMAND\nroot         1  0.0  0.0 191068  3532 ?        Ss   Nov15   1:11 /usr/lib/systemd/systemd --system --deserialize 20\nroot         2  0.0  0.0      0     0 ?        S    Nov15   0:00 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("kthreadd"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),a("p",[t._v("各相关信息的意义为：")]),t._v(" "),a("ul",[a("li",[t._v("USER：该进程属于那个使用者账号。")]),t._v(" "),a("li",[t._v("PID ：该进程的进程ID号。")]),t._v(" "),a("li",[t._v("%CPU：该进程使用掉的 CPU 资源百分比；")]),t._v(" "),a("li",[t._v("%MEM：该进程所占用的物理内存百分比；")]),t._v(" "),a("li",[t._v("VSZ ：该进程使用掉的虚拟内存量 (Kbytes)")]),t._v(" "),a("li",[t._v("RSS ：该进程占用的固定的内存量 (Kbytes)")]),t._v(" "),a("li",[t._v("TTY ：该进程是在那个终端机上面运作，若与终端机无关，则显示 ?。另外， tty1-tty6 是本机上面的登入者程序，若为 pts/0 等等的，则表示为由网络连接进主机的程序。")]),t._v(" "),a("li",[t._v("STAT：该程序目前的状态")]),t._v(" "),a("li",[t._v("START：该进程被触发启动的时间；")]),t._v(" "),a("li",[t._v("TIME ：该进程实际使用 CPU 运作的时间。")]),t._v(" "),a("li",[t._v("COMMAND：该程序的实际指令。")])]),t._v(" "),a("h2",{attrs:{id:"优化显示输出"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#优化显示输出","aria-hidden":"true"}},[t._v("#")]),t._v(" 优化显示输出")]),t._v(" "),a("p",[t._v("通常可以配合管道符或重定向到文件:")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ps")]),t._v(" -aux "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("more")]),t._v("\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ps")]),t._v(" -aux "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" psInfo.txt\n")])])]),a("p",[t._v("可以使用 "),a("code",[t._v("-o")]),t._v(" 选项输出指定字段:")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ps")]),t._v(" -o pid,ppid,pgrp,session,tpgid,comm\n")])])]),a("p",[t._v("根据某个字段排序:")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ps")]),t._v(" -aux --sort -pcpu "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("less")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 根据 CPU 使用来升序排序")]),t._v("\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ps")]),t._v(" -aux --sort -pmem "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("less")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 根据 内存使用 来升序排序")]),t._v("\n")])])]),a("p",[t._v("使用 "),a("code",[t._v("pstree")]),t._v(" 命令树形显示进程:")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("admin@sshk1 ~"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("$ pstree\nsystemd─┬─AliYunDun───19*"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("AliYunDun"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n        ├─dockerd─┬─docker-containe─┬─7*"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("docker-containe─┬─pause"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n        │         │                 │                    └─9*"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("docker-containe"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n        │         │                 ├─docker-containe─┬─pause\n        │         │                 │                 └─11*"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("docker-containe"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n        │         │                 ├─docker-containe─┬─etcd───11*"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("etcd"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n        │         │                 │                 └─10*"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("docker-containe"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n        │         │                 └─31*"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("docker-containe"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n        │         └─19*"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("dockerd"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),a("p",[t._v("查看特定用户进程:")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ps")]),t._v(" -u admin\n")])])]),a("p",[t._v("通过进程名过滤:")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ps")]),t._v(" -C "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("bash")]),t._v("\n")])])]),a("p",[t._v("显示所有进程信息:")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ps")]),t._v(" -ef\n")])])]),a("h2",{attrs:{id:"结束进程-kill"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#结束进程-kill","aria-hidden":"true"}},[t._v("#")]),t._v(" 结束进程: kill")]),t._v(" "),a("p",[t._v("kill命令用来删除执行中的程序或工作。kill可将指定的信息送至程序。预设的信息为SIGTERM(15),可将指定程序终止。若仍无法终止该程序，可使用SIGKILL(9)信息尝试强制删除程序。程序或工作的编号可利用ps指令或job指令查看。")]),t._v(" "),a("p",[t._v("通过 "),a("code",[t._v("kill -l")]),t._v(" 列出所有信号名称：")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("kill")]),t._v(" -l\n 1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" SIGHUP       2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" SIGINT       3"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" SIGQUIT      4"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" SIGILL\n 5"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" SIGTRAP      6"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" SIGABRT      7"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" SIGBUS       8"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" SIGFPE\n 9"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" SIGKILL     10"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" SIGUSR1     11"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" SIGSEGV     12"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" SIGUSR2\n13"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" SIGPIPE     14"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" SIGALRM     15"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" SIGTERM     16"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" SIGSTKFLT\n17"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" SIGCHLD     18"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" SIGCONT     19"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" SIGSTOP     20"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" SIGTSTP\n21"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" SIGTTIN     22"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" SIGTTOU     23"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" SIGURG      24"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" SIGXCPU\n25"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" SIGXFSZ     26"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" SIGVTALRM   27"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" SIGPROF     28"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" SIGWINCH\n29"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" SIGIO       30"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" SIGPWR      31"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" SIGSYS      34"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" SIGRTMIN\n35"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" SIGRTMIN+1  36"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" SIGRTMIN+2  37"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" SIGRTMIN+3  38"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" SIGRTMIN+4\n39"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" SIGRTMIN+5  40"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" SIGRTMIN+6  41"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" SIGRTMIN+7  42"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" SIGRTMIN+8\n43"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" SIGRTMIN+9  44"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" SIGRTMIN+10 45"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" SIGRTMIN+11 46"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" SIGRTMIN+12\n47"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" SIGRTMIN+13 48"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" SIGRTMIN+14 49"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" SIGRTMIN+15 50"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" SIGRTMAX-14\n51"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" SIGRTMAX-13 52"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" SIGRTMAX-12 53"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" SIGRTMAX-11 54"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" SIGRTMAX-10\n55"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" SIGRTMAX-9  56"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" SIGRTMAX-8  57"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" SIGRTMAX-7  58"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" SIGRTMAX-6\n59"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" SIGRTMAX-5  60"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" SIGRTMAX-4  61"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" SIGRTMAX-3  62"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" SIGRTMAX-2\n63"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" SIGRTMAX-1  64"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" SIGRTMAX\n")])])]),a("p",[t._v("只有第9种信号(SIGKILL)才可以无条件终止进程，其他信号进程都有权利忽略，下面是常用的信号：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("HUP     1    终端断线\nINT     2    中断（同 Ctrl + C）\nQUIT    3    退出（同 Ctrl + \\）\nTERM   15    终止\nKILL    9    强制终止\nCONT   18    继续（与STOP相反， fg/bg命令）\nSTOP   19    暂停（同 Ctrl + Z）\n")])])]),a("p",[t._v("举例: 先用ps查找进程，然后用kill杀掉：")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ps")]),t._v(" -ef "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("grep")]),t._v(" vim\nroot      3268  2884  0 16:21 pts/1    00:00:00 vim install.log\nroot      3370  2822  0 16:21 pts/0    00:00:00 "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("grep")]),t._v(" vim\n\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("kill")]),t._v(" 3268\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("kill")]),t._v(" 3268\n-bash: kill: "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("3268"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" - 没有那个进程\n")])])]),a("h2",{attrs:{id:"结束进程-killall"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#结束进程-killall","aria-hidden":"true"}},[t._v("#")]),t._v(" 结束进程: killall")]),t._v(" "),a("p",[t._v("killall命令使用进程的名称来杀死进程，使用此指令可以杀死一组同名进程。我们可以使用kill命令杀死指定进程PID的进程，如果要找到我们需要杀死的进程，我们还需要在之前使用ps等命令再配合grep来查找进程，而killall把这两个过程合二为一，是一个很好用的命令。")]),t._v(" "),a("p",[t._v("参数列表:")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("-e：对长名称进行精确匹配；\n-l：忽略大小写的不同；\n-p：杀死进程所属的进程组；\n-i：交互式杀死进程，杀死进程前需要进行确认；\n-l：打印所有已知信号列表；\n-q：如果没有进程被杀死。则不输出任何信息；\n-r：使用正规表达式匹配要杀死的进程名称；\n-s：用指定的进程号代替默认信号“SIGTERM”；\n-u：杀死指定用户的进程。\n")])])]),a("p",[t._v("杀死所有同名进程:")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("killall")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("vi")]),t._v("\n")])])]),a("h2",{attrs:{id:"结束进程-pkill"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#结束进程-pkill","aria-hidden":"true"}},[t._v("#")]),t._v(" 结束进程: pkill")]),t._v(" "),a("p",[t._v("pkill命令可以按照进程名杀死进程。pkill和killall应用方法差不多，也是直接杀死运行中的程序。")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("$ pgrep -l java\n4514 java\n4594 java\n9263 java\n19715 java\n19846 java\n19954 java\n20347 java\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("pkill")]),t._v(" java\n")])])])])},[],!1,null,null,null);p.options.__file="Process.md";s.default=p.exports}}]);