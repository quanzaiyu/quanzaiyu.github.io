(window.webpackJsonp=window.webpackJsonp||[]).push([[365],{438:function(t,n,s){"use strict";s.r(n);var a=s(0),e=Object(a.a)({},function(){var t=this,n=t.$createElement,s=t._self._c||n;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"nginx-配置文件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#nginx-配置文件","aria-hidden":"true"}},[t._v("#")]),t._v(" Nginx 配置文件")]),t._v(" "),s("p",[t._v("nginx 配置文件位于 "),s("code",[t._v("/etc/nginx/nginx.conf")])]),t._v(" "),s("h2",{attrs:{id:"基本格式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#基本格式","aria-hidden":"true"}},[t._v("#")]),t._v(" 基本格式")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("main\nevents   {\n  ....\n}\nhttp        {\n  ....\n  upstream myproject {\n    .....\n  }\n  server  {\n    ....\n    location {\n        ....\n    }\n  }\n  server  {\n    ....\n    location {\n        ....\n    }\n  }\n  ....\n}\n")])])]),s("p",[t._v("nginx配置文件主要分为六个区域：")]),t._v(" "),s("ul",[s("li",[t._v("main (全局设置)")]),t._v(" "),s("li",[t._v("events (nginx工作模式)")]),t._v(" "),s("li",[t._v("http (http设置)")]),t._v(" "),s("li",[t._v("sever (主机设置)")]),t._v(" "),s("li",[t._v("location (URL匹配)")]),t._v(" "),s("li",[t._v("upstream (负载均衡服务器设置)")])]),t._v(" "),s("h2",{attrs:{id:"main模块"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#main模块","aria-hidden":"true"}},[t._v("#")]),t._v(" main模块")]),t._v(" "),s("p",[t._v("下面时一个main区域，他是一个全局的设置：")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("user nobody nobody"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nworker_processes 2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nerror_log  /usr/local/var/log/nginx/error.log  notice"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\npid        /usr/local/var/run/nginx/nginx.pid"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nworker_rlimit_nofile 1024"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("ul",[s("li",[s("strong",[t._v("user")]),t._v(" 来指定Nginx Worker进程运行用户以及用户组，默认由nobody账号运行。")]),t._v(" "),s("li",[s("strong",[t._v("worker_processes")]),t._v(" 来指定了Nginx要开启的子进程数。每个Nginx进程平均耗费10M~12M内存。根据经验，一般指定1个进程就足够了，如果是多核CPU，建议指定和CPU的数量一样的进程数即可。我这里写2，那么就会开启2个子进程，总共3个进程。")]),t._v(" "),s("li",[s("strong",[t._v("error_log")]),t._v(" 用来定义全局错误日志文件。日志输出级别有debug、info、notice、warn、error、crit可供选择，其中，debug输出日志最为最详细，而crit输出日志最少。")]),t._v(" "),s("li",[s("strong",[t._v("pid")]),t._v(" 用来指定进程ID的存储文件位置。")]),t._v(" "),s("li",[s("strong",[t._v("worker_rlimit_nofile")]),t._v(" 用于指定一个nginx进程可以打开的最多文件描述符数目，这里是65535，需要使用命令“ulimit -n 65535”来设置。")])]),t._v(" "),s("h2",{attrs:{id:"events模块"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#events模块","aria-hidden":"true"}},[t._v("#")]),t._v(" events模块")]),t._v(" "),s("p",[t._v("events模块来用指定nginx的工作模式和工作模式及连接数上限，一般是这样：")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("events "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  use kqueue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#mac平台")]),t._v("\n  worker_connections  1024"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("ul",[s("li",[s("strong",[t._v("use")]),t._v(" 用来指定Nginx的工作模式。Nginx支持的工作模式有select、poll、kqueue、epoll、rtsig和/dev/poll。其中select和poll都是标准的工作模式，kqueue和epoll是高效的工作模式，不同的是epoll用在Linux平台上，而kqueue用在BSD系统中，因为Mac基于BSD,所以Mac也得用这个模式，对于Linux系统，epoll工作模式是首选。")]),t._v(" "),s("li",[s("strong",[t._v("worker_connections")]),t._v(" 用于定义Nginx每个进程的最大连接数，即接收前端的最大请求数，默认是1024。最大客户端连接数由worker_processes和worker_connections决定，即Max_clients=worker_processes*worker_connections，在作为反向代理时，Max_clients变为：Max_clients = worker_processes * worker_connections/4。\n进程的最大连接数受Linux系统进程的最大打开文件数限制，在执行操作系统命令“ulimit -n 65536”后worker_connections的设置才能生效。")])]),t._v(" "),s("h2",{attrs:{id:"http-模块"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#http-模块","aria-hidden":"true"}},[t._v("#")]),t._v(" http 模块")]),t._v(" "),s("p",[t._v("http模块可以说是最核心的模块了，它负责HTTP服务器相关属性的配置，它里面的server和upstream子模块，至关重要，等到反向代理和负载均衡以及虚拟目录等会仔细说。")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("http "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  include       mime.types"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  default_type  application/octet-stream"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  log_format  main  "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$remote_addr")]),t._v(" - "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$remote_user")]),t._v(" ["),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$time_local")]),t._v('] "'),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$request")]),t._v("\" '")]),t._v("\n                    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$status")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$body_bytes_sent")]),t._v(' "'),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$http_referer")]),t._v("\" '")]),t._v("\n                    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'\""),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$http_user_agent")]),t._v('" "'),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$http_x_forwarded_for")]),t._v("\"'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  access_log  /usr/local/var/log/nginx/access.log  main"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  sendfile        on"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  tcp_nopush      on"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  tcp_nodelay     on"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  keepalive_timeout  10"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#gzip  on;")]),t._v("\n  upstream myproject "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(".\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  server "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("下面详细介绍下这段代码中每个配置选项的含义。")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("include")]),t._v(" 用来设定文件的mime类型,类型在配置文件目录下的mime.type文件定义，来告诉nginx来识别文件类型。")]),t._v(" "),s("li",[s("strong",[t._v("default_type")]),t._v(" 设定了默认的类型为二进制流，也就是当文件类型未定义时使用这种方式，例如在没有配置 asp 的 locate 环境时，Nginx是不予解析的，此时，用浏览器访问asp文件就会出现下载了。")]),t._v(" "),s("li",[s("strong",[t._v("log_format")]),t._v(" 用于设置日志的格式，和记录哪些参数，这里设置为 main，刚好用于 access_log 来记录这种类型。")])]),t._v(" "),s("p",[t._v("main的类型日志如下：也可以增删部分参数。")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('127.0.0.1 - - [21/Apr/2015:18:09:54 +0800] "GET /index.php HTTP/1.1" 200 87151 "-" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_2) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/41.0.2272.76 Safari/537.36"\n')])])]),s("ul",[s("li",[s("strong",[t._v("access_log")]),t._v(" 用来纪录每次的访问日志的文件地址，后面的main是日志的格式样式，对应于log_format的main。")]),t._v(" "),s("li",[s("strong",[t._v("sendfile")]),t._v(" 参数用于开启高效文件传输模式。将tcp_nopush和tcp_nodelay两个指令设置为on用于防止网络阻塞。")]),t._v(" "),s("li",[s("strong",[t._v("keepalive_timeout")]),t._v(" 设置客户端连接保持活动的超时时间。在超过这个时间之后，服务器会关闭该连接。")])]),t._v(" "),s("p",[t._v("还有很多各种配置，以后等用到来再说。")]),t._v(" "),s("h2",{attrs:{id:"server-模块"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#server-模块","aria-hidden":"true"}},[t._v("#")]),t._v(" server 模块")]),t._v(" "),s("p",[t._v("sever 模块是http的子模块，它用来定一个虚拟主机，我们先讲最基本的配置，这些在后面再讲。")]),t._v(" "),s("p",[t._v("我们看一下一个简单的server 是如何做的？")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("server "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  listen       8080"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  server_name  localhost 192.168.12.10 www.yangyi.com"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 全局定义，如果都是这一个目录，这样定义最简单。")]),t._v("\n  root   /Users/yangyi/www"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  index  index.php index.html index.htm"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n  charset utf-8"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  access_log  usr/local/var/log/host.access.log  main"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  aerror_log  usr/local/var/log/host.error.log  error"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("ul",[s("li",[s("strong",[t._v("server")]),t._v(" 标志定义虚拟主机开始。")]),t._v(" "),s("li",[s("strong",[t._v("listen")]),t._v(" 用于指定虚拟主机的服务端口。")]),t._v(" "),s("li",[s("strong",[t._v("server_name")]),t._v(" 用来指定IP地址或者域名，多个域名之间用空格分开。")]),t._v(" "),s("li",[s("strong",[t._v("root")]),t._v(" 表示在这整个server虚拟主机内，全部的root web根目录。注意要和locate {}下面定义的区分开来。")]),t._v(" "),s("li",[s("strong",[t._v("index")]),t._v(" 全局定义访问的默认首页地址。注意要和locate {}下面定义的区分开来。")]),t._v(" "),s("li",[s("strong",[t._v("charset")]),t._v(" 用于设置网页的默认编码格式。")]),t._v(" "),s("li",[s("strong",[t._v("access_log")]),t._v(" 用来指定此虚拟主机的访问日志存放路径，最后的main用于指定访问日志的输出格式。")])]),t._v(" "),s("h2",{attrs:{id:"location-模块"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#location-模块","aria-hidden":"true"}},[t._v("#")]),t._v(" location 模块")]),t._v(" "),s("p",[t._v("location模块是nginx中用的最多的，也是最重要的模块了，什么负载均衡啊、反向代理啊、虚拟域名啊都与它相关。慢慢来讲：")]),t._v(" "),s("p",[t._v("location 根据它字面意思就知道是来定位的，定位URL，解析URL，所以，它也提供了强大的正则匹配功能，也支持条件判断匹配，用户可以通过location指令实现Nginx对动、静态网页进行过滤处理。像我们的php环境搭建就是用到了它。")]),t._v(" "),s("p",[t._v("我们先来看这个，设定默认首页和虚拟机目录。")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("location / "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  root   /Users/yangyi/www"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  index  index.php index.html index.htm"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("ul",[s("li",[s("strong",[t._v("location /")]),t._v(" 表示匹配访问根目录。")]),t._v(" "),s("li",[s("strong",[t._v("root")]),t._v(" 指令用于指定访问根目录时，虚拟主机的web目录，这个目录可以是相对路径（相对路径是相对于nginx的安装目录）。也可以是绝对路径。")]),t._v(" "),s("li",[s("strong",[t._v("index")]),t._v(" 用于设定我们只输入域名后访问的默认首页地址，有个先后顺序：index.php index.html index.htm，如果没有开启目录浏览权限，又找不到这些默认首页，就会报403错误。")]),t._v(" "),s("li",[s("strong",[t._v("location")]),t._v(" 还有一种方式就是正则匹配，开启正则匹配这样："),s("code",[t._v("location ~")]),t._v("。后面加个~。")])]),t._v(" "),s("p",[t._v("下面这个例子是运用正则匹配来链接php。我们之前搭建环境也是这样做：")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("location ~ \\.php$ "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  root           /usr/share/www"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  fastcgi_pass   127.0.0.1:9000"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  fastcgi_index  index.php"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  include        fastcgi.conf"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[s("code",[t._v("\\.php$")]),t._v(" 熟悉正则的我们直到，这是匹配.php结尾的URL，用来解析php文件。里面的root也是一样，用来表示虚拟主机的根目录。\nfast_pass链接的是php-fpm 的地址，之前我们也搭建过。其他几个参数我们以后再说。")]),t._v(" "),s("p",[t._v("location 还有其他用法，等讲到实例的时候，再看吧。")]),t._v(" "),s("h2",{attrs:{id:"upstream-模块"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#upstream-模块","aria-hidden":"true"}},[t._v("#")]),t._v(" upstream 模块")]),t._v(" "),s("p",[t._v("upstream 模块负债负载均衡模块，通过一个简单的调度算法来实现客户端IP到后端服务器的负载均衡。我们先学习怎么用，具体的使用实例以后再说。")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("upstream test.com "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  ip_hash"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  server 192.168.12.1:80"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  server 192.168.12.2:80 down"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  server 192.168.12.3:8080 max_fails"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("3  fail_timeout"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("20s"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  server 192.168.12.4:8080"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("在上面的例子中，通过upstream指令指定了一个负载均衡器的名称 test.com。这个名称可以任意指定，在后面需要的地方直接调用即可。")]),t._v(" "),s("p",[t._v("里面是ip_hash这是其中的一种负载均衡调度算法，下面会着重介绍。紧接着就是各种服务器了。用server关键字表识，后面接ip。")]),t._v(" "),s("p",[t._v("Nginx的负载均衡模块目前支持4种调度算法:")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("weight")]),t._v(" 轮询（默认）。每个请求按时间顺序逐一分配到不同的后端服务器，如果后端某台服务器宕机，故障系统被自动剔除，使用户访问不受影响。weight。指定轮询权值，weight值越大，分配到的访问机率越高，主要用于后端每个服务器性能不均的情况下。")]),t._v(" "),s("li",[s("strong",[t._v("ip_hash")]),t._v("。每个请求按访问IP的hash结果分配，这样来自同一个IP的访客固定访问一个后端服务器，有效解决了动态网页存在的session共享问题。")]),t._v(" "),s("li",[s("strong",[t._v("fair")]),t._v("。比上面两个更加智能的负载均衡算法。此种算法可以依据页面大小和加载时间长短智能地进行负载均衡，也就是根据后端服务器的响应时间来分配请求，响应时间短的优先分配。Nginx本身是不支持fair的，如果需要使用这种调度算法，必须下载Nginx的"),s("code",[t._v("upstream_fair")]),t._v("模块。")]),t._v(" "),s("li",[s("strong",[t._v("url_hash")]),t._v("。按访问url的hash结果来分配请求，使每个url定向到同一个后端服务器，可以进一步提高后端缓存服务器的效率。Nginx本身是不支持url_hash的，如果需要使用这种调度算法，必须安装Nginx 的"),s("code",[t._v("hash")]),t._v("软件包。")])]),t._v(" "),s("p",[t._v("在"),s("code",[t._v("HTTP Upstream")]),t._v("模块中，可以通过server指令指定后端服务器的IP地址和端口，同时还可以设定每个后端服务器在负载均衡调度中的状态。常用的状态有：")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("down")]),t._v(" 表示当前的server暂时不参与负载均衡。")]),t._v(" "),s("li",[s("strong",[t._v("backup")]),t._v(" 预留的备份机器。当其他所有的非backup机器出现故障或者忙的时候，才会请求backup机器，因此这台机器的压力最轻。")]),t._v(" "),s("li",[s("strong",[t._v("max_fails")]),t._v(" 允许请求失败的次数，默认为1。当超过最大次数时，返回proxy_next_upstream 模块定义的错误。")]),t._v(" "),s("li",[s("strong",[t._v("fail_timeout")]),t._v(" 在经历了max_fails次失败后，暂停服务的时间。max_fails可以和fail_timeout一起使用。")])]),t._v(" "),s("p",[t._v("注意 当负载调度算法为ip_hash时，后端服务器在负载均衡调度中的状态不能是weight和backup。")]),t._v(" "),s("h2",{attrs:{id:"文件示例"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#文件示例","aria-hidden":"true"}},[t._v("#")]),t._v(" 文件示例")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# For more information on configuration, see:")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   * Official English Documentation: http://nginx.org/en/docs/")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   * Official Russian Documentation: http://nginx.org/ru/docs/")]),t._v("\n\nuser nginx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nworker_processes auto"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nerror_log /var/log/nginx/error.log"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\npid /run/nginx.pid"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Load dynamic modules. See /usr/share/nginx/README.dynamic.")]),t._v("\ninclude /usr/share/nginx/modules/*.conf"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nevents "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    worker_connections 1024"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\nhttp "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    log_format  main  "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$remote_addr")]),t._v(" - "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$remote_user")]),t._v(" ["),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$time_local")]),t._v('] "'),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$request")]),t._v("\" '")]),t._v("\n                      "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$status")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$body_bytes_sent")]),t._v(' "'),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$http_referer")]),t._v("\" '")]),t._v("\n                      "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'\""),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$http_user_agent")]),t._v('" "'),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$http_x_forwarded_for")]),t._v("\"'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    access_log  /var/log/nginx/access.log  main"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    sendfile            on"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    tcp_nopush          on"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    tcp_nodelay         on"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    keepalive_timeout   65"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    types_hash_max_size 2048"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    include             /etc/nginx/mime.types"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    default_type        application/octet-stream"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Load modular configuration files from the /etc/nginx/conf.d directory.")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# See http://nginx.org/en/docs/ngx_core_module.html#include")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# for more information.")]),t._v("\n    include /etc/nginx/conf.d/*.conf"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    server "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#       listen       80 default_server;")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#       listen       [::]:80 default_server;")]),t._v("\n\n        listen 80"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        listen "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("::"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(":80 ipv6only"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("on default_server"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        server_name  _"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        root         /usr/share/nginx/html"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 站点根目录")]),t._v("\n\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Load configuration files for the default server block.")]),t._v("\n        include /etc/nginx/default.d/*.conf"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        location / "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 解析 PHP 文件")]),t._v("\n        location ~ \\.php$ "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n          root           /usr/share/nginx/html"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#修改为nginx默认路径")]),t._v("\n          fastcgi_pass   127.0.0.1:9000"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n          fastcgi_index  index.php"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n          fastcgi_param  SCRIPT_FILENAME  /usr/share/nginx/html"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$fastcgi_script_name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n          include        fastcgi_params"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 4xx")]),t._v("\n        error_page 404 /404.html"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            location "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" /40x.html "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 5xx")]),t._v("\n        error_page 500 502 503 504 /50x.html"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            location "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" /50x.html "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Settings for a TLS enabled server.")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#    server {")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#        listen       443 ssl http2 default_server;")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#        listen       [::]:443 ssl http2 default_server;")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#        server_name  _;")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#        root         /usr/share/nginx/html;")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('#        ssl_certificate "/etc/pki/nginx/server.crt";')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('#        ssl_certificate_key "/etc/pki/nginx/private/server.key";')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#        ssl_session_cache shared:SSL:1m;")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#        ssl_session_timeout  10m;")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#        ssl_ciphers HIGH:!aNULL:!MD5;")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#        ssl_prefer_server_ciphers on;")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#        # Load configuration files for the default server block.")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#        include /etc/nginx/default.d/*.conf;")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#        location / {")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#        }")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#        error_page 404 /404.html;")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#            location = /40x.html {")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#        }")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#        error_page 500 502 503 504 /50x.html;")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#            location = /50x.html {")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#        }")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#    }")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])])},[],!1,null,null,null);n.default=e.exports}}]);