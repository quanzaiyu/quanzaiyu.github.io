(window.webpackJsonp=window.webpackJsonp||[]).push([[552],{762:function(t,e,a){"use strict";a.r(e);var s=a(1),n=Object(s.a)({},function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"kubernetes-核心概念-守护进程集-daemonset"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#kubernetes-核心概念-守护进程集-daemonset","aria-hidden":"true"}},[t._v("#")]),t._v(" Kubernetes 核心概念 - 守护进程集 (DaemonSet)")]),t._v(" "),a("p",[a("em",[t._v("DaemonSet")]),t._v(" 确保全部（或者一些）Node 上运行一个 Pod 的副本。当有 Node 加入集群时，也会为他们新增一个 Pod 。当有 Node 从集群移除时，这些 Pod 也会被回收。删除 DaemonSet 将会删除它创建的所有 Pod。")]),t._v(" "),a("p",[t._v("使用 DaemonSet 一些典型使用场景:")]),t._v(" "),a("ul",[a("li",[t._v("运行集群存储 daemon，例如在每个 Node 上运行 "),a("code",[t._v("glusterd")]),t._v("、"),a("code",[t._v("ceph")]),t._v("。")]),t._v(" "),a("li",[t._v("在每个 Node 上运行日志收集 daemon，例如"),a("code",[t._v("fluentd")]),t._v("、"),a("code",[t._v("logstash")]),t._v("。")]),t._v(" "),a("li",[t._v("在每个 Node 上运行监控 daemon，例如 "),a("a",{attrs:{href:"https://github.com/prometheus/node_exporter",target:"_blank",rel:"noopener noreferrer"}},[t._v("Prometheus Node Exporter"),a("OutboundLink")],1),t._v("、"),a("code",[t._v("collectd")]),t._v("、Datadog 代理、New Relic 代理，或 Ganglia "),a("code",[t._v("gmond")]),t._v("。")])]),t._v(" "),a("p",[t._v("一个简单的用法是，在所有的 Node 上都存在一个 DaemonSet，将被作为每种类型的 daemon 使用。 一个稍微复杂的用法可能是，对单独的每种类型的 daemon 使用多个 DaemonSet，但具有不同的标志，和/或对不同硬件类型具有不同的内存、CPU要求。")]),t._v(" "),a("h2",{attrs:{id:"yaml-示例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#yaml-示例","aria-hidden":"true"}},[t._v("#")]),t._v(" yaml 示例")]),t._v(" "),a("p",[t._v("下面的描述文件创建了一个运行着fluentd-elasticsearch镜像的DaemonSet对象：")]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" apps/v1\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" DaemonSet\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" fluentd"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("elasticsearch\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("namespace")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" kube"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("system\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("labels")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("k8s-app")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" fluentd"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("logging\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("selector")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("matchLabels")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 与spec.template.metadata.labels一致")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" fluentd"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("elasticsearch\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("template")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# pod模板")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("labels")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" fluentd"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("elasticsearch\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("tolerations")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("key")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" node"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("role.kubernetes.io/master\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("effect")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" NoSchedule\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containers")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 容器模板")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" fluentd"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("elasticsearch\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" k8s.gcr.io/fluentd"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("elasticsearch"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.20")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("resources")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("limits")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("memory")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 200Mi\n          "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("requests")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("cpu")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 100m\n            "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("memory")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 200Mi\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("volumeMounts")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" varlog\n          "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("mountPath")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" /var/log\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" varlibdockercontainers\n          "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("mountPath")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" /var/lib/docker/containers\n          "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("readOnly")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("true")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("terminationGracePeriodSeconds")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("30")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("volumes")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 对外暴露的卷")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" varlog\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("hostPath")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("path")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" /var/log\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" varlibdockercontainers\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("hostPath")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("path")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" /var/lib/docker/containers\n")])])]),a("p",[t._v("在Kubernetes 1.8之后，必须指定.spec.selector来确定这个DaemonSet对象管理的Pod，通常与.spec.template.metadata.labels中定义的Pod的label一致。")]),t._v(" "),a("h2",{attrs:{id:"pod-模板"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#pod-模板","aria-hidden":"true"}},[t._v("#")]),t._v(" Pod 模板")]),t._v(" "),a("p",[a("code",[t._v(".spec")]),t._v(" 唯一必需的字段是 "),a("code",[t._v(".spec.template")]),t._v("。")]),t._v(" "),a("p",[a("code",[t._v(".spec.template")]),t._v(" 是一个 "),a("a",{attrs:{href:"https://kubernetes.io/docs/user-guide/replication-controller/#pod-template",target:"_blank",rel:"noopener noreferrer"}},[t._v("Pod 模板"),a("OutboundLink")],1),t._v("。 它与 "),a("a",{attrs:{href:"https://kubernetes.io/docs/user-guide/pods",target:"_blank",rel:"noopener noreferrer"}},[t._v("Pod"),a("OutboundLink")],1),t._v(" 具有相同的 schema，除了它是嵌套的，而且不具有 "),a("code",[t._v("apiVersion")]),t._v(" 或 "),a("code",[t._v("kind")]),t._v(" 字段。")]),t._v(" "),a("p",[t._v("Pod 除了必须字段外，在 DaemonSet 中的 Pod 模板必须指定合理的标签（查看 "),a("a",{attrs:{href:"https://jimmysong.io/kubernetes-handbook/concepts/daemonset.html#pod-selector",target:"_blank",rel:"noopener noreferrer"}},[t._v("pod selector"),a("OutboundLink")],1),t._v("）。")]),t._v(" "),a("p",[t._v("在 DaemonSet 中的 Pod 模板必需具有一个值为 "),a("code",[t._v("Always")]),t._v(" 的 "),a("a",{attrs:{href:"https://kubernetes.io/docs/user-guide/pod-states",target:"_blank",rel:"noopener noreferrer"}},[a("code",[t._v("RestartPolicy")]),a("OutboundLink")],1),t._v("，或者未指定它的值，默认是 "),a("code",[t._v("Always")]),t._v("。")]),t._v(" "),a("h2",{attrs:{id:"daemon-pods-的调度特性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#daemon-pods-的调度特性","aria-hidden":"true"}},[t._v("#")]),t._v(" Daemon Pods 的调度特性")]),t._v(" "),a("p",[t._v("默认情况下，Pod被分配到具体哪一台Node上运行是由Scheduler（负责分配调度Pod到集群内的Node上，它通过监听ApiServer，查询还未分配Node的Pod，然后根据调度策略为这些Pod分配Node）决定的。但是，DaemonSet对象创建的Pod却拥有一些特殊的特性：")]),t._v(" "),a("ul",[a("li",[t._v("Node的 "),a("a",{attrs:{href:"https://kubernetes.io/docs/admin/node/#manual-node-administration",target:"_blank",rel:"noopener noreferrer"}},[a("code",[t._v("unschedulable")]),a("OutboundLink")],1),t._v("属性会被DaemonSet Controller忽略。")]),t._v(" "),a("li",[t._v("即使Scheduler还未启动，DaemonSet Controller也能够创建并运行Pod。")])]),t._v(" "),a("h2",{attrs:{id:"参考资料"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参考资料","aria-hidden":"true"}},[t._v("#")]),t._v(" 参考资料")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/",target:"_blank",rel:"noopener noreferrer"}},[t._v("DaemonSet - Kubernetes"),a("OutboundLink")],1)])])])},[],!1,null,null,null);e.default=n.exports}}]);