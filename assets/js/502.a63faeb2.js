(window.webpackJsonp=window.webpackJsonp||[]).push([[502],{708:function(t,a,e){"use strict";e.r(a);var s=e(1),n=Object(s.a)({},function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"react-native-运行环境搭建"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#react-native-运行环境搭建","aria-hidden":"true"}},[t._v("#")]),t._v(" "),e("imgLink",{attrs:{src:"logo/react.svg",width:"50px"}}),t._v(" react-native 运行环境搭建")],1),t._v(" "),e("h2",{attrs:{id:"react-native-简介"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#react-native-简介","aria-hidden":"true"}},[t._v("#")]),t._v(" React Native 简介")]),t._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"https://reactnative.cn",target:"_blank",rel:"noopener noreferrer"}},[t._v("React Native 中文网"),e("OutboundLink")],1)]),t._v(" "),e("li",[e("a",{attrs:{href:"https://facebook.github.io/react-native/",target:"_blank",rel:"noopener noreferrer"}},[t._v("React Native 官网"),e("OutboundLink")],1)]),t._v(" "),e("li",[e("a",{attrs:{href:"https://github.com/facebook/react-native",target:"_blank",rel:"noopener noreferrer"}},[t._v("React Native GitHub"),e("OutboundLink")],1)])]),t._v(" "),e("p",[t._v("官宣: 使用JavaScript和React编写原生移动应用")]),t._v(" "),e("h2",{attrs:{id:"环境搭建"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#环境搭建","aria-hidden":"true"}},[t._v("#")]),t._v(" 环境搭建")]),t._v(" "),e("p",[t._v("安装脚手架")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("$ "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("yarn")]),t._v(" global "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" react-native-cli\n")])])]),e("p",[t._v("创建项目")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("$ react-native init <ProjectName>\n")])])]),e("h3",{attrs:{id:"运行到-android"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#运行到-android","aria-hidden":"true"}},[t._v("#")]),t._v(" 运行到 Android")]),t._v(" "),e("p",[t._v("在 Windows 下, 首先需要配置环境变量 "),e("code",[t._v("ANDROID_HOME")]),t._v(", 配置 Android SDK 路径, 比如 "),e("code",[t._v("C:\\Users\\quanz\\AppData\\Local\\Android\\Sdk")]),t._v(" (可在 Android Studio 的配置里面看到 File > Settings > Appearance & Behavior > System Settings > Android SDK)")]),t._v(" "),e("imgLink",{attrs:{src:"date/20190212/003.png"}}),t._v(" "),e("p",[t._v("终端输入 "),e("code",[t._v("react-native run-android")]),t._v(" 运行到真机或模拟器")]),t._v(" "),e("imgLink",{attrs:{src:"date/20190212/004.png"}}),t._v(" "),e("imgLink",{attrs:{src:"date/20190212/002.png"}}),t._v(" "),e("p",[t._v("可以看到成功运行到模拟器:")]),t._v(" "),e("imgLink",{attrs:{src:"date/20190212/005.png"}}),t._v(" "),e("p",[t._v("在 Development 模式下, js 部分有 Errors 或 Warning, 会直接打印在手机或模拟器屏幕上, 以红屏或黄屏展示。")]),t._v(" "),e("h3",{attrs:{id:"运行到-ios"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#运行到-ios","aria-hidden":"true"}},[t._v("#")]),t._v(" 运行到 iOS")]),t._v(" "),e("p",[t._v("在 MacOS 下, 安装 XCode, 终端输入 "),e("code",[t._v("react-native run-ios")]),t._v(" 即可")]),t._v(" "),e("h2",{attrs:{id:"调试"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#调试","aria-hidden":"true"}},[t._v("#")]),t._v(" 调试")]),t._v(" "),e("h3",{attrs:{id:"热加载"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#热加载","aria-hidden":"true"}},[t._v("#")]),t._v(" 热加载")]),t._v(" "),e("p",[t._v("要开启热加载, 在模拟器中按 "),e("code",[t._v("Ctrl + M")]),t._v(" 进行设置, 在真机上通过摇一摇的方式打开开发者菜单:")]),t._v(" "),e("imgLink",{attrs:{src:"date/20190212/001.png"}}),t._v(" "),e("p",[t._v("如果需要手动刷新, 直接在模拟器中按 "),e("code",[t._v("RR")]),t._v(" 即可")]),t._v(" "),e("ul",[e("li",[t._v("Enable Live Reload 有变更重新加载整个项目, 页面回到初始页")]),t._v(" "),e("li",[t._v("Enable Hot Reloading 有变更重新加载到当前页面")])]),t._v(" "),e("h3",{attrs:{id:"chrome-debug"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#chrome-debug","aria-hidden":"true"}},[t._v("#")]),t._v(" Chrome Debug")]),t._v(" "),e("p",[t._v("在开发者菜单中选择 "),e("code",[t._v("Debug JS Remotely")]),t._v(", 可以在 Chrome 中进行调试, 可以看到 Chrome 浏览器打开了调试地址 "),e("code",[t._v("http://localhost:8081/debugger-ui/")])]),t._v(" "),e("imgLink",{attrs:{src:"date/20190217/005.png"}}),t._v(" "),e("h3",{attrs:{id:"react-native-debugger"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#react-native-debugger","aria-hidden":"true"}},[t._v("#")]),t._v(" react-native-debugger")]),t._v(" "),e("p",[t._v("使用 "),e("a",{attrs:{href:"https://github.com/jhen0409/react-native-debugger",target:"_blank",rel:"noopener noreferrer"}},[t._v("react-native-debugger"),e("OutboundLink")],1),t._v(" 可以更好地调试 React Native 应用:")]),t._v(" "),e("imgLink",{attrs:{src:"date/20190222/003.png"}}),t._v(" "),e("p",[t._v("在模拟器开发者菜单中使用 "),e("code",[t._v("Toggle Inspector")]),t._v(" 可以监控页面里面的组件, 跟 Chrome 中 Elements 选项一样。")]),t._v(" "),e("imgLink",{attrs:{src:"date/20190222/004.png"}}),t._v(" "),e("h3",{attrs:{id:"访问控制台日志"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#访问控制台日志","aria-hidden":"true"}},[t._v("#")]),t._v(" 访问控制台日志")]),t._v(" "),e("p",[t._v("使用以下命令可以访问控制台命令:")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("$ react-native log-ios\n$ react-native log-android\n")])])]),e("p",[t._v("参考: "),e("a",{attrs:{href:"https://reactnative.cn/docs/debugging/",target:"_blank",rel:"noopener noreferrer"}},[t._v("调试"),e("OutboundLink")],1)]),t._v(" "),e("h3",{attrs:{id:"控制台打印"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#控制台打印","aria-hidden":"true"}},[t._v("#")]),t._v(" 控制台打印")]),t._v(" "),e("p",[t._v("跟 web 一样, 可以使用 console 在控制台进行输出:")]),t._v(" "),e("ul",[e("li",[t._v("console.log()")]),t._v(" "),e("li",[t._v("console.warn()")]),t._v(" "),e("li",[t._v("console.error()")])]),t._v(" "),e("h2",{attrs:{id:"全局方法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#全局方法","aria-hidden":"true"}},[t._v("#")]),t._v(" 全局方法")]),t._v(" "),e("h3",{attrs:{id:"弹出对话框"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#弹出对话框","aria-hidden":"true"}},[t._v("#")]),t._v(" 弹出对话框")]),t._v(" "),e("p",[t._v("使用 "),e("code",[t._v("alert()")]),t._v(" 可直接弹出一个对话框")]),t._v(" "),e("h3",{attrs:{id:"定时器"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#定时器","aria-hidden":"true"}},[t._v("#")]),t._v(" "),e("a",{attrs:{href:"https://reactnative.cn/docs/timers/",target:"_blank",rel:"noopener noreferrer"}},[t._v("定时器"),e("OutboundLink")],1)]),t._v(" "),e("ul",[e("li",[t._v("setTimeout, clearTimeout")]),t._v(" "),e("li",[t._v("setInterval, clearInterval")]),t._v(" "),e("li",[t._v("setImmediate, clearImmediate")]),t._v(" "),e("li",[t._v("requestAnimationFrame, cancelAnimationFrame")])]),t._v(" "),e("p",[t._v("用法跟web一致, 不过需要注意的是, "),e("strong",[t._v("在卸载组件前一定要清除定时器, 否则可能发生致命错误（闪退）")]),t._v(":")]),t._v(" "),e("div",{staticClass:"language-jsx extra-class"},[e("pre",{pre:!0,attrs:{class:"language-jsx"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" React"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" Component "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"react"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Hello")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Component")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("componentDidMount")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("timer "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("setTimeout")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      console"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"把一个定时器的引用挂在this上"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("500")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("componentWillUnmount")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 如果存在this.timer，则使用clearTimeout清空。")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 如果你使用多个timer，那么用多个变量，或者用个数组来保存引用，然后逐个clear")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("timer "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("clearTimeout")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("timer"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("h3",{attrs:{id:"interactionmanager"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#interactionmanager","aria-hidden":"true"}},[t._v("#")]),t._v(" InteractionManager")]),t._v(" "),e("p",[t._v("原生应用感觉如此流畅的一个重要原因就是在互动和动画的过程中避免繁重的操作。在 React Native 里，我们目前受到限制，因为我们只有一个 JavaScript 执行线程。不过你可以用"),e("code",[t._v("InteractionManager")]),t._v("来确保在执行繁重工作之前所有的交互和动画都已经处理完毕。")]),t._v(" "),e("p",[t._v("应用可以通过以下代码来安排一个任务，使其在交互结束之后执行：")]),t._v(" "),e("div",{staticClass:"language-javascript extra-class"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[t._v("InteractionManager"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("runAfterInteractions")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...需要长时间同步执行的任务...")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),e("p",[t._v("我们来把它和之前的几个任务安排方法对比一下：")]),t._v(" "),e("ul",[e("li",[t._v("requestAnimationFrame(): 用来执行在一段时间内控制视图动画的代码")]),t._v(" "),e("li",[t._v("setImmediate/setTimeout/setInterval(): 在稍后执行代码。注意这有可能会延迟当前正在进行的动画。")]),t._v(" "),e("li",[t._v("runAfterInteractions(): 在稍后执行代码，不会延迟当前进行的动画。")])]),t._v(" "),e("p",[t._v("触摸处理系统会把一个或多个进行中的触摸操作认定为'交互'，并且会将"),e("code",[t._v("runAfterInteractions()")]),t._v("的回调函数延迟执行，直到所有的触摸操作都结束或取消了。")]),t._v(" "),e("p",[t._v("InteractionManager 还允许应用注册动画，在动画开始时创建一个交互“句柄”，然后在结束的时候清除它。")]),t._v(" "),e("div",{staticClass:"language-javascript extra-class"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" handle "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" InteractionManager"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("createInteractionHandle")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 执行动画... (`runAfterInteractions`中的任务现在开始排队等候)")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 在动画完成之后")]),t._v("\nInteractionManager"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("clearInteractionHandle")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("handle"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 在所有句柄都清除之后，现在开始依序执行队列中的任务")]),t._v("\n")])])]),e("h3",{attrs:{id:"其他"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#其他","aria-hidden":"true"}},[t._v("#")]),t._v(" 其他")]),t._v(" "),e("p",[t._v("更多兼容性方法详见: "),e("a",{attrs:{href:"https://reactnative.cn/docs/javascript-environment/#%E6%8E%A5%E5%8F%A3%E5%85%BC%E5%AE%B9-polyfills",target:"_blank",rel:"noopener noreferrer"}},[t._v("接口兼容（Polyfills）"),e("OutboundLink")],1)])],1)},[],!1,null,null,null);a.default=n.exports}}]);