(window.webpackJsonp=window.webpackJsonp||[]).push([[544],{960:function(t,a,e){"use strict";e.r(a);var s=e(1),n=Object(s.a)({},function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"kubernetes-核心概念-pod的调度-rc、rs、deploy、ds-等"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#kubernetes-核心概念-pod的调度-rc、rs、deploy、ds-等","aria-hidden":"true"}},[t._v("#")]),t._v(" Kubernetes 核心概念 - Pod的调度 (RC、RS、Deploy、DS 等)")]),t._v(" "),e("p",[t._v("在大部分情况下, Pod只是容器的载体, 虽然可以直接手动管理, 但是这样维护起来特别麻烦, 我们希望在Pod发生问题时自动恢复, 而不是手动管理, 因此有了以下几种管理Pod的方式:")]),t._v(" "),e("h2",{attrs:{id:"副本控制器-replication-controller-rc"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#副本控制器-replication-controller-rc","aria-hidden":"true"}},[t._v("#")]),t._v(" 副本控制器 Replication Controller (RC)")]),t._v(" "),e("p",[t._v("RC保证在同一时间能够运行指定数量的Pod副本，保证Pod总是可用。如果实际Pod数量比指定的多就结束掉多余的，如果实际数量比指定的少就启动缺少的。当Pod失败、被删除或被终结时RC会自动创建新的Pod来保证副本数量。所以即使只有一个Pod也应该使用RC来进行管理。")]),t._v(" "),e("p",[e("strong",[t._v("确保pod数量")])]),t._v(" "),e("p",[t._v("RC用来管理正常运行Pod数量，一个RC可以由一个或多个Pod组成，在RC被创建后，系统会根据定义好的副本数来创建Pod数量。在运行过程中，如果Pod数量小于定义的，就会重启停止的或重新分配Pod，反之则杀死多余的。")]),t._v(" "),e("p",[e("strong",[t._v("确保pod健康")])]),t._v(" "),e("p",[t._v("当pod不健康，运行出错或者无法提供服务时，RC也会杀死不健康的pod，重新创建新的。")]),t._v(" "),e("h3",{attrs:{id:"弹性伸缩"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#弹性伸缩","aria-hidden":"true"}},[t._v("#")]),t._v(" 弹性伸缩")]),t._v(" "),e("p",[t._v("在业务高峰或者低峰期的时候，可以通过RC动态的调整pod的数量来提高资源的利用率。同时，配置相应的监控功能（Hroizontal Pod Autoscaler），会定时自动从监控平台获取RC关联pod的整体资源使用情况，做到自动伸缩。")]),t._v(" "),e("p",[t._v("弹性伸缩是指适应负载变化，以弹性可伸缩的方式提供资源。反映到K8S中，指的是可根据负载的高低动态调整Pod的副本数量。调整Pod的副本数是通过修改RC中Pod的副本是来实现的，示例命令如下：")]),t._v(" "),e("p",[t._v("扩容Pod的副本数目到10")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("$ kubectl scale relicationcontroller lykops --replicas"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("10\n")])])]),e("p",[t._v("缩容Pod的副本数目到1")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("$ kubectl scale rc lykops --replicas"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("1\n")])])]),e("h3",{attrs:{id:"滚动升级"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#滚动升级","aria-hidden":"true"}},[t._v("#")]),t._v(" 滚动升级")]),t._v(" "),e("p",[t._v("滚动升级是一种平滑过渡的升级方式，通过逐步替换的策略，保证整体系统的稳定，在初始升级的时候就可以及时发现、调整问题，以保证问题影响度不会扩大。")]),t._v(" "),e("h4",{attrs:{id:"升级方式"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#升级方式","aria-hidden":"true"}},[t._v("#")]),t._v(" 升级方式")]),t._v(" "),e("p",[e("strong",[t._v("使用配置文件升级")])]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("$ kubecl rolling-update lykops-rc-v1 -f lykops-rc.yaml --update-period"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("10s\n")])])]),e("p",[e("strong",[t._v("直接使用images")])]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("$ kubectl rolling-update lykops-rc --image"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("webapache:v3\n")])])]),e("h4",{attrs:{id:"升级过程"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#升级过程","aria-hidden":"true"}},[t._v("#")]),t._v(" 升级过程")]),t._v(" "),e("p",[t._v("升级开始后，首先依据提供的定义文件创建v2版本的RC，然后每隔10s（--update-period=10s）逐步的增加v2版本的Pod副本数，逐步减少v1版本Pod的副本数。升级完成之后，删除v1版本的RC，保留v2版本的RC，及实现滚动升级。")]),t._v(" "),e("h4",{attrs:{id:"升级回滚"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#升级回滚","aria-hidden":"true"}},[t._v("#")]),t._v(" 升级回滚")]),t._v(" "),e("p",[t._v("升级过程中，发生了错误中途退出时，可以选择继续升级。K8S能够智能的判断升级中断之前的状态，然后紧接着继续执行升级。当然，也可以进行回退，命令如下：")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("$ kubectl rolling-update lykops-v1 -f lykops-v2-rc.yaml --update-period"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("10s -–rollback\n")])])]),e("h3",{attrs:{id:"yaml示例"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#yaml示例","aria-hidden":"true"}},[t._v("#")]),t._v(" yaml示例")]),t._v(" "),e("p",[t._v("升级之前的yaml文件为")]),t._v(" "),e("div",{staticClass:"language-yaml extra-class"},[e("pre",{pre:!0,attrs:{class:"language-yaml"}},[e("code",[e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" v1\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" ReplicationController\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" lykops"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("rc\n "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("labels")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n   "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("app")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" apache\n   "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("version")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" v1\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("replicas")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("5 ")]),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 副本数量")]),t._v("\n "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("selector")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 筛选要控制的Pod")]),t._v("\n   "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("app")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" apache\n   "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("version")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" v1\n "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("template")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Pod的定义")]),t._v("\n   "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n     "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("labels")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Pod的label, spec.selector相同")]),t._v("\n       "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("app")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" apache\n       "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("version")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" v1\n   "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n     "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containers")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n     "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" apache"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("rc\n       "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" web"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("apache\n       "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("command")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"sh"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/etc/run.sh"')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n       "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ports")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n       "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containerPort")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),t._v("\n         "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" http\n         "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("protocol")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" TCP\n")])])]),e("p",[t._v("升级用的yaml文件内容为")]),t._v(" "),e("div",{staticClass:"language-yaml extra-class"},[e("pre",{pre:!0,attrs:{class:"language-yaml"}},[e("code",[e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" v1\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" ReplicationController\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" test"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("rc"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("v2 "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 名字修改了")]),t._v("\n "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("labels")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 与之前的labels一致")]),t._v("\n   "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("app")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" apache\n   "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("version")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" v1\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("replicas")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v("\n "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("selector")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 与下面的template.metadata.labels一致")]),t._v("\n   "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("app")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" apache\n   "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("version")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" v2\n "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("template")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n   "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n     "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("labels")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 至少修改了一项内容, 此处为version")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("app")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" apache\n      "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("version")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" v2\n   "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n     "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containers")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n     "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" apache"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("rc"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("v2\n       "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" web"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("apache\n       "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("command")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"sh"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/etc/run.sh"')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n       "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ports")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n       "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containerPort")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),t._v("\n         "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" http\n         "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("protocol")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" TCP\n")])])]),e("p",[e("strong",[t._v("注意事项")])]),t._v(" "),e("ul",[e("li",[t._v("要求新的RC需要使用旧的RC的Namespace。")]),t._v(" "),e("li",[t._v("RC的名字（name）不能与旧的RC的名字相同；")]),t._v(" "),e("li",[t._v("在selector中应至少有一个Label与旧的RC的Label不同，以标识其为新的RC。")]),t._v(" "),e("li",[t._v("metadata与之前相同，否则升级后service无法对应上。")])]),t._v(" "),e("h2",{attrs:{id:"副本集-replica-set-rs"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#副本集-replica-set-rs","aria-hidden":"true"}},[t._v("#")]),t._v(" 副本集 Replica Set (RS)")]),t._v(" "),e("p",[t._v('被认为 是 "升级版" 的RC。')]),t._v(" "),e("p",[t._v("RS也是用于保证与label selector匹配的pod数量维持在期望状态。副本集对象一般不单独使用，而是作为Deployment的理想状态参数使用。")]),t._v(" "),e("p",[t._v("在新版本的Kubernetes中建议使用ReplicaSet来取代ReplicationController。ReplicaSet跟ReplicationController没有本质的不同，只是名字不一样，并且ReplicaSet支持集合式的selector。")]),t._v(" "),e("p",[t._v("虽然ReplicaSet可以独立使用，但一般还是建议使用 Deployment 来自动管理ReplicaSet，这样就无需担心跟其他机制的不兼容问题（比如ReplicaSet不支持rolling-update但Deployment支持）。")]),t._v(" "),e("h3",{attrs:{id:"与rc的区别"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#与rc的区别","aria-hidden":"true"}},[t._v("#")]),t._v(" 与RC的区别")]),t._v(" "),e("p",[t._v("RC只支持基于等式的selector（env=dev或environment!=qa），但RS还支持新的，基于集合的selector（version in (v1.0, v2.0)或env notin (dev, qa)），这对复杂的运维管理很方便。")]),t._v(" "),e("p",[t._v("升级方式")]),t._v(" "),e("ul",[e("li",[t._v("RS不能使用kubectlrolling-update进行升级")]),t._v(" "),e("li",[t._v("kubectl rolling-update专用于rc")]),t._v(" "),e("li",[t._v("RS升级使用deployment或者kubectl replace命令")])]),t._v(" "),e("p",[t._v("社区引入这一API的初衷是用于取代vl中的RC，也就是说当v1版本被废弃时，RC就完成了它的历史使命，而由RS来接管其工作。")]),t._v(" "),e("h3",{attrs:{id:"yaml示例-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#yaml示例-2","aria-hidden":"true"}},[t._v("#")]),t._v(" yaml示例")]),t._v(" "),e("div",{staticClass:"language-yaml extra-class"},[e("pre",{pre:!0,attrs:{class:"language-yaml"}},[e("code",[e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" extensions/v1beta1\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" ReplicaSet\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" lykops"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("rs\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("labels")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("software")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" apache\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("project")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" lykops\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("app")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" lykops"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("rs\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("version")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" v1\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("replicas")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("selector")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("matchLabels")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" lykops"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("rs\n      "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("software")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" apache\n      "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("project")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" lykops\n      "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("app")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" lykops"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("rs\n      "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("version")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" v1\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("template")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("labels")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" lykops"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("rs\n        "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("software")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" apache\n        "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("project")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" lykops\n        "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("app")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" lykops"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("rs\n        "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("version")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" v1\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containers")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" lykops"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("rs\n        "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" web"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("apache\n        "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("command")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"sh"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/etc/run.sh"')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ports")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containerPort")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),t._v("\n          "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" http\n")])])]),e("h2",{attrs:{id:"部署-deployment-deploy"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#部署-deployment-deploy","aria-hidden":"true"}},[t._v("#")]),t._v(" 部署 Deployment (Deploy)")]),t._v(" "),e("p",[t._v("部署表示用户对Kubernetes集群的一次更新操作。部署是一个比RS应用模式更广的API对象，可以是创建一个新的服务，更新一个新的服务，也可以是滚动升级一个服务。滚动升级一个服务，实际是创建一个新的RS，然后逐渐将新RS中副本数增加到理想状态，将旧RS中的副本数减小到0的复合操作；这样一个复合操作用一个RS是不太好描述的，所以用一个更通用的Deployment来描述。以Kubernetes的发展方向，未来对所有长期伺服型的的业务的管理，都会通过Deployment来管理。")]),t._v(" "),e("p",[t._v("Deployment 为 Pod 和 RS (下一代RC) 提供了一个声明式定义(declarative)方法，用来替代以前的ReplicationController 来方便的管理应用。典型的应用场景包括：")]),t._v(" "),e("ul",[e("li",[t._v("定义Deployment来创建Pod和ReplicaSet")]),t._v(" "),e("li",[t._v("滚动升级和回滚应用")]),t._v(" "),e("li",[t._v("扩容和缩容")]),t._v(" "),e("li",[t._v("暂停和继续Deployment")])]),t._v(" "),e("p",[t._v("您只需要在 Deployment 中描述您想要的目标状态是什么，Deployment Controller 就会帮您将 Pod 和 ReplicaSet 的实际状态改变到您的目标状态。您可以定义一个全新的 Deployment 来创建 ReplicaSet 或者删除已有的 Deployment 并创建一个新的来替换。")]),t._v(" "),e("p",[t._v("::: warning 注意\n不该手动管理由 Deployment 创建的 ReplicaSet，否则您就篡越了 Deployment Controller 的职责！\n:::")]),t._v(" "),e("p",[t._v("典型的用例如下：")]),t._v(" "),e("ul",[e("li",[t._v("使用Deployment来创建ReplicaSet。ReplicaSet在后台创建pod。检查启动状态，看它是成功还是失败。")]),t._v(" "),e("li",[t._v("然后，通过更新Deployment的PodTemplateSpec字段来声明Pod的新状态。这会创建一个新的ReplicaSet，Deployment会按照控制的速率将pod从旧的ReplicaSet移动到新的ReplicaSet中。")]),t._v(" "),e("li",[t._v("如果当前状态不稳定，回滚到之前的Deployment revision。每次回滚都会更新Deployment的revision。")]),t._v(" "),e("li",[t._v("扩容Deployment以满足更高的负载。")]),t._v(" "),e("li",[t._v("暂停Deployment来应用PodTemplateSpec的多个修复，然后恢复上线。")]),t._v(" "),e("li",[t._v("根据Deployment 的状态判断上线是否hang住了。")]),t._v(" "),e("li",[t._v("清除旧的不必要的 ReplicaSet。")])]),t._v(" "),e("h3",{attrs:{id:"yaml示例-3"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#yaml示例-3","aria-hidden":"true"}},[t._v("#")]),t._v(" yaml示例")]),t._v(" "),e("p",[t._v("比如一个简单的nginx应用可以定义为")]),t._v(" "),e("div",{staticClass:"language-yaml extra-class"},[e("pre",{pre:!0,attrs:{class:"language-yaml"}},[e("code",[e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" extensions/v1beta1\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Deployment\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("deployment\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("replicas")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("template")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("labels")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("app")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containers")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx\n        "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("latest\n        "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ports")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containerPort")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),t._v("\n")])])]),e("h3",{attrs:{id:"deployment-的常用操作"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#deployment-的常用操作","aria-hidden":"true"}},[t._v("#")]),t._v(" Deployment 的常用操作")]),t._v(" "),e("p",[t._v("扩容：")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("$ kubectl scale deployment nginx-deployment --replicas 10\n")])])]),e("p",[t._v("如果集群支持 horizontal pod autoscaling 的话，还可以为Deployment设置自动扩展：")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("$ kubectl autoscale deployment nginx-deployment --min"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("10 --max"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("15 --cpu-percent"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("80\n")])])]),e("p",[t._v("更新镜像也比较简单:")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("$ kubectl "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),t._v(" image deployment/nginx-deployment nginx"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("nginx:1.9.1\n")])])]),e("p",[t._v("回滚：")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("$ kubectl rollout undo deployment/nginx-deployment\n")])])]),e("imgLink",{attrs:{src:"date/20190403/deployment-cheatsheet.png"}}),t._v(" "),e("h3",{attrs:{id:"创建-deployment"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#创建-deployment","aria-hidden":"true"}},[t._v("#")]),t._v(" 创建 Deployment")]),t._v(" "),e("p",[t._v("下面是一个 Deployment 示例，它创建了一个 ReplicaSet 来启动3个 nginx pod。")]),t._v(" "),e("p",[t._v("下载示例文件并执行命令：")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("$ kubectl create -f https://kubernetes.io/docs/user-guide/nginx-deployment.yaml --record\ndeployment "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"nginx-deployment"')]),t._v(" created\n")])])]),e("p",[t._v("将kubectl的 "),e("code",[t._v("--record")]),t._v(" 的 flag 设置为 "),e("code",[t._v("true")]),t._v("可以在 annotation 中记录当前命令创建或者升级了该资源。这在未来会很有用，例如，查看在每个 Deployment revision 中执行了哪些命令。")]),t._v(" "),e("p",[t._v("然后立即执行 "),e("code",[t._v("get")]),t._v(" 将获得如下结果：")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("$ kubectl get deployments\nNAME               DESIRED   CURRENT   UP-TO-DATE   AVAILABLE   AGE\nnginx-deployment   3         0         0            0           1s\n")])])]),e("p",[t._v("输出结果表明我们希望的repalica数是3（根据deployment中的"),e("code",[t._v(".spec.replicas")]),t._v("配置）当前replica数（ "),e("code",[t._v(".status.replicas")]),t._v("）是0, 最新的replica数（"),e("code",[t._v(".status.updatedReplicas")]),t._v("）是0，可用的replica数（"),e("code",[t._v(".status.availableReplicas")]),t._v("）是0。")]),t._v(" "),e("p",[t._v("过几秒后再执行 "),e("code",[t._v("get")]),t._v(" 命令，将获得如下输出：")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("$ kubectl get deployments\nNAME               DESIRED   CURRENT   UP-TO-DATE   AVAILABLE   AGE\nnginx-deployment   3         3         3            3           18s\n")])])]),e("p",[t._v("我们可以看到Deployment已经创建了3个 replica，所有的 replica 都已经是最新的了（包含最新的pod template），可用的（根据Deployment中的"),e("code",[t._v(".spec.minReadySeconds")]),t._v("声明，处于已就绪状态的pod的最少个数）。执行"),e("code",[t._v("kubectl get rs")]),t._v("和"),e("code",[t._v("kubectl get pods")]),t._v("会显示Replica Set（RS）和Pod已创建。")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("$ kubectl get rs\nNAME                          DESIRED   CURRENT   READY   AGE\nnginx-deployment-2035384211   3         3         0       18s\n")])])]),e("p",[t._v("您可能会注意到 ReplicaSet 的名字总是"),e("code",[t._v("<Deployment的名字>-<pod template的hash值>")]),t._v("。")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("$ kubectl get pods --show-labels\nNAME                                READY     STATUS    RESTARTS   AGE       LABELS\nnginx-deployment-2035384211-7ci7o   1/1       Running   0          18s       app"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("nginx,pod-template-hash"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("2035384211\nnginx-deployment-2035384211-kzszj   1/1       Running   0          18s       app"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("nginx,pod-template-hash"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("2035384211\nnginx-deployment-2035384211-qqcnn   1/1       Running   0          18s       app"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("nginx,pod-template-hash"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("2035384211\n")])])]),e("p",[t._v("刚创建的Replica Set将保证总是有3个 nginx 的 pod 存在。")]),t._v(" "),e("p",[e("strong",[t._v("注意：")]),t._v(" 您必须在 Deployment 中的 selector 指定正确的 pod template label（在该示例中是 "),e("code",[t._v("app = nginx")]),t._v("），不要跟其他的 controller 的 selector 中指定的 pod template label 搞混了（包括 Deployment、Replica Set、Replication Controller 等）。"),e("strong",[t._v("Kubernetes 本身并不会阻止您任意指定 pod template label")]),t._v(" ，但是如果您真的这么做了，这些 controller 之间会相互打架，并可能导致不正确的行为。")]),t._v(" "),e("h2",{attrs:{id:"守护进程集-daemonset-ds"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#守护进程集-daemonset-ds","aria-hidden":"true"}},[t._v("#")]),t._v(" 守护进程集 DaemonSet (DS)")]),t._v(" "),e("p",[e("em",[t._v("DaemonSet")]),t._v(" 确保全部（或者一些）Node 上运行一个 Pod 的副本。当有 Node 加入集群时，也会为他们新增一个 Pod 。当有 Node 从集群移除时，这些 Pod 也会被回收。删除 DaemonSet 将会删除它创建的所有 Pod。")]),t._v(" "),e("p",[t._v("使用 DaemonSet 一些典型使用场景:")]),t._v(" "),e("ul",[e("li",[t._v("运行集群存储 daemon，例如在每个 Node 上运行 "),e("code",[t._v("glusterd")]),t._v("、"),e("code",[t._v("ceph")]),t._v("。")]),t._v(" "),e("li",[t._v("在每个 Node 上运行日志收集 daemon，例如"),e("code",[t._v("fluentd")]),t._v("、"),e("code",[t._v("logstash")]),t._v("。")]),t._v(" "),e("li",[t._v("在每个 Node 上运行监控 daemon，例如 "),e("a",{attrs:{href:"https://github.com/prometheus/node_exporter",target:"_blank",rel:"noopener noreferrer"}},[t._v("Prometheus Node Exporter"),e("OutboundLink")],1),t._v("、"),e("code",[t._v("collectd")]),t._v("、Datadog 代理、New Relic 代理，或 Ganglia "),e("code",[t._v("gmond")]),t._v("。")])]),t._v(" "),e("p",[t._v("一个简单的用法是，在所有的 Node 上都存在一个 DaemonSet，将被作为每种类型的 daemon 使用。 一个稍微复杂的用法可能是，对单独的每种类型的 daemon 使用多个 DaemonSet，但具有不同的标志，和/或对不同硬件类型具有不同的内存、CPU要求。")]),t._v(" "),e("h3",{attrs:{id:"yaml示例-4"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#yaml示例-4","aria-hidden":"true"}},[t._v("#")]),t._v(" yaml示例")]),t._v(" "),e("p",[t._v("下面的描述文件创建了一个运行着fluentd-elasticsearch镜像的DaemonSet对象：")]),t._v(" "),e("div",{staticClass:"language-yaml extra-class"},[e("pre",{pre:!0,attrs:{class:"language-yaml"}},[e("code",[e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" apps/v1\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" DaemonSet\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" fluentd"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("elasticsearch\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("namespace")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" kube"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("system\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("labels")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("k8s-app")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" fluentd"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("logging\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("selector")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("matchLabels")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 与spec.template.metadata.labels一致")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" fluentd"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("elasticsearch\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("template")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# pod模板")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("labels")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" fluentd"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("elasticsearch\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("tolerations")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("key")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" node"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("role.kubernetes.io/master\n        "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("effect")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" NoSchedule\n      "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containers")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 容器模板")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" fluentd"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("elasticsearch\n        "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" k8s.gcr.io/fluentd"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("elasticsearch"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.20")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("resources")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n          "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("limits")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("memory")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 200Mi\n          "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("requests")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("cpu")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 100m\n            "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("memory")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 200Mi\n        "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("volumeMounts")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" varlog\n          "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("mountPath")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" /var/log\n        "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" varlibdockercontainers\n          "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("mountPath")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" /var/lib/docker/containers\n          "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("readOnly")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("true")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("terminationGracePeriodSeconds")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("30")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("volumes")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 对外暴露的卷")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" varlog\n        "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("hostPath")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n          "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("path")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" /var/log\n      "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" varlibdockercontainers\n        "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("hostPath")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n          "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("path")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" /var/lib/docker/containers\n")])])]),e("p",[t._v("在Kubernetes 1.8之后，必须指定.spec.selector来确定这个DaemonSet对象管理的Pod，通常与.spec.template.metadata.labels中定义的Pod的label一致。")]),t._v(" "),e("h3",{attrs:{id:"pod模板"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#pod模板","aria-hidden":"true"}},[t._v("#")]),t._v(" Pod模板")]),t._v(" "),e("p",[e("code",[t._v(".spec")]),t._v(" 唯一必需的字段是 "),e("code",[t._v(".spec.template")]),t._v("。")]),t._v(" "),e("p",[e("code",[t._v(".spec.template")]),t._v(" 是一个 "),e("a",{attrs:{href:"https://kubernetes.io/docs/user-guide/replication-controller/#pod-template",target:"_blank",rel:"noopener noreferrer"}},[t._v("Pod 模板"),e("OutboundLink")],1),t._v("。 它与 "),e("a",{attrs:{href:"https://kubernetes.io/docs/user-guide/pods",target:"_blank",rel:"noopener noreferrer"}},[t._v("Pod"),e("OutboundLink")],1),t._v(" 具有相同的 schema，除了它是嵌套的，而且不具有 "),e("code",[t._v("apiVersion")]),t._v(" 或 "),e("code",[t._v("kind")]),t._v(" 字段。")]),t._v(" "),e("p",[t._v("Pod 除了必须字段外，在 DaemonSet 中的 Pod 模板必须指定合理的标签（查看 "),e("a",{attrs:{href:"https://jimmysong.io/kubernetes-handbook/concepts/daemonset.html#pod-selector",target:"_blank",rel:"noopener noreferrer"}},[t._v("pod selector"),e("OutboundLink")],1),t._v("）。")]),t._v(" "),e("p",[t._v("在 DaemonSet 中的 Pod 模板必需具有一个值为 "),e("code",[t._v("Always")]),t._v(" 的 "),e("a",{attrs:{href:"https://kubernetes.io/docs/user-guide/pod-states",target:"_blank",rel:"noopener noreferrer"}},[e("code",[t._v("RestartPolicy")]),e("OutboundLink")],1),t._v("，或者未指定它的值，默认是 "),e("code",[t._v("Always")]),t._v("。")]),t._v(" "),e("h3",{attrs:{id:"daemon-pods-的调度特性"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#daemon-pods-的调度特性","aria-hidden":"true"}},[t._v("#")]),t._v(" Daemon Pods 的调度特性")]),t._v(" "),e("p",[t._v("默认情况下，Pod被分配到具体哪一台Node上运行是由Scheduler（负责分配调度Pod到集群内的Node上，它通过监听ApiServer，查询还未分配Node的Pod，然后根据调度策略为这些Pod分配Node）决定的。但是，DaemonSet对象创建的Pod却拥有一些特殊的特性：")]),t._v(" "),e("ul",[e("li",[t._v("Node的 "),e("a",{attrs:{href:"https://kubernetes.io/docs/admin/node/#manual-node-administration",target:"_blank",rel:"noopener noreferrer"}},[e("code",[t._v("unschedulable")]),e("OutboundLink")],1),t._v("属性会被DaemonSet Controller忽略。")]),t._v(" "),e("li",[t._v("即使Scheduler还未启动，DaemonSet Controller也能够创建并运行Pod。")])]),t._v(" "),e("h2",{attrs:{id:"有状态副本集-stateful-set"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#有状态副本集-stateful-set","aria-hidden":"true"}},[t._v("#")]),t._v(" 有状态副本集 Stateful Set")]),t._v(" "),e("p",[t._v("StatefulSet 作为 Controller 为 Pod 提供唯一的标识。它可以保证部署和 scale 的顺序。")]),t._v(" "),e("p",[t._v("StatefulSet是为了解决有状态服务的问题（对应Deployments和ReplicaSets是为无状态服务而设计），其应用场景包括：")]),t._v(" "),e("ul",[e("li",[t._v("稳定的持久化存储，即Pod重新调度后还是能访问到相同的持久化数据，基于PVC来实现")]),t._v(" "),e("li",[t._v("稳定的网络标志，即Pod重新调度后其PodName和HostName不变，基于Headless Service（即没有Cluster IP的Service）来实现")]),t._v(" "),e("li",[t._v("有序部署，有序扩展，即Pod是有顺序的，在部署或者扩展的时候要依据定义的顺序依次依次进行（即从0到N-1，在下一个Pod运行之前所有之前的Pod必须都是Running和Ready状态），基于init containers来实现")]),t._v(" "),e("li",[t._v("有序收缩，有序删除（即从N-1到0）")])]),t._v(" "),e("p",[t._v("从上面的应用场景可以发现，StatefulSet由以下几个部分组成：")]),t._v(" "),e("ul",[e("li",[t._v("用于定义网络标志（DNS domain）的Headless Service")]),t._v(" "),e("li",[t._v("用于创建PersistentVolumes的volumeClaimTemplates")]),t._v(" "),e("li",[t._v("定义具体应用的StatefulSet")])]),t._v(" "),e("p",[t._v("StatefulSet中每个Pod的DNS格式为"),e("code",[t._v("statefulSetName-{0..N-1}.serviceName.namespace.svc.cluster.local")]),t._v("，其中")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("serviceName")]),t._v("为Headless Service的名字")]),t._v(" "),e("li",[e("code",[t._v("0..N-1")]),t._v("为Pod所在的序号，从0开始到N-1")]),t._v(" "),e("li",[e("code",[t._v("statefulSetName")]),t._v("为StatefulSet的名字")]),t._v(" "),e("li",[e("code",[t._v("namespace")]),t._v("为服务所在的namespace，Headless Servic和StatefulSet必须在相同的namespace")]),t._v(" "),e("li",[e("code",[t._v(".cluster.local")]),t._v("为Cluster Domain")])]),t._v(" "),e("h3",{attrs:{id:"使用-stateful-set"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#使用-stateful-set","aria-hidden":"true"}},[t._v("#")]),t._v(" 使用 Stateful Set")]),t._v(" "),e("p",[t._v("Stateful Set 适用于有以下某个或多个需求的应用：")]),t._v(" "),e("ul",[e("li",[t._v("稳定，唯一的网络标志。")]),t._v(" "),e("li",[t._v("稳定，持久化存储。")]),t._v(" "),e("li",[t._v("有序，优雅地部署和 scale。")]),t._v(" "),e("li",[t._v("有序，优雅地删除和终止。")]),t._v(" "),e("li",[t._v("有序，自动的滚动升级。")])]),t._v(" "),e("p",[t._v("在上文中，稳定是 Pod （重新）调度中持久性的代名词。 如果应用程序不需要任何稳定的标识符、有序部署、删除和 scale，则应该使用提供一组无状态副本的 controller 来部署应用程序，例如 "),e("a",{attrs:{href:"https://kubernetes.io/docs/concepts/workloads/controllers/deployment",target:"_blank",rel:"noopener noreferrer"}},[t._v("Deployment"),e("OutboundLink")],1),t._v(" 或 "),e("a",{attrs:{href:"https://kubernetes.io/docs/concepts/workloads/controllers/replicaset",target:"_blank",rel:"noopener noreferrer"}},[t._v("ReplicaSet"),e("OutboundLink")],1),t._v(" 可能更适合您的无状态需求。")]),t._v(" "),e("h3",{attrs:{id:"yaml示例-5"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#yaml示例-5","aria-hidden":"true"}},[t._v("#")]),t._v(" yaml示例")]),t._v(" "),e("p",[t._v("下面的示例中描述了 StatefulSet 中的组件。")]),t._v(" "),e("ul",[e("li",[t._v("一个名为 nginx 的 headless service，用于控制网络域。")]),t._v(" "),e("li",[t._v("一个名为 web 的 StatefulSet，它的 Spec 中指定在有 3 个运行 nginx 容器的 Pod。")]),t._v(" "),e("li",[t._v("volumeClaimTemplates 使用 PersistentVolume Provisioner 提供的 "),e("a",{attrs:{href:"https://kubernetes.io/docs/concepts/storage/volumes",target:"_blank",rel:"noopener noreferrer"}},[t._v("PersistentVolumes"),e("OutboundLink")],1),t._v(" 作为稳定存储。")])]),t._v(" "),e("div",{staticClass:"language-yaml extra-class"},[e("pre",{pre:!0,attrs:{class:"language-yaml"}},[e("code",[e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" v1\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Service\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("labels")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("app")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ports")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("port")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" web\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("clusterIP")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" None\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("selector")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("app")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("---")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" apps/v1beta1\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" StatefulSet\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" web\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("serviceName")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"nginx"')]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("replicas")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("template")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("labels")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("app")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("terminationGracePeriodSeconds")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containers")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx\n        "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" gcr.io/google_containers/nginx"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("slim"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.8")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ports")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containerPort")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),t._v("\n          "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" web\n        "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("volumeMounts")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" www\n          "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("mountPath")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" /usr/share/nginx/html\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("volumeClaimTemplates")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" www\n      "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("annotations")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("volume.beta.kubernetes.io/storage-class")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" anything\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("accessModes")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ReadWriteOnce"')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("resources")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("requests")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n          "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("storage")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 1Gi\n")])])]),e("h2",{attrs:{id:"参考资料"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#参考资料","aria-hidden":"true"}},[t._v("#")]),t._v(" 参考资料")]),t._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"https://cloud.tencent.com/info/1438d8e12cfaac3c0fffbe50328ac9c7.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Pod 调度"),e("OutboundLink")],1)])])],1)},[],!1,null,null,null);a.default=n.exports}}]);