(window.webpackJsonp=window.webpackJsonp||[]).push([[293],{695:function(t,s,_){"use strict";_.r(s);var a={props:["slot-key"],mounted(){this.$nextTick(function(){this.$vuepress.$emit("AsyncMarkdownContentMounted",this.slotKey)})}},r=_(0),n=Object(r.a)(a,function(){var t=this,s=t.$createElement,_=t._self._c||s;return _("ContentSlotsDistributor",{attrs:{"slot-key":t.slotKey}},[_("h1",{attrs:{id:"其他字符串相关函数"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#其他字符串相关函数","aria-hidden":"true"}},[t._v("#")]),t._v(" 其他字符串相关函数")]),t._v(" "),_("h2",{attrs:{id:"str-word-count"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#str-word-count","aria-hidden":"true"}},[t._v("#")]),t._v(" str_word_count")]),t._v(" "),_("p",[_("code",[t._v("str_word_count(string,return,char)")]),t._v(" 计算字符串中的单词数。")]),t._v(" "),_("p",[t._v("return: 可选。规定 str_word_count() 函数的返回值。")]),t._v(" "),_("ul",[_("li",[t._v("0 - 默认。返回找到的单词的数目。")]),t._v(" "),_("li",[t._v("1 - 返回包含字符串中的单词的数组。")]),t._v(" "),_("li",[t._v("2 - 返回一个数组，其中的键名是单词在字符串中的位置，键值是实际的单词。")])]),t._v(" "),_("div",{staticClass:"language-php extra-class"},[_("pre",{pre:!0,attrs:{class:"language-php"}},[_("code",[_("span",{attrs:{class:"token function"}},[t._v("str_word_count")]),_("span",{attrs:{class:"token punctuation"}},[t._v("(")]),_("span",{attrs:{class:"token double-quoted-string string"}},[t._v('"Hello world!"')]),_("span",{attrs:{class:"token punctuation"}},[t._v(")")]),_("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),_("span",{attrs:{class:"token comment"}},[t._v("// 2")]),t._v("\n"),_("span",{attrs:{class:"token function"}},[t._v("str_word_count")]),_("span",{attrs:{class:"token punctuation"}},[t._v("(")]),_("span",{attrs:{class:"token double-quoted-string string"}},[t._v('"Hello world!"')]),_("span",{attrs:{class:"token punctuation"}},[t._v(",")]),_("span",{attrs:{class:"token number"}},[t._v("2")]),_("span",{attrs:{class:"token punctuation"}},[t._v(")")]),_("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),_("span",{attrs:{class:"token comment"}},[t._v("// Array([0] => Hello, [6] => world)")]),t._v("\n")])])]),_("h2",{attrs:{id:"其他字符串函数"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#其他字符串函数","aria-hidden":"true"}},[t._v("#")]),t._v(" 其他字符串函数")]),t._v(" "),_("table",[_("thead",[_("tr",[_("th",[t._v("函数")]),t._v(" "),_("th",[t._v("说明")]),t._v(" "),_("th",[t._v("实例")]),t._v(" "),_("th",[t._v("返回")])])]),t._v(" "),_("tbody",[_("tr",[_("td",[t._v("chr")]),t._v(" "),_("td",[t._v("从指定 ASCII 值返回字符")]),t._v(" "),_("td",[t._v("chr(65)")]),t._v(" "),_("td",[t._v("'A'")])]),t._v(" "),_("tr",[_("td",[t._v("ord")]),t._v(" "),_("td",[t._v("返回字符串中第一个字符的 ASCII 值")]),t._v(" "),_("td",[t._v('ord("Hello")')]),t._v(" "),_("td",[t._v("72")])]),t._v(" "),_("tr",[_("td",[t._v("md5")]),t._v(" "),_("td",[t._v("计算字符串的 MD5 散列")]),t._v(" "),_("td",[t._v('md5("Hello")')]),t._v(" "),_("td")]),t._v(" "),_("tr",[_("td",[t._v("crc32")]),t._v(" "),_("td",[t._v("计算一个字符串的 32 位 CRC（循环冗余校验）")]),t._v(" "),_("td",[t._v('crc32("Hello")')]),t._v(" "),_("td")]),t._v(" "),_("tr",[_("td",[t._v("sha1")]),t._v(" "),_("td",[t._v("计算字符串的 SHA-1 散列")]),t._v(" "),_("td",[t._v("sha1('Hello')")]),t._v(" "),_("td")]),t._v(" "),_("tr",[_("td",[t._v("str_repeat")]),t._v(" "),_("td",[t._v("把字符串重复指定的次数")]),t._v(" "),_("td",[t._v('str_repeat(".",3)')]),t._v(" "),_("td",[t._v("'...'")])])])])])},[],!1,null,null,null);n.options.__file="Other.md";s.default=n.exports}}]);