(window.webpackJsonp=window.webpackJsonp||[]).push([[286],{835:function(t,s,n){"use strict";n.r(s);var a=n(1),r=Object(a.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"content"},[n("h1",{attrs:{id:"其他字符串相关函数"}},[t._v("其他字符串相关函数")]),n("h2",{attrs:{id:"str-word-count"}},[t._v("str_word_count")]),n("p",[n("code",[t._v("str_word_count(string,return,char)")]),t._v(" 计算字符串中的单词数。")]),n("p",[t._v("return: 可选。规定 str_word_count() 函数的返回值。")]),n("ul",[n("li",[t._v("0 - 默认。返回找到的单词的数目。")]),n("li",[t._v("1 - 返回包含字符串中的单词的数组。")]),n("li",[t._v("2 - 返回一个数组，其中的键名是单词在字符串中的位置，键值是实际的单词。")])]),n("div",{staticClass:"language-php line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-php"}},[n("code",[n("span",{attrs:{class:"token function"}},[t._v("str_word_count")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token double-quoted-string string"}},[t._v('"Hello world!"')]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{attrs:{class:"token comment"}},[t._v("// 2")]),t._v("\n"),n("span",{attrs:{class:"token function"}},[t._v("str_word_count")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token double-quoted-string string"}},[t._v('"Hello world!"')]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{attrs:{class:"token number"}},[t._v("2")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{attrs:{class:"token comment"}},[t._v("// Array([0] => Hello, [6] => world)")]),t._v("\n")])]),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br")])]),n("h2",{attrs:{id:"其他字符串函数"}},[t._v("其他字符串函数")]),n("table",[n("thead",[n("tr",[n("th",[t._v("函数")]),n("th",[t._v("说明")]),n("th",[t._v("实例")]),n("th",[t._v("返回")])])]),n("tbody",[n("tr",[n("td",[t._v("chr")]),n("td",[t._v("从指定 ASCII 值返回字符")]),n("td",[t._v("chr(65)")]),n("td",[t._v("'A'")])]),n("tr",[n("td",[t._v("ord")]),n("td",[t._v("返回字符串中第一个字符的 ASCII 值")]),n("td",[t._v('ord("Hello")')]),n("td",[t._v("72")])]),n("tr",[n("td",[t._v("md5")]),n("td",[t._v("计算字符串的 MD5 散列")]),n("td",[t._v('md5("Hello")')]),n("td")]),n("tr",[n("td",[t._v("crc32")]),n("td",[t._v("计算一个字符串的 32 位 CRC（循环冗余校验）")]),n("td",[t._v('crc32("Hello")')]),n("td")]),n("tr",[n("td",[t._v("sha1")]),n("td",[t._v("计算字符串的 SHA-1 散列")]),n("td",[t._v("sha1('Hello')")]),n("td")]),n("tr",[n("td",[t._v("str_repeat")]),n("td",[t._v("把字符串重复指定的次数")]),n("td",[t._v('str_repeat(".",3)')]),n("td",[t._v("'...'")])])])])])}],!1,null,null,null);s.default=r.exports}}]);