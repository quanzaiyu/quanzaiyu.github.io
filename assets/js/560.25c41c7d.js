(window.webpackJsonp=window.webpackJsonp||[]).push([[560],{752:function(e,a,r){"use strict";r.r(a);var s=r(1),t=Object(s.a)({},function(){var e=this,a=e.$createElement,r=e._self._c||a;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("h1",{attrs:{id:"centos下生成自签名的证书的方法详解"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#centos下生成自签名的证书的方法详解","aria-hidden":"true"}},[e._v("#")]),e._v(" CentOS下生成自签名的证书的方法详解")]),e._v(" "),r("p",[e._v("## 生成自签名的证书")]),e._v(" "),r("p",[e._v("通常要配置 https 的服务器，都需要一个由正式的 CA 机构认证的 X509 证书。当客户端连接 https 服务器时，会通过 CA 的共钥来检查这个证书的正确性。但要获得 CA 的证书是一件很麻烦的事情，而且还要花费一定的费用。因此通常一些小的机构会是使用自签名的证书。也就是自己做 CA，给自己的服务器证书签名。")]),e._v(" "),r("p",[e._v("这个过程有两个主要的步骤，首先是生成自己的 CA 证书，然后再生成各个服务器的证书并为它们签名。 我是用 OpenSSL 来生成自签名证书的。")]),e._v(" "),r("h3",{attrs:{id:"是制作-ca-的证书"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#是制作-ca-的证书","aria-hidden":"true"}},[e._v("#")]),e._v(" 是制作 CA 的证书")]),e._v(" "),r("div",{staticClass:"language-bash extra-class"},[r("pre",{pre:!0,attrs:{class:"language-bash"}},[r("code",[e._v("$ openssl genrsa -des3 -out my-ca.key 2048\n$ openssl req -new -x509 -days 3650 -key my-ca.key -out my-ca.crt\n")])])]),r("p",[e._v("这会生成 "),r("code",[e._v("my-ca.key")]),e._v(" 和 "),r("code",[e._v("my-ca.crt")]),e._v(" 文件，前者存放着使用 my-ca.crt 制作签名时必须的密钥，应当妥善保管。而后者是可以公开的。上面的命令为 my-ca.key 设定的有效期为 10 年。")]),e._v(" "),r("p",[e._v("用命令")]),e._v(" "),r("div",{staticClass:"language-bash extra-class"},[r("pre",{pre:!0,attrs:{class:"language-bash"}},[r("code",[e._v("openssl x509 -in my-ca.crt -text -noout\n")])])]),r("p",[e._v("可以查看 my-ca.crt 文件的内容。")]),e._v(" "),r("h3",{attrs:{id:"为自己的服务器生成证书"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#为自己的服务器生成证书","aria-hidden":"true"}},[e._v("#")]),e._v(" 为自己的服务器生成证书")]),e._v(" "),r("p",[e._v("有了 CA 证书之后，就可以为自己的服务器生成证书了")]),e._v(" "),r("div",{staticClass:"language-bash extra-class"},[r("pre",{pre:!0,attrs:{class:"language-bash"}},[r("code",[e._v("$ openssl genrsa -des3 -out mars-server.key 1024\n$ openssl req -new -key mars-server.key -out mars-server.csr\n$ openssl x509 -req -in mars-server.csr -out mars-server.crt -sha1 -CA my-ca.crt -CAkey my-ca.key -CAcreateserial -days 3650\n")])])]),r("p",[e._v("前两个命令会生成 key、csr 文件，最后一个命令则通过 my-ca.crt 为 "),r("code",[e._v("mars-server.csr")]),e._v(" 制作了 x509 的签名证书。")]),e._v(" "),r("p",[r("strong",[e._v("需要注意的是，在执行上述第二个命令时，Common Name 选项应当输入的是服务器的域名，否则在用户通过 https 协议访问时每次都会有额外的提示信息。")])]),e._v(" "),r("p",[e._v("用命令")]),e._v(" "),r("div",{staticClass:"language-bash extra-class"},[r("pre",{pre:!0,attrs:{class:"language-bash"}},[r("code",[e._v("$ openssl x509 -in mars-server.crt -text -noout\n")])])]),r("p",[e._v("可以查看 mars-server.crt 文件的内容。")]),e._v(" "),r("h2",{attrs:{id:"避免输入密码"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#避免输入密码","aria-hidden":"true"}},[e._v("#")]),e._v(" 避免输入密码")]),e._v(" "),r("p",[e._v("由于大多数 Apache 服务器都是在服务器启动时自动启动，为了避免在启动 Apache 时输入密码，可以用以下命令生成不加密的 mars-server.key 文件：")]),e._v(" "),r("div",{staticClass:"language-bash extra-class"},[r("pre",{pre:!0,attrs:{class:"language-bash"}},[r("code",[e._v("$ openssl rsa -in mars-server.key -out mars-server.key.insecure\n")])])]),r("p",[e._v("用新生成的 mars-server.key.insecure 代替原有的 key 文件即可。")]),e._v(" "),r("h2",{attrs:{id:"证书类型"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#证书类型","aria-hidden":"true"}},[e._v("#")]),e._v(" 证书类型")]),e._v(" "),r("p",[e._v("在ssh协议中，采用一种非对称加密的方式保障通信安全，即a，b通过tcp建立连接后，b生成一对公私钥并将公钥发送给a，a再将密钥用b的公钥发送给a，后续通信便使用密钥加密。\n在https协议中，有证书(ca:包含公钥及其他一些信息)这种存在。即在http的基础上加入ssl层，使数据在传输过程中加密，证书就是这个过程的一个认证官。")]),e._v(" "),r("ul",[r("li",[e._v("常见公钥后缀：pem crt key")]),e._v(" "),r("li",[e._v("常见私钥后缀：pfx p12 pem key")])]),e._v(" "),r("h2",{attrs:{id:"证书转换"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#证书转换","aria-hidden":"true"}},[e._v("#")]),e._v(" 证书转换")]),e._v(" "),r("p",[e._v("pem => crt")]),e._v(" "),r("div",{staticClass:"language-bash extra-class"},[r("pre",{pre:!0,attrs:{class:"language-bash"}},[r("code",[e._v("$ openssl x509 -outform der -in your-cert.pem -out your-cert.crt\n")])])]),r("h2",{attrs:{id:"参考资料"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#参考资料","aria-hidden":"true"}},[e._v("#")]),e._v(" 参考资料")]),e._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://www.jb51.net/os/RedHat/519231.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("CentOS下生成自签名的证书的方法详解"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://blog.csdn.net/qq_37049781/article/details/84837342",target:"_blank",rel:"noopener noreferrer"}},[e._v("证书之间的转换（crt pem key）"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://vimsky.com/article/3608.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("如何将.pem转换为.crt和.key？"),r("OutboundLink")],1)])])])},[],!1,null,null,null);a.default=t.exports}}]);